

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 12 15:38:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  000E                     	;# 
   460  000E                     	;# 
   461  000F                     	;# 
   462  0010                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0013                     	;# 
   466  0014                     	;# 
   467  0015                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  001B                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  001D                     	;# 
   478  001E                     	;# 
   479  001F                     	;# 
   480  0081                     	;# 
   481  0085                     	;# 
   482  0086                     	;# 
   483  0087                     	;# 
   484  0088                     	;# 
   485  0089                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  008F                     	;# 
   490  0090                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0094                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  0105                     	;# 
   509  0107                     	;# 
   510  0108                     	;# 
   511  0109                     	;# 
   512  010C                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  010F                     	;# 
   517  0185                     	;# 
   518  0187                     	;# 
   519  0188                     	;# 
   520  0189                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0014                     _SSPCONbits	set	20
   524  001E                     _ADRESH	set	30
   525  0010                     _T1CONbits	set	16
   526  000B                     _INTCONbits	set	11
   527  0013                     _SSPBUF	set	19
   528  0014                     _SSPCON	set	20
   529  000C                     _PIR1bits	set	12
   530  001F                     _ADCON0bits	set	31
   531  0086                     _TRISBbits	set	134
   532  0094                     _SSPSTATbits	set	148
   533  008F                     _OSCCONbits	set	143
   534  0091                     _SSPCON2bits	set	145
   535  0087                     _TRISCbits	set	135
   536  0094                     _SSPSTAT	set	148
   537  0093                     _SSPADD	set	147
   538  0091                     _SSPCON2	set	145
   539  008C                     _PIE1bits	set	140
   540  009F                     _ADCON1bits	set	159
   541  048C                     _ACKEN	set	1164
   542  0189                     _ANSELHbits	set	393
   543  0188                     _ANSEL	set	392
   544                           
   545                           ; #config settings
   546  0000                     
   547                           	psect	cinit
   548  0011                     start_initialization:	
   549  0011                     __initialization:	
   550                           
   551                           ; Clear objects allocated to COMMON
   552  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   553  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   554  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   555  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   556  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   557  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   558  0017                     end_of_initialization:	
   559                           ;End of C runtime variable initialization code
   560                           
   561  0017                     __end_of__initialization:	
   562  0017  0183               	clrf	3
   563  0018  120A  118A  2A72   	ljmp	_main	;jump to C main() function
   564                           
   565                           	psect	bssCOMMON
   566  0078                     __pbssCOMMON:	
   567  0078                     _fuerza:	
   568  0078                     	ds	2
   569  007A                     _luz:	
   570  007A                     	ds	2
   571  007C                     _z:	
   572  007C                     	ds	1
   573  007D                     _x:	
   574  007D                     	ds	1
   575                           
   576                           	psect	cstackCOMMON
   577  0070                     __pcstackCOMMON:	
   578  0070                     ?_setup:	
   579  0070                     ?_adcSetup:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_adcInterrupt:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_analogInSel:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_adcFoscSel:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_oscInit:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_ISR:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_main:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?i1_analogInSel:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ??i1_analogInSel:	
   604                           ; 1 bytes @ 0x0
   605                           
   606                           
   607                           ; 1 bytes @ 0x0
   608  0070                     	ds	2
   609  0072                     i1analogInSel@analogIn:	
   610                           
   611                           ; 1 bytes @ 0x2
   612  0072                     	ds	1
   613  0073                     ??_ISR:	
   614                           
   615                           ; 1 bytes @ 0x3
   616  0073                     	ds	5
   617                           
   618                           	psect	cstackBANK0
   619  0020                     __pcstackBANK0:	
   620  0020                     ??_setup:	
   621  0020                     ??_adcSetup:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0020                     ??_adcInterrupt:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0020                     ??_analogInSel:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0020                     ??_adcFoscSel:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0020                     ?_i2c_slave_init:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0020                     ??_oscInit:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0020                     i2c_slave_init@address:	
   640                           ; 1 bytes @ 0x0
   641                           
   642                           
   643                           ; 2 bytes @ 0x0
   644  0020                     	ds	2
   645  0022                     ??_i2c_slave_init:	
   646  0022                     adcInterrupt@en:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0022                     analogInSel@analogIn:	
   650                           ; 1 bytes @ 0x2
   651                           
   652  0022                     adcFoscSel@fosc:	
   653                           ; 1 bytes @ 0x2
   654                           
   655  0022                     oscInit@freq:	
   656                           ; 1 bytes @ 0x2
   657                           
   658                           
   659                           ; 1 bytes @ 0x2
   660  0022                     	ds	1
   661  0023                     ??_main:	
   662                           
   663                           	psect	maintext
   664  0272                     __pmaintext:	
   665                           ; 1 bytes @ 0x3
   666 ;;
   667 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   668 ;;
   669 ;; *************** function _main *****************
   670 ;; Defined at:
   671 ;;		line 110 in file "Sensores.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : B00/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels required when called:    3
   691 ;; This function calls:
   692 ;;		_adcFoscSel
   693 ;;		_adcInterrupt
   694 ;;		_adcSetup
   695 ;;		_analogInSel
   696 ;;		_i2c_slave_init
   697 ;;		_oscInit
   698 ;;		_setup
   699 ;; This function is called by:
   700 ;;		Startup code after reset
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           
   705                           ;psect for function _main
   706  0272                     _main:	
   707  0272                     l1306:	
   708                           ;incstack = 0
   709                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   710                           
   711                           
   712                           ;Sensores.c: 111:     setup();
   713  0272  120A  118A  230B  120A  118A  	fcall	_setup
   714  0277                     l1308:	
   715                           
   716                           ;Sensores.c: 112:     oscInit(1);
   717  0277  3001               	movlw	1
   718  0278  120A  118A  21FB  120A  118A  	fcall	_oscInit
   719  027D                     l1310:	
   720                           
   721                           ;Sensores.c: 113:     adcSetup();
   722  027D  120A  118A  2318  120A  118A  	fcall	_adcSetup
   723                           
   724                           ;Sensores.c: 114:     adcFoscSel(1);
   725  0282  3001               	movlw	1
   726  0283  120A  118A  22CD  120A  118A  	fcall	_adcFoscSel
   727                           
   728                           ;Sensores.c: 115:     analogInSel(9);
   729  0288  3009               	movlw	9
   730  0289  120A  118A  217B  120A  118A  	fcall	_analogInSel
   731                           
   732                           ;Sensores.c: 116:     adcInterrupt(1);
   733  028E  3001               	movlw	1
   734  028F  120A  118A  22AA  120A  118A  	fcall	_adcInterrupt
   735  0294                     l1312:	
   736                           
   737                           ;Sensores.c: 117:     i2c_slave_init(0x10);
   738  0294  3010               	movlw	16
   739  0295  1283               	bcf	3,5	;RP0=0, select bank0
   740  0296  1303               	bcf	3,6	;RP1=0, select bank0
   741  0297  00A0               	movwf	i2c_slave_init@address
   742  0298  3000               	movlw	0
   743  0299  00A1               	movwf	i2c_slave_init@address+1
   744  029A  120A  118A  22EE  120A  118A  	fcall	_i2c_slave_init
   745  029F                     l1314:	
   746                           
   747                           ;Sensores.c: 120:         if (ADCON0bits.GO_DONE == 0){
   748  029F  1283               	bcf	3,5	;RP0=0, select bank0
   749  02A0  1303               	bcf	3,6	;RP1=0, select bank0
   750  02A1  189F               	btfsc	31,1	;volatile
   751  02A2  2AA4               	goto	u491
   752  02A3  2AA5               	goto	u490
   753  02A4                     u491:	
   754  02A4  2A9F               	goto	l1314
   755  02A5                     u490:	
   756  02A5                     l1316:	
   757                           
   758                           ;Sensores.c: 121:             ADCON0bits.GO_DONE = 1;
   759  02A5  149F               	bsf	31,1	;volatile
   760  02A6  2A9F               	goto	l1314
   761  02A7  120A  118A  280E   	ljmp	start
   762  02AA                     __end_of_main:	
   763                           
   764                           	psect	text1
   765  030B                     __ptext1:	
   766 ;; *************** function _setup *****************
   767 ;; Defined at:
   768 ;;		line 159 in file "Sensores.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		status,2
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0
   785 ;;      Totals:         0       0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    2
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _setup
   798  030B                     _setup:	
   799  030B                     l1212:	
   800                           ;incstack = 0
   801                           ; Regs used in _setup: [status,2]
   802                           
   803                           
   804                           ;Sensores.c: 160:     TRISBbits.TRISB0 = 1;
   805  030B  1683               	bsf	3,5	;RP0=1, select bank1
   806  030C  1303               	bcf	3,6	;RP1=0, select bank1
   807  030D  1406               	bsf	6,0	;volatile
   808                           
   809                           ;Sensores.c: 161:     TRISBbits.TRISB1 = 1;
   810  030E  1486               	bsf	6,1	;volatile
   811                           
   812                           ;Sensores.c: 162:     TRISBbits.TRISB3 = 0;
   813  030F  1186               	bcf	6,3	;volatile
   814                           
   815                           ;Sensores.c: 163:     TRISBbits.TRISB3 = 1;
   816  0310  1586               	bsf	6,3	;volatile
   817                           
   818                           ;Sensores.c: 164:     TRISBbits.TRISB4 = 1;
   819  0311  1606               	bsf	6,4	;volatile
   820  0312                     l1214:	
   821                           
   822                           ;Sensores.c: 165:     ANSEL = 0;
   823  0312  1683               	bsf	3,5	;RP0=1, select bank3
   824  0313  1703               	bsf	3,6	;RP1=1, select bank3
   825  0314  0188               	clrf	8	;volatile
   826  0315                     l1216:	
   827                           
   828                           ;Sensores.c: 166:     ANSELHbits.ANS9 = 1;
   829  0315  1489               	bsf	9,1	;volatile
   830  0316                     l1218:	
   831                           
   832                           ;Sensores.c: 167:     ANSELHbits.ANS11 = 1;
   833  0316  1589               	bsf	9,3	;volatile
   834  0317                     l216:	
   835  0317  0008               	return
   836  0318                     __end_of_setup:	
   837                           
   838                           	psect	text2
   839  01FB                     __ptext2:	
   840 ;; *************** function _oscInit *****************
   841 ;; Defined at:
   842 ;;		line 11 in file "OSCCON.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  freq            1    wreg     unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  freq            1    2[BANK0 ] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      unsigned char 
   849 ;; Registers used:
   850 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         0       0       0       0       0
   857 ;;      Locals:         0       1       0       0       0
   858 ;;      Temps:          0       2       0       0       0
   859 ;;      Totals:         0       3       0       0       0
   860 ;;Total ram usage:        3 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    2
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _oscInit
   872  01FB                     _oscInit:	
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _oscInit: [wreg-fsr0h+status,2+status,0]
   876                           ;oscInit@freq stored from wreg
   877  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   878  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   879  01FD  00A2               	movwf	oscInit@freq
   880  01FE                     l1200:	
   881                           
   882                           ;OSCCON.c: 12:     switch(freq){
   883  01FE  2A4F               	goto	l1204
   884  01FF                     l106:	
   885                           ;OSCCON.c: 13:         case 0:
   886                           
   887                           
   888                           ;OSCCON.c: 14:             OSCCONbits.IRCF2 = 1;
   889  01FF  1683               	bsf	3,5	;RP0=1, select bank1
   890  0200  1303               	bcf	3,6	;RP1=0, select bank1
   891  0201  170F               	bsf	15,6	;volatile
   892                           
   893                           ;OSCCON.c: 15:             OSCCONbits.IRCF1 = 1;
   894  0202  168F               	bsf	15,5	;volatile
   895                           
   896                           ;OSCCON.c: 16:             OSCCONbits.IRCF0 = 1;
   897  0203  160F               	bsf	15,4	;volatile
   898                           
   899                           ;OSCCON.c: 17:             OSCCONbits.OSTS = 0;
   900  0204  118F               	bcf	15,3	;volatile
   901                           
   902                           ;OSCCON.c: 18:             OSCCONbits.HTS = 1;
   903  0205  150F               	bsf	15,2	;volatile
   904                           
   905                           ;OSCCON.c: 19:             OSCCONbits.LTS = 0;
   906  0206  108F               	bcf	15,1	;volatile
   907                           
   908                           ;OSCCON.c: 20:             OSCCONbits.SCS = 1;
   909  0207  140F               	bsf	15,0	;volatile
   910                           
   911                           ;OSCCON.c: 21:             break;
   912  0208  2A71               	goto	l115
   913  0209                     l108:	
   914                           ;OSCCON.c: 22:         case 1:
   915                           
   916                           
   917                           ;OSCCON.c: 23:             OSCCONbits.IRCF2 = 1;
   918  0209  1683               	bsf	3,5	;RP0=1, select bank1
   919  020A  1303               	bcf	3,6	;RP1=0, select bank1
   920  020B  170F               	bsf	15,6	;volatile
   921                           
   922                           ;OSCCON.c: 24:             OSCCONbits.IRCF1 = 1;
   923  020C  168F               	bsf	15,5	;volatile
   924                           
   925                           ;OSCCON.c: 25:             OSCCONbits.IRCF0 = 0;
   926  020D  120F               	bcf	15,4	;volatile
   927                           
   928                           ;OSCCON.c: 26:             OSCCONbits.OSTS = 0;
   929  020E  118F               	bcf	15,3	;volatile
   930                           
   931                           ;OSCCON.c: 27:             OSCCONbits.HTS = 1;
   932  020F  150F               	bsf	15,2	;volatile
   933                           
   934                           ;OSCCON.c: 28:             OSCCONbits.LTS = 0;
   935  0210  108F               	bcf	15,1	;volatile
   936                           
   937                           ;OSCCON.c: 29:             OSCCONbits.SCS = 1;
   938  0211  140F               	bsf	15,0	;volatile
   939                           
   940                           ;OSCCON.c: 30:             break;
   941  0212  2A71               	goto	l115
   942  0213                     l109:	
   943                           ;OSCCON.c: 31:         case 2:
   944                           
   945                           
   946                           ;OSCCON.c: 32:             OSCCONbits.IRCF2 = 1;
   947  0213  1683               	bsf	3,5	;RP0=1, select bank1
   948  0214  1303               	bcf	3,6	;RP1=0, select bank1
   949  0215  170F               	bsf	15,6	;volatile
   950                           
   951                           ;OSCCON.c: 33:             OSCCONbits.IRCF1 = 0;
   952  0216  128F               	bcf	15,5	;volatile
   953                           
   954                           ;OSCCON.c: 34:             OSCCONbits.IRCF0 = 1;
   955  0217  160F               	bsf	15,4	;volatile
   956                           
   957                           ;OSCCON.c: 35:             OSCCONbits.OSTS = 0;
   958  0218  118F               	bcf	15,3	;volatile
   959                           
   960                           ;OSCCON.c: 36:             OSCCONbits.HTS = 1;
   961  0219  150F               	bsf	15,2	;volatile
   962                           
   963                           ;OSCCON.c: 37:             OSCCONbits.LTS = 0;
   964  021A  108F               	bcf	15,1	;volatile
   965                           
   966                           ;OSCCON.c: 38:             OSCCONbits.SCS = 1;
   967  021B  140F               	bsf	15,0	;volatile
   968                           
   969                           ;OSCCON.c: 39:             break;
   970  021C  2A71               	goto	l115
   971  021D                     l110:	
   972                           ;OSCCON.c: 40:         case 3:
   973                           
   974                           
   975                           ;OSCCON.c: 41:             OSCCONbits.IRCF2 = 1;
   976  021D  1683               	bsf	3,5	;RP0=1, select bank1
   977  021E  1303               	bcf	3,6	;RP1=0, select bank1
   978  021F  170F               	bsf	15,6	;volatile
   979                           
   980                           ;OSCCON.c: 42:             OSCCONbits.IRCF1 = 0;
   981  0220  128F               	bcf	15,5	;volatile
   982                           
   983                           ;OSCCON.c: 43:             OSCCONbits.IRCF0 = 0;
   984  0221  120F               	bcf	15,4	;volatile
   985                           
   986                           ;OSCCON.c: 44:             OSCCONbits.OSTS = 0;
   987  0222  118F               	bcf	15,3	;volatile
   988                           
   989                           ;OSCCON.c: 45:             OSCCONbits.HTS = 1;
   990  0223  150F               	bsf	15,2	;volatile
   991                           
   992                           ;OSCCON.c: 46:             OSCCONbits.LTS = 0;
   993  0224  108F               	bcf	15,1	;volatile
   994                           
   995                           ;OSCCON.c: 47:             OSCCONbits.SCS = 1;
   996  0225  140F               	bsf	15,0	;volatile
   997                           
   998                           ;OSCCON.c: 48:             break;
   999  0226  2A71               	goto	l115
  1000  0227                     l111:	
  1001                           ;OSCCON.c: 49:         case 4:
  1002                           
  1003                           
  1004                           ;OSCCON.c: 50:             OSCCONbits.IRCF2 = 0;
  1005  0227  1683               	bsf	3,5	;RP0=1, select bank1
  1006  0228  1303               	bcf	3,6	;RP1=0, select bank1
  1007  0229  130F               	bcf	15,6	;volatile
  1008                           
  1009                           ;OSCCON.c: 51:             OSCCONbits.IRCF1 = 1;
  1010  022A  168F               	bsf	15,5	;volatile
  1011                           
  1012                           ;OSCCON.c: 52:             OSCCONbits.IRCF0 = 1;
  1013  022B  160F               	bsf	15,4	;volatile
  1014                           
  1015                           ;OSCCON.c: 53:             OSCCONbits.OSTS = 0;
  1016  022C  118F               	bcf	15,3	;volatile
  1017                           
  1018                           ;OSCCON.c: 54:             OSCCONbits.HTS = 1;
  1019  022D  150F               	bsf	15,2	;volatile
  1020                           
  1021                           ;OSCCON.c: 55:             OSCCONbits.LTS = 0;
  1022  022E  108F               	bcf	15,1	;volatile
  1023                           
  1024                           ;OSCCON.c: 56:             OSCCONbits.SCS = 1;
  1025  022F  140F               	bsf	15,0	;volatile
  1026                           
  1027                           ;OSCCON.c: 57:             break;
  1028  0230  2A71               	goto	l115
  1029  0231                     l112:	
  1030                           ;OSCCON.c: 58:         case 5:
  1031                           
  1032                           
  1033                           ;OSCCON.c: 59:             OSCCONbits.IRCF2 = 0;
  1034  0231  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0232  1303               	bcf	3,6	;RP1=0, select bank1
  1036  0233  130F               	bcf	15,6	;volatile
  1037                           
  1038                           ;OSCCON.c: 60:             OSCCONbits.IRCF1 = 1;
  1039  0234  168F               	bsf	15,5	;volatile
  1040                           
  1041                           ;OSCCON.c: 61:             OSCCONbits.IRCF0 = 0;
  1042  0235  120F               	bcf	15,4	;volatile
  1043                           
  1044                           ;OSCCON.c: 62:             OSCCONbits.OSTS = 0;
  1045  0236  118F               	bcf	15,3	;volatile
  1046                           
  1047                           ;OSCCON.c: 63:             OSCCONbits.HTS = 1;
  1048  0237  150F               	bsf	15,2	;volatile
  1049                           
  1050                           ;OSCCON.c: 64:             OSCCONbits.LTS = 0;
  1051  0238  108F               	bcf	15,1	;volatile
  1052                           
  1053                           ;OSCCON.c: 65:             OSCCONbits.SCS = 1;
  1054  0239  140F               	bsf	15,0	;volatile
  1055                           
  1056                           ;OSCCON.c: 66:             break;
  1057  023A  2A71               	goto	l115
  1058  023B                     l113:	
  1059                           ;OSCCON.c: 67:         case 6:
  1060                           
  1061                           
  1062                           ;OSCCON.c: 68:             OSCCONbits.IRCF2 = 0;
  1063  023B  1683               	bsf	3,5	;RP0=1, select bank1
  1064  023C  1303               	bcf	3,6	;RP1=0, select bank1
  1065  023D  130F               	bcf	15,6	;volatile
  1066                           
  1067                           ;OSCCON.c: 69:             OSCCONbits.IRCF1 = 0;
  1068  023E  128F               	bcf	15,5	;volatile
  1069                           
  1070                           ;OSCCON.c: 70:             OSCCONbits.IRCF0 = 1;
  1071  023F  160F               	bsf	15,4	;volatile
  1072                           
  1073                           ;OSCCON.c: 71:             OSCCONbits.OSTS = 0;
  1074  0240  118F               	bcf	15,3	;volatile
  1075                           
  1076                           ;OSCCON.c: 72:             OSCCONbits.HTS = 1;
  1077  0241  150F               	bsf	15,2	;volatile
  1078                           
  1079                           ;OSCCON.c: 73:             OSCCONbits.LTS = 0;
  1080  0242  108F               	bcf	15,1	;volatile
  1081                           
  1082                           ;OSCCON.c: 74:             OSCCONbits.SCS = 1;
  1083  0243  140F               	bsf	15,0	;volatile
  1084                           
  1085                           ;OSCCON.c: 75:             break;
  1086  0244  2A71               	goto	l115
  1087  0245                     l114:	
  1088                           ;OSCCON.c: 76:         case 7:
  1089                           
  1090                           
  1091                           ;OSCCON.c: 77:             OSCCONbits.IRCF2 = 0;
  1092  0245  1683               	bsf	3,5	;RP0=1, select bank1
  1093  0246  1303               	bcf	3,6	;RP1=0, select bank1
  1094  0247  130F               	bcf	15,6	;volatile
  1095                           
  1096                           ;OSCCON.c: 78:             OSCCONbits.IRCF1 = 0;
  1097  0248  128F               	bcf	15,5	;volatile
  1098                           
  1099                           ;OSCCON.c: 79:             OSCCONbits.IRCF0 = 0;
  1100  0249  120F               	bcf	15,4	;volatile
  1101                           
  1102                           ;OSCCON.c: 80:             OSCCONbits.OSTS = 0;
  1103  024A  118F               	bcf	15,3	;volatile
  1104                           
  1105                           ;OSCCON.c: 81:             OSCCONbits.HTS = 0;
  1106  024B  110F               	bcf	15,2	;volatile
  1107                           
  1108                           ;OSCCON.c: 82:             OSCCONbits.LTS = 1;
  1109  024C  148F               	bsf	15,1	;volatile
  1110                           
  1111                           ;OSCCON.c: 83:             OSCCONbits.SCS = 1;
  1112  024D  140F               	bsf	15,0	;volatile
  1113                           
  1114                           ;OSCCON.c: 84:             break;
  1115  024E  2A71               	goto	l115
  1116  024F                     l1204:	
  1117  024F  0822               	movf	oscInit@freq,w
  1118  0250  00A0               	movwf	??_oscInit
  1119  0251  01A1               	clrf	??_oscInit+1
  1120                           
  1121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1122                           ; Switch size 1, requested type "simple"
  1123                           ; Number of cases is 1, Range of values is 0 to 0
  1124                           ; switch strategies available:
  1125                           ; Name         Instructions Cycles
  1126                           ; simple_byte            4     3 (average)
  1127                           ; direct_byte           11     8 (fixed)
  1128                           ; jumptable            260     6 (fixed)
  1129                           ;	Chosen strategy is simple_byte
  1130  0252  0821               	movf	??_oscInit+1,w
  1131  0253  3A00               	xorlw	0	; case 0
  1132  0254  1903               	skipnz
  1133  0255  2A57               	goto	l1458
  1134  0256  2A71               	goto	l115
  1135  0257                     l1458:	
  1136                           
  1137                           ; Switch size 1, requested type "simple"
  1138                           ; Number of cases is 8, Range of values is 0 to 7
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte           25    13 (average)
  1142                           ; direct_byte           32     8 (fixed)
  1143                           ; jumptable            260     6 (fixed)
  1144                           ;	Chosen strategy is simple_byte
  1145  0257  0820               	movf	??_oscInit,w
  1146  0258  3A00               	xorlw	0	; case 0
  1147  0259  1903               	skipnz
  1148  025A  29FF               	goto	l106
  1149  025B  3A01               	xorlw	1	; case 1
  1150  025C  1903               	skipnz
  1151  025D  2A09               	goto	l108
  1152  025E  3A03               	xorlw	3	; case 2
  1153  025F  1903               	skipnz
  1154  0260  2A13               	goto	l109
  1155  0261  3A01               	xorlw	1	; case 3
  1156  0262  1903               	skipnz
  1157  0263  2A1D               	goto	l110
  1158  0264  3A07               	xorlw	7	; case 4
  1159  0265  1903               	skipnz
  1160  0266  2A27               	goto	l111
  1161  0267  3A01               	xorlw	1	; case 5
  1162  0268  1903               	skipnz
  1163  0269  2A31               	goto	l112
  1164  026A  3A03               	xorlw	3	; case 6
  1165  026B  1903               	skipnz
  1166  026C  2A3B               	goto	l113
  1167  026D  3A01               	xorlw	1	; case 7
  1168  026E  1903               	skipnz
  1169  026F  2A45               	goto	l114
  1170  0270  2A71               	goto	l115
  1171  0271                     l115:	
  1172  0271  0008               	return
  1173  0272                     __end_of_oscInit:	
  1174                           
  1175                           	psect	text3
  1176  02EE                     __ptext3:	
  1177 ;; *************** function _i2c_slave_init *****************
  1178 ;; Defined at:
  1179 ;;		line 62 in file "I2C.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  address         2    0[BANK0 ] short 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       2       0       0       0
  1194 ;;      Locals:         0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0
  1196 ;;      Totals:         0       2       0       0       0
  1197 ;;Total ram usage:        2 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    2
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _i2c_slave_init
  1209  02EE                     _i2c_slave_init:	
  1210  02EE                     l1186:	
  1211                           ;incstack = 0
  1212                           ; Regs used in _i2c_slave_init: [wreg]
  1213                           
  1214                           
  1215                           ;I2C.c: 63:     SSPSTAT = 0x80;
  1216  02EE  3080               	movlw	128
  1217  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  1218  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  1219  02F1  0094               	movwf	20	;volatile
  1220                           
  1221                           ;I2C.c: 64:     SSPADD = address;
  1222  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1223  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1224  02F4  0820               	movf	i2c_slave_init@address,w
  1225  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  1226  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  1227  02F7  0093               	movwf	19	;volatile
  1228                           
  1229                           ;I2C.c: 65:     SSPCON = 0x36;
  1230  02F8  3036               	movlw	54
  1231  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1232  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1233  02FB  0094               	movwf	20	;volatile
  1234                           
  1235                           ;I2C.c: 66:     SSPCON2 = 0x01;
  1236  02FC  3001               	movlw	1
  1237  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  1238  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  1239  02FF  0091               	movwf	17	;volatile
  1240  0300                     l1188:	
  1241                           
  1242                           ;I2C.c: 67:     TRISCbits.TRISC3 = 1;
  1243  0300  1587               	bsf	7,3	;volatile
  1244  0301                     l1190:	
  1245                           
  1246                           ;I2C.c: 68:     TRISCbits.TRISC4 = 1;
  1247  0301  1607               	bsf	7,4	;volatile
  1248  0302                     l1192:	
  1249                           
  1250                           ;I2C.c: 69:     INTCONbits.GIE = 1;
  1251  0302  178B               	bsf	11,7	;volatile
  1252  0303                     l1194:	
  1253                           
  1254                           ;I2C.c: 70:     INTCONbits.PEIE = 1;
  1255  0303  170B               	bsf	11,6	;volatile
  1256  0304                     l1196:	
  1257                           
  1258                           ;I2C.c: 71:     PIR1bits.SSPIF = 0;
  1259  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0306  118C               	bcf	12,3	;volatile
  1262  0307                     l1198:	
  1263                           
  1264                           ;I2C.c: 72:     PIE1bits.SSPIE = 1;
  1265  0307  1683               	bsf	3,5	;RP0=1, select bank1
  1266  0308  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0309  158C               	bsf	12,3	;volatile
  1268  030A                     l100:	
  1269  030A  0008               	return
  1270  030B                     __end_of_i2c_slave_init:	
  1271                           
  1272                           	psect	text4
  1273  017B                     __ptext4:	
  1274 ;; *************** function _analogInSel *****************
  1275 ;; Defined at:
  1276 ;;		line 32 in file "ADC.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  analogIn        1    wreg     unsigned char 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  analogIn        1    2[BANK0 ] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      unsigned char 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1290 ;;      Params:         0       0       0       0       0
  1291 ;;      Locals:         0       1       0       0       0
  1292 ;;      Temps:          0       2       0       0       0
  1293 ;;      Totals:         0       3       0       0       0
  1294 ;;Total ram usage:        3 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    2
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _analogInSel
  1306  017B                     _analogInSel:	
  1307                           
  1308                           ;incstack = 0
  1309                           ; Regs used in _analogInSel: [wreg-fsr0h+status,2+status,0]
  1310                           ;analogInSel@analogIn stored from wreg
  1311  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1312  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1313  017D  00A2               	movwf	analogInSel@analogIn
  1314  017E                     l1158:	
  1315                           
  1316                           ;ADC.c: 33:     switch(analogIn){
  1317  017E  29C5               	goto	l1162
  1318  017F                     l22:	
  1319                           ;ADC.c: 34:         case 0:
  1320                           
  1321                           
  1322                           ;ADC.c: 35:             ADCON0bits.CHS3 = 0;
  1323  017F  129F               	bcf	31,5	;volatile
  1324                           
  1325                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  1326  0180  121F               	bcf	31,4	;volatile
  1327                           
  1328                           ;ADC.c: 37:             ADCON0bits.CHS1 = 0;
  1329  0181  119F               	bcf	31,3	;volatile
  1330                           
  1331                           ;ADC.c: 38:             ADCON0bits.CHS0 = 0;
  1332  0182  111F               	bcf	31,2	;volatile
  1333                           
  1334                           ;ADC.c: 39:             break;
  1335  0183  29F9               	goto	l1164
  1336  0184                     l24:	
  1337                           ;ADC.c: 40:         case 1:
  1338                           
  1339                           
  1340                           ;ADC.c: 41:             ADCON0bits.CHS3 = 0;
  1341  0184  129F               	bcf	31,5	;volatile
  1342                           
  1343                           ;ADC.c: 42:             ADCON0bits.CHS2 = 0;
  1344  0185  121F               	bcf	31,4	;volatile
  1345                           
  1346                           ;ADC.c: 43:             ADCON0bits.CHS1 = 0;
  1347  0186  119F               	bcf	31,3	;volatile
  1348                           
  1349                           ;ADC.c: 44:             ADCON0bits.CHS0 = 1;
  1350  0187  151F               	bsf	31,2	;volatile
  1351                           
  1352                           ;ADC.c: 45:             break;
  1353  0188  29F9               	goto	l1164
  1354  0189                     l25:	
  1355                           ;ADC.c: 46:         case 2:
  1356                           
  1357                           
  1358                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  1359  0189  129F               	bcf	31,5	;volatile
  1360                           
  1361                           ;ADC.c: 48:             ADCON0bits.CHS2 = 0;
  1362  018A  121F               	bcf	31,4	;volatile
  1363                           
  1364                           ;ADC.c: 49:             ADCON0bits.CHS1 = 1;
  1365  018B  159F               	bsf	31,3	;volatile
  1366                           
  1367                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
  1368  018C  111F               	bcf	31,2	;volatile
  1369                           
  1370                           ;ADC.c: 51:             break;
  1371  018D  29F9               	goto	l1164
  1372  018E                     l26:	
  1373                           ;ADC.c: 52:         case 3:
  1374                           
  1375                           
  1376                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
  1377  018E  129F               	bcf	31,5	;volatile
  1378                           
  1379                           ;ADC.c: 54:             ADCON0bits.CHS2 = 0;
  1380  018F  121F               	bcf	31,4	;volatile
  1381                           
  1382                           ;ADC.c: 55:             ADCON0bits.CHS1 = 1;
  1383  0190  159F               	bsf	31,3	;volatile
  1384                           
  1385                           ;ADC.c: 56:             ADCON0bits.CHS0 = 1;
  1386  0191  151F               	bsf	31,2	;volatile
  1387                           
  1388                           ;ADC.c: 57:             break;
  1389  0192  29F9               	goto	l1164
  1390  0193                     l27:	
  1391                           ;ADC.c: 58:         case 4:
  1392                           
  1393                           
  1394                           ;ADC.c: 59:             ADCON0bits.CHS3 = 0;
  1395  0193  129F               	bcf	31,5	;volatile
  1396                           
  1397                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  1398  0194  161F               	bsf	31,4	;volatile
  1399                           
  1400                           ;ADC.c: 61:             ADCON0bits.CHS1 = 0;
  1401  0195  119F               	bcf	31,3	;volatile
  1402                           
  1403                           ;ADC.c: 62:             ADCON0bits.CHS0 = 0;
  1404  0196  111F               	bcf	31,2	;volatile
  1405                           
  1406                           ;ADC.c: 63:             break;
  1407  0197  29F9               	goto	l1164
  1408  0198                     l28:	
  1409                           ;ADC.c: 64:         case 5:
  1410                           
  1411                           
  1412                           ;ADC.c: 65:             ADCON0bits.CHS3 = 0;
  1413  0198  129F               	bcf	31,5	;volatile
  1414                           
  1415                           ;ADC.c: 66:             ADCON0bits.CHS2 = 1;
  1416  0199  161F               	bsf	31,4	;volatile
  1417                           
  1418                           ;ADC.c: 67:             ADCON0bits.CHS1 = 0;
  1419  019A  119F               	bcf	31,3	;volatile
  1420                           
  1421                           ;ADC.c: 68:             ADCON0bits.CHS0 = 1;
  1422  019B  151F               	bsf	31,2	;volatile
  1423                           
  1424                           ;ADC.c: 69:             break;
  1425  019C  29F9               	goto	l1164
  1426  019D                     l29:	
  1427                           ;ADC.c: 70:         case 6:
  1428                           
  1429                           
  1430                           ;ADC.c: 71:             ADCON0bits.CHS3 = 0;
  1431  019D  129F               	bcf	31,5	;volatile
  1432                           
  1433                           ;ADC.c: 72:             ADCON0bits.CHS2 = 1;
  1434  019E  161F               	bsf	31,4	;volatile
  1435                           
  1436                           ;ADC.c: 73:             ADCON0bits.CHS1 = 1;
  1437  019F  159F               	bsf	31,3	;volatile
  1438                           
  1439                           ;ADC.c: 74:             ADCON0bits.CHS0 = 0;
  1440  01A0  111F               	bcf	31,2	;volatile
  1441                           
  1442                           ;ADC.c: 75:             break;
  1443  01A1  29F9               	goto	l1164
  1444  01A2                     l30:	
  1445                           ;ADC.c: 76:         case 7:
  1446                           
  1447                           
  1448                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;
  1449  01A2  129F               	bcf	31,5	;volatile
  1450                           
  1451                           ;ADC.c: 78:             ADCON0bits.CHS2 = 1;
  1452  01A3  161F               	bsf	31,4	;volatile
  1453                           
  1454                           ;ADC.c: 79:             ADCON0bits.CHS1 = 1;
  1455  01A4  159F               	bsf	31,3	;volatile
  1456                           
  1457                           ;ADC.c: 80:             ADCON0bits.CHS0 = 1;
  1458  01A5  151F               	bsf	31,2	;volatile
  1459                           
  1460                           ;ADC.c: 81:             break;
  1461  01A6  29F9               	goto	l1164
  1462  01A7                     l31:	
  1463                           ;ADC.c: 82:         case 8:
  1464                           
  1465                           
  1466                           ;ADC.c: 83:             ADCON0bits.CHS3 = 1;
  1467  01A7  169F               	bsf	31,5	;volatile
  1468                           
  1469                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  1470  01A8  121F               	bcf	31,4	;volatile
  1471                           
  1472                           ;ADC.c: 85:             ADCON0bits.CHS1 = 0;
  1473  01A9  119F               	bcf	31,3	;volatile
  1474                           
  1475                           ;ADC.c: 86:             ADCON0bits.CHS0 = 0;
  1476  01AA  111F               	bcf	31,2	;volatile
  1477                           
  1478                           ;ADC.c: 87:             break;
  1479  01AB  29F9               	goto	l1164
  1480  01AC                     l32:	
  1481                           ;ADC.c: 88:         case 9:
  1482                           
  1483                           
  1484                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1485  01AC  169F               	bsf	31,5	;volatile
  1486                           
  1487                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1488  01AD  121F               	bcf	31,4	;volatile
  1489                           
  1490                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;
  1491  01AE  119F               	bcf	31,3	;volatile
  1492                           
  1493                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1494  01AF  151F               	bsf	31,2	;volatile
  1495                           
  1496                           ;ADC.c: 93:             break;
  1497  01B0  29F9               	goto	l1164
  1498  01B1                     l33:	
  1499                           ;ADC.c: 94:         case 10:
  1500                           
  1501                           
  1502                           ;ADC.c: 95:             ADCON0bits.CHS3 = 1;
  1503  01B1  169F               	bsf	31,5	;volatile
  1504                           
  1505                           ;ADC.c: 96:             ADCON0bits.CHS2 = 0;
  1506  01B2  121F               	bcf	31,4	;volatile
  1507                           
  1508                           ;ADC.c: 97:             ADCON0bits.CHS1 = 1;
  1509  01B3  159F               	bsf	31,3	;volatile
  1510                           
  1511                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  1512  01B4  111F               	bcf	31,2	;volatile
  1513                           
  1514                           ;ADC.c: 99:             break;
  1515  01B5  29F9               	goto	l1164
  1516  01B6                     l34:	
  1517                           ;ADC.c: 100:         case 11:
  1518                           
  1519                           
  1520                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  1521  01B6  169F               	bsf	31,5	;volatile
  1522                           
  1523                           ;ADC.c: 102:             ADCON0bits.CHS2 = 0;
  1524  01B7  121F               	bcf	31,4	;volatile
  1525                           
  1526                           ;ADC.c: 103:             ADCON0bits.CHS1 = 1;
  1527  01B8  159F               	bsf	31,3	;volatile
  1528                           
  1529                           ;ADC.c: 104:             ADCON0bits.CHS0 = 1;
  1530  01B9  151F               	bsf	31,2	;volatile
  1531                           
  1532                           ;ADC.c: 105:             break;
  1533  01BA  29F9               	goto	l1164
  1534  01BB                     l35:	
  1535                           ;ADC.c: 106:         case 12:
  1536                           
  1537                           
  1538                           ;ADC.c: 107:             ADCON0bits.CHS3 = 1;
  1539  01BB  169F               	bsf	31,5	;volatile
  1540                           
  1541                           ;ADC.c: 108:             ADCON0bits.CHS2 = 1;
  1542  01BC  161F               	bsf	31,4	;volatile
  1543                           
  1544                           ;ADC.c: 109:             ADCON0bits.CHS1 = 0;
  1545  01BD  119F               	bcf	31,3	;volatile
  1546                           
  1547                           ;ADC.c: 110:             ADCON0bits.CHS0 = 0;
  1548  01BE  111F               	bcf	31,2	;volatile
  1549                           
  1550                           ;ADC.c: 111:             break;
  1551  01BF  29F9               	goto	l1164
  1552  01C0                     l36:	
  1553                           ;ADC.c: 112:         case 13:
  1554                           
  1555                           
  1556                           ;ADC.c: 113:             ADCON0bits.CHS3 = 1;
  1557  01C0  169F               	bsf	31,5	;volatile
  1558                           
  1559                           ;ADC.c: 114:             ADCON0bits.CHS2 = 1;
  1560  01C1  161F               	bsf	31,4	;volatile
  1561                           
  1562                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;
  1563  01C2  119F               	bcf	31,3	;volatile
  1564                           
  1565                           ;ADC.c: 116:             ADCON0bits.CHS0 = 1;
  1566  01C3  151F               	bsf	31,2	;volatile
  1567                           
  1568                           ;ADC.c: 117:             break;
  1569  01C4  29F9               	goto	l1164
  1570  01C5                     l1162:	
  1571  01C5  0822               	movf	analogInSel@analogIn,w
  1572  01C6  00A0               	movwf	??_analogInSel
  1573  01C7  01A1               	clrf	??_analogInSel+1
  1574                           
  1575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1576                           ; Switch size 1, requested type "simple"
  1577                           ; Number of cases is 1, Range of values is 0 to 0
  1578                           ; switch strategies available:
  1579                           ; Name         Instructions Cycles
  1580                           ; simple_byte            4     3 (average)
  1581                           ; direct_byte           11     8 (fixed)
  1582                           ; jumptable            260     6 (fixed)
  1583                           ;	Chosen strategy is simple_byte
  1584  01C8  0821               	movf	??_analogInSel+1,w
  1585  01C9  3A00               	xorlw	0	; case 0
  1586  01CA  1903               	skipnz
  1587  01CB  29CD               	goto	l1460
  1588  01CC  29F9               	goto	l1164
  1589  01CD                     l1460:	
  1590                           
  1591                           ; Switch size 1, requested type "simple"
  1592                           ; Number of cases is 14, Range of values is 0 to 13
  1593                           ; switch strategies available:
  1594                           ; Name         Instructions Cycles
  1595                           ; simple_byte           43    22 (average)
  1596                           ; direct_byte           50     8 (fixed)
  1597                           ; jumptable            260     6 (fixed)
  1598                           ;	Chosen strategy is simple_byte
  1599  01CD  0820               	movf	??_analogInSel,w
  1600  01CE  3A00               	xorlw	0	; case 0
  1601  01CF  1903               	skipnz
  1602  01D0  297F               	goto	l22
  1603  01D1  3A01               	xorlw	1	; case 1
  1604  01D2  1903               	skipnz
  1605  01D3  2984               	goto	l24
  1606  01D4  3A03               	xorlw	3	; case 2
  1607  01D5  1903               	skipnz
  1608  01D6  2989               	goto	l25
  1609  01D7  3A01               	xorlw	1	; case 3
  1610  01D8  1903               	skipnz
  1611  01D9  298E               	goto	l26
  1612  01DA  3A07               	xorlw	7	; case 4
  1613  01DB  1903               	skipnz
  1614  01DC  2993               	goto	l27
  1615  01DD  3A01               	xorlw	1	; case 5
  1616  01DE  1903               	skipnz
  1617  01DF  2998               	goto	l28
  1618  01E0  3A03               	xorlw	3	; case 6
  1619  01E1  1903               	skipnz
  1620  01E2  299D               	goto	l29
  1621  01E3  3A01               	xorlw	1	; case 7
  1622  01E4  1903               	skipnz
  1623  01E5  29A2               	goto	l30
  1624  01E6  3A0F               	xorlw	15	; case 8
  1625  01E7  1903               	skipnz
  1626  01E8  29A7               	goto	l31
  1627  01E9  3A01               	xorlw	1	; case 9
  1628  01EA  1903               	skipnz
  1629  01EB  29AC               	goto	l32
  1630  01EC  3A03               	xorlw	3	; case 10
  1631  01ED  1903               	skipnz
  1632  01EE  29B1               	goto	l33
  1633  01EF  3A01               	xorlw	1	; case 11
  1634  01F0  1903               	skipnz
  1635  01F1  29B6               	goto	l34
  1636  01F2  3A07               	xorlw	7	; case 12
  1637  01F3  1903               	skipnz
  1638  01F4  29BB               	goto	l35
  1639  01F5  3A01               	xorlw	1	; case 13
  1640  01F6  1903               	skipnz
  1641  01F7  29C0               	goto	l36
  1642  01F8  29F9               	goto	l1164
  1643  01F9                     l1164:	
  1644                           
  1645                           ;ADC.c: 119:     return(ADCON0bits.CHS);;	Return value of _analogInSel is never used
  1646  01F9  081F               	movf	31,w	;volatile
  1647  01FA                     l37:	
  1648  01FA  0008               	return
  1649  01FB                     __end_of_analogInSel:	
  1650                           
  1651                           	psect	text5
  1652  0318                     __ptext5:	
  1653 ;; *************** function _adcSetup *****************
  1654 ;; Defined at:
  1655 ;;		line 12 in file "ADC.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		None
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1669 ;;      Params:         0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    2
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _adcSetup
  1685  0318                     _adcSetup:	
  1686  0318                     l1144:	
  1687                           ;incstack = 0
  1688                           ; Regs used in _adcSetup: []
  1689                           
  1690                           
  1691                           ;ADC.c: 13:     ADCON0bits.ADON = 1;
  1692  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1694  031A  141F               	bsf	31,0	;volatile
  1695                           
  1696                           ;ADC.c: 14:     ADCON1bits.ADFM = 0;
  1697  031B  1683               	bsf	3,5	;RP0=1, select bank1
  1698  031C  1303               	bcf	3,6	;RP1=0, select bank1
  1699  031D  139F               	bcf	31,7	;volatile
  1700                           
  1701                           ;ADC.c: 15:     ADCON1bits.VCFG1 = 0;
  1702  031E  129F               	bcf	31,5	;volatile
  1703                           
  1704                           ;ADC.c: 16:     ADCON1bits.VCFG0 = 0;
  1705  031F  121F               	bcf	31,4	;volatile
  1706  0320                     l11:	
  1707  0320  0008               	return
  1708  0321                     __end_of_adcSetup:	
  1709                           
  1710                           	psect	text6
  1711  02AA                     __ptext6:	
  1712 ;; *************** function _adcInterrupt *****************
  1713 ;; Defined at:
  1714 ;;		line 19 in file "ADC.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  en              1    wreg     unsigned char 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  en              1    2[BANK0 ] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       0       0       0
  1729 ;;      Locals:         0       1       0       0       0
  1730 ;;      Temps:          0       2       0       0       0
  1731 ;;      Totals:         0       3       0       0       0
  1732 ;;Total ram usage:        3 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    2
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _adcInterrupt
  1744  02AA                     _adcInterrupt:	
  1745                           
  1746                           ;incstack = 0
  1747                           ; Regs used in _adcInterrupt: [wreg-fsr0h+status,2+status,0]
  1748                           ;adcInterrupt@en stored from wreg
  1749  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1750  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1751  02AC  00A2               	movwf	adcInterrupt@en
  1752  02AD                     l1146:	
  1753                           
  1754                           ;ADC.c: 20:     switch(en){
  1755  02AD  2ABC               	goto	l1150
  1756  02AE                     l15:	
  1757                           ;ADC.c: 21:         case 0:
  1758                           
  1759                           
  1760                           ;ADC.c: 22:             PIE1bits.ADIE = 0;
  1761  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  1762  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  1763  02B0  130C               	bcf	12,6	;volatile
  1764                           
  1765                           ;ADC.c: 23:             PIR1bits.ADIF = 0;
  1766  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1767  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1768  02B3  130C               	bcf	12,6	;volatile
  1769                           
  1770                           ;ADC.c: 24:             break;
  1771  02B4  2ACC               	goto	l18
  1772  02B5                     l17:	
  1773                           ;ADC.c: 25:         case 1:
  1774                           
  1775                           
  1776                           ;ADC.c: 26:             PIE1bits.ADIE = 1;
  1777  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  1778  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  1779  02B7  170C               	bsf	12,6	;volatile
  1780                           
  1781                           ;ADC.c: 27:             PIR1bits.ADIF = 0;
  1782  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1783  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1784  02BA  130C               	bcf	12,6	;volatile
  1785                           
  1786                           ;ADC.c: 28:             break;
  1787  02BB  2ACC               	goto	l18
  1788  02BC                     l1150:	
  1789  02BC  0822               	movf	adcInterrupt@en,w
  1790  02BD  00A0               	movwf	??_adcInterrupt
  1791  02BE  01A1               	clrf	??_adcInterrupt+1
  1792                           
  1793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1794                           ; Switch size 1, requested type "simple"
  1795                           ; Number of cases is 1, Range of values is 0 to 0
  1796                           ; switch strategies available:
  1797                           ; Name         Instructions Cycles
  1798                           ; simple_byte            4     3 (average)
  1799                           ; direct_byte           11     8 (fixed)
  1800                           ; jumptable            260     6 (fixed)
  1801                           ;	Chosen strategy is simple_byte
  1802  02BF  0821               	movf	??_adcInterrupt+1,w
  1803  02C0  3A00               	xorlw	0	; case 0
  1804  02C1  1903               	skipnz
  1805  02C2  2AC4               	goto	l1462
  1806  02C3  2ACC               	goto	l18
  1807  02C4                     l1462:	
  1808                           
  1809                           ; Switch size 1, requested type "simple"
  1810                           ; Number of cases is 2, Range of values is 0 to 1
  1811                           ; switch strategies available:
  1812                           ; Name         Instructions Cycles
  1813                           ; simple_byte            7     4 (average)
  1814                           ; direct_byte           14     8 (fixed)
  1815                           ; jumptable            260     6 (fixed)
  1816                           ;	Chosen strategy is simple_byte
  1817  02C4  0820               	movf	??_adcInterrupt,w
  1818  02C5  3A00               	xorlw	0	; case 0
  1819  02C6  1903               	skipnz
  1820  02C7  2AAE               	goto	l15
  1821  02C8  3A01               	xorlw	1	; case 1
  1822  02C9  1903               	skipnz
  1823  02CA  2AB5               	goto	l17
  1824  02CB  2ACC               	goto	l18
  1825  02CC                     l18:	
  1826  02CC  0008               	return
  1827  02CD                     __end_of_adcInterrupt:	
  1828                           
  1829                           	psect	text7
  1830  02CD                     __ptext7:	
  1831 ;; *************** function _adcFoscSel *****************
  1832 ;; Defined at:
  1833 ;;		line 128 in file "ADC.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  fosc            1    wreg     unsigned char 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  fosc            1    2[BANK0 ] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      unsigned char 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       0       0       0       0
  1848 ;;      Locals:         0       1       0       0       0
  1849 ;;      Temps:          0       2       0       0       0
  1850 ;;      Totals:         0       3       0       0       0
  1851 ;;Total ram usage:        3 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    2
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _adcFoscSel
  1863  02CD                     _adcFoscSel:	
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in _adcFoscSel: [wreg-fsr0h+status,2+status,0]
  1867                           ;adcFoscSel@fosc stored from wreg
  1868  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1869  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1870  02CF  00A2               	movwf	adcFoscSel@fosc
  1871  02D0                     l1174:	
  1872                           
  1873                           ;ADC.c: 129:     switch(fosc){
  1874  02D0  2ADA               	goto	l1178
  1875  02D1                     l44:	
  1876                           ;ADC.c: 130:         case 0:
  1877                           
  1878                           
  1879                           ;ADC.c: 131:             ADCON0bits.ADCS1 = 0;
  1880  02D1  139F               	bcf	31,7	;volatile
  1881                           
  1882                           ;ADC.c: 132:             ADCON0bits.ADCS0 = 0;
  1883  02D2  131F               	bcf	31,6	;volatile
  1884                           
  1885                           ;ADC.c: 133:             break;
  1886  02D3  2AED               	goto	l48
  1887  02D4                     l46:	
  1888                           ;ADC.c: 134:         case 1:
  1889                           
  1890                           
  1891                           ;ADC.c: 135:             ADCON0bits.ADCS1 = 0;
  1892  02D4  139F               	bcf	31,7	;volatile
  1893                           
  1894                           ;ADC.c: 136:             ADCON0bits.ADCS0 = 1;
  1895  02D5  171F               	bsf	31,6	;volatile
  1896                           
  1897                           ;ADC.c: 137:             break;
  1898  02D6  2AED               	goto	l48
  1899  02D7                     l47:	
  1900                           ;ADC.c: 138:         case 3:
  1901                           
  1902                           
  1903                           ;ADC.c: 139:             ADCON0bits.ADCS1 = 1;
  1904  02D7  179F               	bsf	31,7	;volatile
  1905                           
  1906                           ;ADC.c: 140:             ADCON0bits.ADCS0 = 0;
  1907  02D8  131F               	bcf	31,6	;volatile
  1908                           
  1909                           ;ADC.c: 141:             break;
  1910  02D9  2AED               	goto	l48
  1911  02DA                     l1178:	
  1912  02DA  0822               	movf	adcFoscSel@fosc,w
  1913  02DB  00A0               	movwf	??_adcFoscSel
  1914  02DC  01A1               	clrf	??_adcFoscSel+1
  1915                           
  1916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1917                           ; Switch size 1, requested type "simple"
  1918                           ; Number of cases is 1, Range of values is 0 to 0
  1919                           ; switch strategies available:
  1920                           ; Name         Instructions Cycles
  1921                           ; simple_byte            4     3 (average)
  1922                           ; direct_byte           11     8 (fixed)
  1923                           ; jumptable            260     6 (fixed)
  1924                           ;	Chosen strategy is simple_byte
  1925  02DD  0821               	movf	??_adcFoscSel+1,w
  1926  02DE  3A00               	xorlw	0	; case 0
  1927  02DF  1903               	skipnz
  1928  02E0  2AE2               	goto	l1464
  1929  02E1  2AED               	goto	l48
  1930  02E2                     l1464:	
  1931                           
  1932                           ; Switch size 1, requested type "simple"
  1933                           ; Number of cases is 3, Range of values is 0 to 3
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte           10     6 (average)
  1937                           ; direct_byte           20     8 (fixed)
  1938                           ; jumptable            260     6 (fixed)
  1939                           ;	Chosen strategy is simple_byte
  1940  02E2  0820               	movf	??_adcFoscSel,w
  1941  02E3  3A00               	xorlw	0	; case 0
  1942  02E4  1903               	skipnz
  1943  02E5  2AD1               	goto	l44
  1944  02E6  3A01               	xorlw	1	; case 1
  1945  02E7  1903               	skipnz
  1946  02E8  2AD4               	goto	l46
  1947  02E9  3A02               	xorlw	2	; case 3
  1948  02EA  1903               	skipnz
  1949  02EB  2AD7               	goto	l47
  1950  02EC  2AED               	goto	l48
  1951  02ED                     l48:	
  1952  02ED  0008               	return
  1953  02EE                     __end_of_adcFoscSel:	
  1954                           
  1955                           	psect	text8
  1956  001B                     __ptext8:	
  1957 ;; *************** function _ISR *****************
  1958 ;; Defined at:
  1959 ;;		line 49 in file "Sensores.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0
  1975 ;;      Temps:          5       0       0       0       0
  1976 ;;      Totals:         5       0       0       0       0
  1977 ;;Total ram usage:        5 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    1
  1980 ;; This function calls:
  1981 ;;		i1_analogInSel
  1982 ;; This function is called by:
  1983 ;;		Interrupt level 1
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function _ISR
  1989  001B                     _ISR:	
  1990  001B                     i1l1234:	
  1991                           
  1992                           ;Sensores.c: 50:     (INTCONbits.GIE = 0);
  1993  001B  138B               	bcf	11,7	;volatile
  1994                           
  1995                           ;Sensores.c: 52:     if (PIR1bits.ADIF == 1 && ADCON0bits.CHS3 == 1 && ADCON0bits.CHS2 =
      +                          = 0 && ADCON0bits.CHS1 == 0 && ADCON0bits.CHS0 == 1){
  1996  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1997  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1998  001E  1F0C               	btfss	12,6	;volatile
  1999  001F  2821               	goto	u28_21
  2000  0020  2822               	goto	u28_20
  2001  0021                     u28_21:	
  2002  0021  2843               	goto	i1l185
  2003  0022                     u28_20:	
  2004  0022                     i1l1236:	
  2005  0022  1E9F               	btfss	31,5	;volatile
  2006  0023  2825               	goto	u29_21
  2007  0024  2826               	goto	u29_20
  2008  0025                     u29_21:	
  2009  0025  2843               	goto	i1l185
  2010  0026                     u29_20:	
  2011  0026                     i1l1238:	
  2012  0026  1A1F               	btfsc	31,4	;volatile
  2013  0027  2829               	goto	u30_21
  2014  0028  282A               	goto	u30_20
  2015  0029                     u30_21:	
  2016  0029  2843               	goto	i1l185
  2017  002A                     u30_20:	
  2018  002A                     i1l1240:	
  2019  002A  199F               	btfsc	31,3	;volatile
  2020  002B  282D               	goto	u31_21
  2021  002C  282E               	goto	u31_20
  2022  002D                     u31_21:	
  2023  002D  2843               	goto	i1l185
  2024  002E                     u31_20:	
  2025  002E                     i1l1242:	
  2026  002E  1D1F               	btfss	31,2	;volatile
  2027  002F  2831               	goto	u32_21
  2028  0030  2832               	goto	u32_20
  2029  0031                     u32_21:	
  2030  0031  2843               	goto	i1l185
  2031  0032                     u32_20:	
  2032  0032                     i1l1244:	
  2033                           
  2034                           ;Sensores.c: 53:         fuerza = ADRESH;
  2035  0032  081E               	movf	30,w	;volatile
  2036  0033  00F3               	movwf	??_ISR
  2037  0034  01F4               	clrf	??_ISR+1
  2038  0035  0873               	movf	??_ISR,w
  2039  0036  00F8               	movwf	_fuerza
  2040  0037  0874               	movf	??_ISR+1,w
  2041  0038  00F9               	movwf	_fuerza+1
  2042  0039                     i1l1246:	
  2043                           
  2044                           ;Sensores.c: 54:         analogInSel(8);
  2045  0039  3008               	movlw	8
  2046  003A  120A  118A  20DF  120A  118A  	fcall	i1_analogInSel
  2047  003F                     i1l1248:	
  2048                           
  2049                           ;Sensores.c: 55:         PIR1bits.ADIF = 0;
  2050  003F  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0040  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0041  130C               	bcf	12,6	;volatile
  2053                           
  2054                           ;Sensores.c: 56:     }
  2055  0042  2867               	goto	i1l1264
  2056  0043                     i1l185:	
  2057                           ;Sensores.c: 58:     else if (PIR1bits.ADIF == 1 && ADCON0bits.CHS3 == 1 && ADCON0bits.C
      +                          HS2 == 0 && ADCON0bits.CHS1 == 0 && ADCON0bits.CHS0 == 0){
  2058                           
  2059  0043  1F0C               	btfss	12,6	;volatile
  2060  0044  2846               	goto	u33_21
  2061  0045  2847               	goto	u33_20
  2062  0046                     u33_21:	
  2063  0046  2867               	goto	i1l1264
  2064  0047                     u33_20:	
  2065  0047                     i1l1250:	
  2066  0047  1E9F               	btfss	31,5	;volatile
  2067  0048  284A               	goto	u34_21
  2068  0049  284B               	goto	u34_20
  2069  004A                     u34_21:	
  2070  004A  2867               	goto	i1l1264
  2071  004B                     u34_20:	
  2072  004B                     i1l1252:	
  2073  004B  1A1F               	btfsc	31,4	;volatile
  2074  004C  284E               	goto	u35_21
  2075  004D  284F               	goto	u35_20
  2076  004E                     u35_21:	
  2077  004E  2867               	goto	i1l1264
  2078  004F                     u35_20:	
  2079  004F                     i1l1254:	
  2080  004F  199F               	btfsc	31,3	;volatile
  2081  0050  2852               	goto	u36_21
  2082  0051  2853               	goto	u36_20
  2083  0052                     u36_21:	
  2084  0052  2867               	goto	i1l1264
  2085  0053                     u36_20:	
  2086  0053                     i1l1256:	
  2087  0053  191F               	btfsc	31,2	;volatile
  2088  0054  2856               	goto	u37_21
  2089  0055  2857               	goto	u37_20
  2090  0056                     u37_21:	
  2091  0056  2867               	goto	i1l1264
  2092  0057                     u37_20:	
  2093  0057                     i1l1258:	
  2094                           
  2095                           ;Sensores.c: 59:         luz = ADRESH;
  2096  0057  081E               	movf	30,w	;volatile
  2097  0058  00F3               	movwf	??_ISR
  2098  0059  01F4               	clrf	??_ISR+1
  2099  005A  0873               	movf	??_ISR,w
  2100  005B  00FA               	movwf	_luz
  2101  005C  0874               	movf	??_ISR+1,w
  2102  005D  00FB               	movwf	_luz+1
  2103  005E                     i1l1260:	
  2104                           
  2105                           ;Sensores.c: 60:         analogInSel(9);
  2106  005E  3009               	movlw	9
  2107  005F  120A  118A  20DF  120A  118A  	fcall	i1_analogInSel
  2108  0064                     i1l1262:	
  2109                           
  2110                           ;Sensores.c: 61:         PIR1bits.ADIF = 0;
  2111  0064  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0065  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0066  130C               	bcf	12,6	;volatile
  2114  0067                     i1l1264:	
  2115                           
  2116                           ;Sensores.c: 64:     if (PIR1bits.SSPIF == 1){
  2117  0067  1D8C               	btfss	12,3	;volatile
  2118  0068  286A               	goto	u38_21
  2119  0069  286B               	goto	u38_20
  2120  006A                     u38_21:	
  2121  006A  28D5               	goto	i1l188
  2122  006B                     u38_20:	
  2123  006B                     i1l1266:	
  2124                           
  2125                           ;Sensores.c: 65:         SSPCONbits.CKP = 0;
  2126  006B  1214               	bcf	20,4	;volatile
  2127                           
  2128                           ;Sensores.c: 66:         if (SSPCONbits.WCOL == 1 || SSPCONbits.SSPOV == 1){
  2129  006C  1B94               	btfsc	20,7	;volatile
  2130  006D  286F               	goto	u39_21
  2131  006E  2870               	goto	u39_20
  2132  006F                     u39_21:	
  2133  006F  2874               	goto	i1l1270
  2134  0070                     u39_20:	
  2135  0070                     i1l1268:	
  2136  0070  1F14               	btfss	20,6	;volatile
  2137  0071  2873               	goto	u40_21
  2138  0072  2874               	goto	u40_20
  2139  0073                     u40_21:	
  2140  0073  287B               	goto	i1l1278
  2141  0074                     u40_20:	
  2142  0074                     i1l1270:	
  2143                           
  2144                           ;Sensores.c: 67:             x = SSPBUF;
  2145  0074  0813               	movf	19,w	;volatile
  2146  0075  00F3               	movwf	??_ISR
  2147  0076  0873               	movf	??_ISR,w
  2148  0077  00FD               	movwf	_x
  2149  0078                     i1l1272:	
  2150                           
  2151                           ;Sensores.c: 68:             SSPCONbits.WCOL = 0;
  2152  0078  1394               	bcf	20,7	;volatile
  2153  0079                     i1l1274:	
  2154                           
  2155                           ;Sensores.c: 69:             SSPCONbits.SSPOV = 0;
  2156  0079  1314               	bcf	20,6	;volatile
  2157  007A                     i1l1276:	
  2158                           
  2159                           ;Sensores.c: 70:             SSPCONbits.CKP = 1;
  2160  007A  1614               	bsf	20,4	;volatile
  2161  007B                     i1l1278:	
  2162                           
  2163                           ;Sensores.c: 72:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW){
  2164  007B  1683               	bsf	3,5	;RP0=1, select bank1
  2165  007C  1303               	bcf	3,6	;RP1=0, select bank1
  2166  007D  1A94               	btfsc	20,5	;volatile
  2167  007E  2880               	goto	u41_21
  2168  007F  2881               	goto	u41_20
  2169  0080                     u41_21:	
  2170  0080  2899               	goto	i1l192
  2171  0081                     u41_20:	
  2172  0081                     i1l1280:	
  2173  0081  1914               	btfsc	20,2	;volatile
  2174  0082  2884               	goto	u42_21
  2175  0083  2885               	goto	u42_20
  2176  0084                     u42_21:	
  2177  0084  2899               	goto	i1l192
  2178  0085                     u42_20:	
  2179  0085                     i1l1282:	
  2180                           
  2181                           ;Sensores.c: 73:             x = SSPBUF;
  2182  0085  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0086  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0087  0813               	movf	19,w	;volatile
  2185  0088  00F3               	movwf	??_ISR
  2186  0089  0873               	movf	??_ISR,w
  2187  008A  00FD               	movwf	_x
  2188  008B                     i1l193:	
  2189                           ;Sensores.c: 74:             while(!SSPSTATbits.BF);
  2190                           
  2191  008B  1683               	bsf	3,5	;RP0=1, select bank1
  2192  008C  1303               	bcf	3,6	;RP1=0, select bank1
  2193  008D  1C14               	btfss	20,0	;volatile
  2194  008E  2890               	goto	u43_21
  2195  008F  2891               	goto	u43_20
  2196  0090                     u43_21:	
  2197  0090  288B               	goto	i1l193
  2198  0091                     u43_20:	
  2199  0091                     i1l1284:	
  2200                           
  2201                           ;Sensores.c: 75:             z = SSPBUF;
  2202  0091  1283               	bcf	3,5	;RP0=0, select bank0
  2203  0092  1303               	bcf	3,6	;RP1=0, select bank0
  2204  0093  0813               	movf	19,w	;volatile
  2205  0094  00F3               	movwf	??_ISR
  2206  0095  0873               	movf	??_ISR,w
  2207  0096  00FC               	movwf	_z
  2208  0097                     i1l1286:	
  2209                           
  2210                           ;Sensores.c: 76:             SSPCONbits.CKP = 1;
  2211  0097  1614               	bsf	20,4	;volatile
  2212                           
  2213                           ;Sensores.c: 77:         }
  2214  0098  28D3               	goto	i1l196
  2215  0099                     i1l192:	
  2216                           ;Sensores.c: 78:         else if (!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  2217                           
  2218  0099  1A94               	btfsc	20,5	;volatile
  2219  009A  289C               	goto	u44_21
  2220  009B  289D               	goto	u44_20
  2221  009C                     u44_21:	
  2222  009C  28D3               	goto	i1l196
  2223  009D                     u44_20:	
  2224  009D                     i1l1288:	
  2225  009D  1D14               	btfss	20,2	;volatile
  2226  009E  28A0               	goto	u45_21
  2227  009F  28A1               	goto	u45_20
  2228  00A0                     u45_21:	
  2229  00A0  28D3               	goto	i1l196
  2230  00A1                     u45_20:	
  2231  00A1                     i1l1290:	
  2232                           
  2233                           ;Sensores.c: 79:             x = SSPBUF;
  2234  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  2235  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  2236  00A3  0813               	movf	19,w	;volatile
  2237  00A4  00F3               	movwf	??_ISR
  2238  00A5  0873               	movf	??_ISR,w
  2239  00A6  00FD               	movwf	_x
  2240  00A7                     i1l1292:	
  2241                           
  2242                           ;Sensores.c: 80:             SSPSTATbits.BF = 0;
  2243  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  2244  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  2245  00A9  1014               	bcf	20,0	;volatile
  2246  00AA                     i1l1294:	
  2247                           
  2248                           ;Sensores.c: 81:             if (z == 0x01){
  2249  00AA  037C               	decf	_z,w
  2250  00AB  1D03               	btfss	3,2
  2251  00AC  28AE               	goto	u46_21
  2252  00AD  28AF               	goto	u46_20
  2253  00AE                     u46_21:	
  2254  00AE  28B9               	goto	i1l1300
  2255  00AF                     u46_20:	
  2256  00AF                     i1l1296:	
  2257                           
  2258                           ;Sensores.c: 82:                 x = SSPBUF;
  2259  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  2260  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  2261  00B1  0813               	movf	19,w	;volatile
  2262  00B2  00F3               	movwf	??_ISR
  2263  00B3  0873               	movf	??_ISR,w
  2264  00B4  00FD               	movwf	_x
  2265                           
  2266                           ;Sensores.c: 83:                 SSPBUF = fuerza;
  2267  00B5  0878               	movf	_fuerza,w
  2268  00B6  0093               	movwf	19	;volatile
  2269  00B7                     i1l1298:	
  2270                           
  2271                           ;Sensores.c: 84:                 SSPCONbits.CKP = 1;
  2272  00B7  1614               	bsf	20,4	;volatile
  2273                           
  2274                           ;Sensores.c: 85:             }
  2275  00B8  28C8               	goto	i1l199
  2276  00B9                     i1l1300:	
  2277  00B9  3002               	movlw	2
  2278  00BA  067C               	xorwf	_z,w
  2279  00BB  1D03               	btfss	3,2
  2280  00BC  28BE               	goto	u47_21
  2281  00BD  28BF               	goto	u47_20
  2282  00BE                     u47_21:	
  2283  00BE  28C8               	goto	i1l199
  2284  00BF                     u47_20:	
  2285  00BF                     i1l1302:	
  2286                           
  2287                           ;Sensores.c: 87:                 x = SSPBUF;
  2288  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  2289  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  2290  00C1  0813               	movf	19,w	;volatile
  2291  00C2  00F3               	movwf	??_ISR
  2292  00C3  0873               	movf	??_ISR,w
  2293  00C4  00FD               	movwf	_x
  2294                           
  2295                           ;Sensores.c: 88:                 SSPBUF = luz;
  2296  00C5  087A               	movf	_luz,w
  2297  00C6  0093               	movwf	19	;volatile
  2298  00C7                     i1l1304:	
  2299                           
  2300                           ;Sensores.c: 89:                 SSPCONbits.CKP = 1;
  2301  00C7  1614               	bsf	20,4	;volatile
  2302  00C8                     i1l199:	
  2303                           
  2304                           ;Sensores.c: 96:             _delay((unsigned long)((300)*(4000000/4000000.0)));
  2305  00C8  3063               	movlw	99
  2306  00C9  00F3               	movwf	??_ISR
  2307  00CA                     u50_27:	
  2308  00CA  0BF3               	decfsz	??_ISR,f
  2309  00CB  28CA               	goto	u50_27
  2310  00CC  28CD               	nop2
  2311  00CD                     i1l201:	
  2312                           ;Sensores.c: 97:             while(SSPSTATbits.BF);
  2313                           
  2314  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  2315  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  2316  00CF  1814               	btfsc	20,0	;volatile
  2317  00D0  28D2               	goto	u48_21
  2318  00D1  28D3               	goto	u48_20
  2319  00D2                     u48_21:	
  2320  00D2  28CD               	goto	i1l201
  2321  00D3                     u48_20:	
  2322  00D3                     i1l196:	
  2323                           
  2324                           ;Sensores.c: 99:         PIR1bits.SSPIF = 0;
  2325  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  2326  00D4  118C               	bcf	12,3	;volatile
  2327  00D5                     i1l188:	
  2328                           ;Sensores.c: 100:     }
  2329                           
  2330                           
  2331                           ;Sensores.c: 107:     (INTCONbits.GIE = 1);
  2332  00D5  178B               	bsf	11,7	;volatile
  2333  00D6                     i1l204:	
  2334  00D6  0877               	movf	??_ISR+4,w
  2335  00D7  008A               	movwf	10
  2336  00D8  0876               	movf	??_ISR+3,w
  2337  00D9  0084               	movwf	4
  2338  00DA  0E75               	swapf	(??_ISR+2)^(0+4294967168),w
  2339  00DB  0083               	movwf	3
  2340  00DC  0EFE               	swapf	btemp,f
  2341  00DD  0E7E               	swapf	btemp,w
  2342  00DE  0009               	retfie
  2343  00DF                     __end_of_ISR:	
  2344                           
  2345                           	psect	intentry
  2346  0004                     __pintentry:	
  2347                           ;incstack = 0
  2348                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2349                           
  2350  0004                     interrupt_function:	
  2351  007E                     saved_w	set	btemp
  2352  0004  00FE               	movwf	btemp
  2353  0005  0E03               	swapf	3,w
  2354  0006  00F5               	movwf	??_ISR+2
  2355  0007  0804               	movf	4,w
  2356  0008  00F6               	movwf	??_ISR+3
  2357  0009  080A               	movf	10,w
  2358  000A  00F7               	movwf	??_ISR+4
  2359  000B  120A  118A  281B   	ljmp	_ISR
  2360                           
  2361                           	psect	text9
  2362  00DF                     __ptext9:	
  2363 ;; *************** function i1_analogInSel *****************
  2364 ;; Defined at:
  2365 ;;		line 32 in file "ADC.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  analogIn        1    wreg     unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  analogIn        1    2[COMMON] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      unsigned char 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       0       0       0       0
  2380 ;;      Locals:         1       0       0       0       0
  2381 ;;      Temps:          2       0       0       0       0
  2382 ;;      Totals:         3       0       0       0       0
  2383 ;;Total ram usage:        3 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_ISR
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function i1_analogInSel
  2394  00DF                     i1_analogInSel:	
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in i1_analogInSel: [wreg-fsr0h+status,2+status,0]
  2398                           ;i1analogInSel@analogIn stored from wreg
  2399  00DF  00F2               	movwf	i1analogInSel@analogIn
  2400  00E0                     i1l1220:	
  2401                           
  2402                           ;ADC.c: 33:     switch(analogIn){
  2403  00E0  2943               	goto	i1l1224
  2404  00E1                     i1l22:	
  2405                           ;ADC.c: 34:         case 0:
  2406                           
  2407                           
  2408                           ;ADC.c: 35:             ADCON0bits.CHS3 = 0;
  2409  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2410  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2411  00E3  129F               	bcf	31,5	;volatile
  2412                           
  2413                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  2414  00E4  121F               	bcf	31,4	;volatile
  2415                           
  2416                           ;ADC.c: 37:             ADCON0bits.CHS1 = 0;
  2417  00E5  119F               	bcf	31,3	;volatile
  2418                           
  2419                           ;ADC.c: 38:             ADCON0bits.CHS0 = 0;
  2420  00E6  111F               	bcf	31,2	;volatile
  2421                           
  2422                           ;ADC.c: 39:             break;
  2423  00E7  2977               	goto	i1l1226
  2424  00E8                     i1l24:	
  2425                           ;ADC.c: 40:         case 1:
  2426                           
  2427                           
  2428                           ;ADC.c: 41:             ADCON0bits.CHS3 = 0;
  2429  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  2430  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  2431  00EA  129F               	bcf	31,5	;volatile
  2432                           
  2433                           ;ADC.c: 42:             ADCON0bits.CHS2 = 0;
  2434  00EB  121F               	bcf	31,4	;volatile
  2435                           
  2436                           ;ADC.c: 43:             ADCON0bits.CHS1 = 0;
  2437  00EC  119F               	bcf	31,3	;volatile
  2438                           
  2439                           ;ADC.c: 44:             ADCON0bits.CHS0 = 1;
  2440  00ED  151F               	bsf	31,2	;volatile
  2441                           
  2442                           ;ADC.c: 45:             break;
  2443  00EE  2977               	goto	i1l1226
  2444  00EF                     i1l25:	
  2445                           ;ADC.c: 46:         case 2:
  2446                           
  2447                           
  2448                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  2449  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2450  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2451  00F1  129F               	bcf	31,5	;volatile
  2452                           
  2453                           ;ADC.c: 48:             ADCON0bits.CHS2 = 0;
  2454  00F2  121F               	bcf	31,4	;volatile
  2455                           
  2456                           ;ADC.c: 49:             ADCON0bits.CHS1 = 1;
  2457  00F3  159F               	bsf	31,3	;volatile
  2458                           
  2459                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
  2460  00F4  111F               	bcf	31,2	;volatile
  2461                           
  2462                           ;ADC.c: 51:             break;
  2463  00F5  2977               	goto	i1l1226
  2464  00F6                     i1l26:	
  2465                           ;ADC.c: 52:         case 3:
  2466                           
  2467                           
  2468                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
  2469  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2470  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2471  00F8  129F               	bcf	31,5	;volatile
  2472                           
  2473                           ;ADC.c: 54:             ADCON0bits.CHS2 = 0;
  2474  00F9  121F               	bcf	31,4	;volatile
  2475                           
  2476                           ;ADC.c: 55:             ADCON0bits.CHS1 = 1;
  2477  00FA  159F               	bsf	31,3	;volatile
  2478                           
  2479                           ;ADC.c: 56:             ADCON0bits.CHS0 = 1;
  2480  00FB  151F               	bsf	31,2	;volatile
  2481                           
  2482                           ;ADC.c: 57:             break;
  2483  00FC  2977               	goto	i1l1226
  2484  00FD                     i1l27:	
  2485                           ;ADC.c: 58:         case 4:
  2486                           
  2487                           
  2488                           ;ADC.c: 59:             ADCON0bits.CHS3 = 0;
  2489  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2490  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2491  00FF  129F               	bcf	31,5	;volatile
  2492                           
  2493                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  2494  0100  161F               	bsf	31,4	;volatile
  2495                           
  2496                           ;ADC.c: 61:             ADCON0bits.CHS1 = 0;
  2497  0101  119F               	bcf	31,3	;volatile
  2498                           
  2499                           ;ADC.c: 62:             ADCON0bits.CHS0 = 0;
  2500  0102  111F               	bcf	31,2	;volatile
  2501                           
  2502                           ;ADC.c: 63:             break;
  2503  0103  2977               	goto	i1l1226
  2504  0104                     i1l28:	
  2505                           ;ADC.c: 64:         case 5:
  2506                           
  2507                           
  2508                           ;ADC.c: 65:             ADCON0bits.CHS3 = 0;
  2509  0104  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0105  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0106  129F               	bcf	31,5	;volatile
  2512                           
  2513                           ;ADC.c: 66:             ADCON0bits.CHS2 = 1;
  2514  0107  161F               	bsf	31,4	;volatile
  2515                           
  2516                           ;ADC.c: 67:             ADCON0bits.CHS1 = 0;
  2517  0108  119F               	bcf	31,3	;volatile
  2518                           
  2519                           ;ADC.c: 68:             ADCON0bits.CHS0 = 1;
  2520  0109  151F               	bsf	31,2	;volatile
  2521                           
  2522                           ;ADC.c: 69:             break;
  2523  010A  2977               	goto	i1l1226
  2524  010B                     i1l29:	
  2525                           ;ADC.c: 70:         case 6:
  2526                           
  2527                           
  2528                           ;ADC.c: 71:             ADCON0bits.CHS3 = 0;
  2529  010B  1283               	bcf	3,5	;RP0=0, select bank0
  2530  010C  1303               	bcf	3,6	;RP1=0, select bank0
  2531  010D  129F               	bcf	31,5	;volatile
  2532                           
  2533                           ;ADC.c: 72:             ADCON0bits.CHS2 = 1;
  2534  010E  161F               	bsf	31,4	;volatile
  2535                           
  2536                           ;ADC.c: 73:             ADCON0bits.CHS1 = 1;
  2537  010F  159F               	bsf	31,3	;volatile
  2538                           
  2539                           ;ADC.c: 74:             ADCON0bits.CHS0 = 0;
  2540  0110  111F               	bcf	31,2	;volatile
  2541                           
  2542                           ;ADC.c: 75:             break;
  2543  0111  2977               	goto	i1l1226
  2544  0112                     i1l30:	
  2545                           ;ADC.c: 76:         case 7:
  2546                           
  2547                           
  2548                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;
  2549  0112  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0113  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0114  129F               	bcf	31,5	;volatile
  2552                           
  2553                           ;ADC.c: 78:             ADCON0bits.CHS2 = 1;
  2554  0115  161F               	bsf	31,4	;volatile
  2555                           
  2556                           ;ADC.c: 79:             ADCON0bits.CHS1 = 1;
  2557  0116  159F               	bsf	31,3	;volatile
  2558                           
  2559                           ;ADC.c: 80:             ADCON0bits.CHS0 = 1;
  2560  0117  151F               	bsf	31,2	;volatile
  2561                           
  2562                           ;ADC.c: 81:             break;
  2563  0118  2977               	goto	i1l1226
  2564  0119                     i1l31:	
  2565                           ;ADC.c: 82:         case 8:
  2566                           
  2567                           
  2568                           ;ADC.c: 83:             ADCON0bits.CHS3 = 1;
  2569  0119  1283               	bcf	3,5	;RP0=0, select bank0
  2570  011A  1303               	bcf	3,6	;RP1=0, select bank0
  2571  011B  169F               	bsf	31,5	;volatile
  2572                           
  2573                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  2574  011C  121F               	bcf	31,4	;volatile
  2575                           
  2576                           ;ADC.c: 85:             ADCON0bits.CHS1 = 0;
  2577  011D  119F               	bcf	31,3	;volatile
  2578                           
  2579                           ;ADC.c: 86:             ADCON0bits.CHS0 = 0;
  2580  011E  111F               	bcf	31,2	;volatile
  2581                           
  2582                           ;ADC.c: 87:             break;
  2583  011F  2977               	goto	i1l1226
  2584  0120                     i1l32:	
  2585                           ;ADC.c: 88:         case 9:
  2586                           
  2587                           
  2588                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  2589  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0122  169F               	bsf	31,5	;volatile
  2592                           
  2593                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  2594  0123  121F               	bcf	31,4	;volatile
  2595                           
  2596                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;
  2597  0124  119F               	bcf	31,3	;volatile
  2598                           
  2599                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  2600  0125  151F               	bsf	31,2	;volatile
  2601                           
  2602                           ;ADC.c: 93:             break;
  2603  0126  2977               	goto	i1l1226
  2604  0127                     i1l33:	
  2605                           ;ADC.c: 94:         case 10:
  2606                           
  2607                           
  2608                           ;ADC.c: 95:             ADCON0bits.CHS3 = 1;
  2609  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0128  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0129  169F               	bsf	31,5	;volatile
  2612                           
  2613                           ;ADC.c: 96:             ADCON0bits.CHS2 = 0;
  2614  012A  121F               	bcf	31,4	;volatile
  2615                           
  2616                           ;ADC.c: 97:             ADCON0bits.CHS1 = 1;
  2617  012B  159F               	bsf	31,3	;volatile
  2618                           
  2619                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  2620  012C  111F               	bcf	31,2	;volatile
  2621                           
  2622                           ;ADC.c: 99:             break;
  2623  012D  2977               	goto	i1l1226
  2624  012E                     i1l34:	
  2625                           ;ADC.c: 100:         case 11:
  2626                           
  2627                           
  2628                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  2629  012E  1283               	bcf	3,5	;RP0=0, select bank0
  2630  012F  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0130  169F               	bsf	31,5	;volatile
  2632                           
  2633                           ;ADC.c: 102:             ADCON0bits.CHS2 = 0;
  2634  0131  121F               	bcf	31,4	;volatile
  2635                           
  2636                           ;ADC.c: 103:             ADCON0bits.CHS1 = 1;
  2637  0132  159F               	bsf	31,3	;volatile
  2638                           
  2639                           ;ADC.c: 104:             ADCON0bits.CHS0 = 1;
  2640  0133  151F               	bsf	31,2	;volatile
  2641                           
  2642                           ;ADC.c: 105:             break;
  2643  0134  2977               	goto	i1l1226
  2644  0135                     i1l35:	
  2645                           ;ADC.c: 106:         case 12:
  2646                           
  2647                           
  2648                           ;ADC.c: 107:             ADCON0bits.CHS3 = 1;
  2649  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0137  169F               	bsf	31,5	;volatile
  2652                           
  2653                           ;ADC.c: 108:             ADCON0bits.CHS2 = 1;
  2654  0138  161F               	bsf	31,4	;volatile
  2655                           
  2656                           ;ADC.c: 109:             ADCON0bits.CHS1 = 0;
  2657  0139  119F               	bcf	31,3	;volatile
  2658                           
  2659                           ;ADC.c: 110:             ADCON0bits.CHS0 = 0;
  2660  013A  111F               	bcf	31,2	;volatile
  2661                           
  2662                           ;ADC.c: 111:             break;
  2663  013B  2977               	goto	i1l1226
  2664  013C                     i1l36:	
  2665                           ;ADC.c: 112:         case 13:
  2666                           
  2667                           
  2668                           ;ADC.c: 113:             ADCON0bits.CHS3 = 1;
  2669  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2670  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2671  013E  169F               	bsf	31,5	;volatile
  2672                           
  2673                           ;ADC.c: 114:             ADCON0bits.CHS2 = 1;
  2674  013F  161F               	bsf	31,4	;volatile
  2675                           
  2676                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;
  2677  0140  119F               	bcf	31,3	;volatile
  2678                           
  2679                           ;ADC.c: 116:             ADCON0bits.CHS0 = 1;
  2680  0141  151F               	bsf	31,2	;volatile
  2681                           
  2682                           ;ADC.c: 117:             break;
  2683  0142  2977               	goto	i1l1226
  2684  0143                     i1l1224:	
  2685  0143  0872               	movf	i1analogInSel@analogIn,w
  2686  0144  00F0               	movwf	??i1_analogInSel
  2687  0145  01F1               	clrf	??i1_analogInSel+1
  2688                           
  2689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2690                           ; Switch size 1, requested type "simple"
  2691                           ; Number of cases is 1, Range of values is 0 to 0
  2692                           ; switch strategies available:
  2693                           ; Name         Instructions Cycles
  2694                           ; simple_byte            4     3 (average)
  2695                           ; direct_byte           11     8 (fixed)
  2696                           ; jumptable            260     6 (fixed)
  2697                           ;	Chosen strategy is simple_byte
  2698  0146  0871               	movf	??i1_analogInSel+1,w
  2699  0147  3A00               	xorlw	0	; case 0
  2700  0148  1903               	skipnz
  2701  0149  294B               	goto	i1l1466
  2702  014A  2977               	goto	i1l1226
  2703  014B                     i1l1466:	
  2704                           
  2705                           ; Switch size 1, requested type "simple"
  2706                           ; Number of cases is 14, Range of values is 0 to 13
  2707                           ; switch strategies available:
  2708                           ; Name         Instructions Cycles
  2709                           ; simple_byte           43    22 (average)
  2710                           ; direct_byte           50     8 (fixed)
  2711                           ; jumptable            260     6 (fixed)
  2712                           ;	Chosen strategy is simple_byte
  2713  014B  0870               	movf	??i1_analogInSel,w
  2714  014C  3A00               	xorlw	0	; case 0
  2715  014D  1903               	skipnz
  2716  014E  28E1               	goto	i1l22
  2717  014F  3A01               	xorlw	1	; case 1
  2718  0150  1903               	skipnz
  2719  0151  28E8               	goto	i1l24
  2720  0152  3A03               	xorlw	3	; case 2
  2721  0153  1903               	skipnz
  2722  0154  28EF               	goto	i1l25
  2723  0155  3A01               	xorlw	1	; case 3
  2724  0156  1903               	skipnz
  2725  0157  28F6               	goto	i1l26
  2726  0158  3A07               	xorlw	7	; case 4
  2727  0159  1903               	skipnz
  2728  015A  28FD               	goto	i1l27
  2729  015B  3A01               	xorlw	1	; case 5
  2730  015C  1903               	skipnz
  2731  015D  2904               	goto	i1l28
  2732  015E  3A03               	xorlw	3	; case 6
  2733  015F  1903               	skipnz
  2734  0160  290B               	goto	i1l29
  2735  0161  3A01               	xorlw	1	; case 7
  2736  0162  1903               	skipnz
  2737  0163  2912               	goto	i1l30
  2738  0164  3A0F               	xorlw	15	; case 8
  2739  0165  1903               	skipnz
  2740  0166  2919               	goto	i1l31
  2741  0167  3A01               	xorlw	1	; case 9
  2742  0168  1903               	skipnz
  2743  0169  2920               	goto	i1l32
  2744  016A  3A03               	xorlw	3	; case 10
  2745  016B  1903               	skipnz
  2746  016C  2927               	goto	i1l33
  2747  016D  3A01               	xorlw	1	; case 11
  2748  016E  1903               	skipnz
  2749  016F  292E               	goto	i1l34
  2750  0170  3A07               	xorlw	7	; case 12
  2751  0171  1903               	skipnz
  2752  0172  2935               	goto	i1l35
  2753  0173  3A01               	xorlw	1	; case 13
  2754  0174  1903               	skipnz
  2755  0175  293C               	goto	i1l36
  2756  0176  2977               	goto	i1l1226
  2757  0177                     i1l1226:	
  2758                           
  2759                           ;ADC.c: 119:     return(ADCON0bits.CHS);;	Return value of i1_analogInSel is never used
  2760  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0178  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0179  081F               	movf	31,w	;volatile
  2763  017A                     i1l37:	
  2764  017A  0008               	return
  2765  017B                     __end_ofi1_analogInSel:	
  2766  007E                     btemp	set	126	;btemp
  2767  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_analogInSel

Critical Paths under _main in BANK0

    _main->_adcFoscSel
    _main->_adcInterrupt
    _main->_analogInSel
    _main->_oscInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     198
                         _adcFoscSel
                       _adcInterrupt
                           _adcSetup
                        _analogInSel
                     _i2c_slave_init
                            _oscInit
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscInit                                              3     3      0      28
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _analogInSel                                          3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInterrupt                                         3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcFoscSel                                           3     3      0      28
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0      22
                                              3 COMMON     5     5      0
                      i1_analogInSel
 ---------------------------------------------------------------------------------
 (3) i1_analogInSel                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcFoscSel
   _adcInterrupt
   _adcSetup
   _analogInSel
   _i2c_slave_init
   _oscInit
   _setup

 _ISR (ROOT)
   i1_analogInSel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 12 15:38:51 2020

                       _x 007D                         _z 007C               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        l11 0320                        l30 01A2  
                      l22 017F                        l15 02AE                        l31 01A7  
                      l32 01AC                        l24 0184                        l17 02B5  
                      l33 01B1                        l25 0189                        l18 02CC  
                      l34 01B6                        l26 018E                        l35 01BB  
                      l27 0193                        l44 02D1                        l36 01C0  
                      l28 0198                        l37 01FA                        l29 019D  
                      l46 02D4                        l47 02D7                        l48 02ED  
                     l100 030A                       l110 021D                       l111 0227  
                     l112 0231                       l113 023B                       l114 0245  
                     l106 01FF                       l115 0271                       l108 0209  
                     l109 0213                       l216 0317              __CFG_CPD$OFF 0000  
                     _ISR 001B                       u490 02A5                       u491 02A4  
            _adcInterrupt 02AA                       _luz 007A                       fsr0 0004  
     analogInSel@analogIn 0022              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    l1200 01FE                      l1204 024F                      l1212 030B  
                    l1150 02BC                      l1214 0312                      l1310 027D  
                    l1144 0318                      l1216 0315                      l1312 0294  
                    l1146 02AD                      l1162 01C5                      l1218 0316  
                    l1314 029F                      l1306 0272                      l1164 01F9  
                    l1316 02A5                      l1308 0277                      l1174 02D0  
                    l1158 017E                      l1190 0301                      l1192 0302  
                    l1178 02DA                      l1194 0303                      l1186 02EE  
                    l1460 01CD                      l1196 0304                      l1188 0300  
                    l1462 02C4                      l1198 0307                      l1464 02E2  
                    l1458 0257                      i1l30 0112                      i1l22 00E1  
                    i1l31 0119                      i1l32 0120                      i1l24 00E8  
                    i1l33 0127                      i1l25 00EF                      i1l34 012E  
                    i1l26 00F6                      i1l35 0135                      i1l27 00FD  
                    i1l36 013C                      i1l28 0104                      i1l37 017A  
                    i1l29 010B              __CFG_WRT$OFF 0000                      _main 0272  
                    btemp 007E                      start 000E             __CFG_IESO$OFF 0000  
                   ??_ISR 0073    __size_ofi1_analogInSel 009C                     ?_main 0070  
                   _ACKEN 048C             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l201 00CD                     i1l204 00D6                     i1l192 0099  
                   i1l193 008B                     i1l185 0043                     i1l196 00D3  
                   i1l188 00D5                     i1l199 00C8                     u30_20 002A  
                   u30_21 0029                     u31_20 002E                     u31_21 002D  
                   u40_20 0074                     u32_20 0032                     u40_21 0073  
                   u32_21 0031                     u41_20 0081                     u33_20 0047  
                   u41_21 0080                     u33_21 0046                     u42_20 0085  
                   u34_20 004B                     u42_21 0084                     u34_21 004A  
                   u50_27 00CA                     u43_20 0091                     u35_20 004F  
                   u43_21 0090                     u35_21 004E                     u44_20 009D  
                   u36_20 0053                     u28_20 0022                     u44_21 009C  
                   u36_21 0052                     u28_21 0021                     u45_20 00A1  
                   u37_20 0057                     u29_20 0026                     u45_21 00A0  
                   u37_21 0056                     u29_21 0025                     u46_20 00AF  
                   u38_20 006B                     u46_21 00AE                     u38_21 006A  
                   u47_20 00BF                     u39_20 0070                     u47_21 00BE  
                   u39_21 006F                     u48_20 00D3                     u48_21 00D2  
          __CFG_FCMEN$OFF 0000                     _setup 030B           __end_of_oscInit 0272  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E      __size_of_analogInSel 0080            __CFG_MCLRE$OFF 0000  
         __initialization 0011              __end_of_main 02AA                    ??_main 0023  
          _i2c_slave_init 02EE                    _ADRESH 001E                    ?_setup 0070  
        __end_of_adcSetup 0321                    i1l1220 00E0                    i1l1300 00B9  
                  i1l1302 00BF                    i1l1224 0143                    i1l1304 00C7  
                  i1l1240 002A                    i1l1226 0177                    i1l1250 0047  
                  i1l1242 002E                    i1l1234 001B                    i1l1260 005E  
                  i1l1252 004B                    i1l1244 0032                    i1l1236 0022  
                  i1l1270 0074                    i1l1262 0064                    i1l1254 004F  
                  i1l1246 0039                    i1l1238 0026                    i1l1280 0081  
                  i1l1272 0078                    i1l1256 0053                    i1l1264 0067  
                  i1l1248 003F                    i1l1290 00A1                    i1l1282 0085  
                  i1l1274 0079                    i1l1266 006B                    i1l1258 0057  
                  i1l1292 00A7                    i1l1284 0091                    i1l1276 007A  
                  i1l1268 0070                    i1l1294 00AA                    i1l1286 0097  
                  i1l1278 007B                    i1l1296 00AF                    i1l1288 009D  
                  i1l1466 014B                    i1l1298 00B7             i1_analogInSel 00DF  
                  _SSPADD 0093                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    _fuerza 0078    __end_of_i2c_slave_init 030B  
               ??_oscInit 0020                    saved_w 007E            ?i1_analogInSel 0070  
              _adcFoscSel 02CD   __end_of__initialization 0017            __pcstackCOMMON 0070  
           __end_of_setup 0318           ?_i2c_slave_init 0020               oscInit@freq 0022  
                 ??_setup 0020                __pmaintext 0272                __pintentry 0004  
               ?_adcSetup 0070           ??i1_analogInSel 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094               ?_adcFoscSel 0070                ??_adcSetup 0020  
                 __ptext1 030B                   __ptext2 01FB                   __ptext3 02EE  
                 __ptext4 017B                   __ptext5 0318                   __ptext6 02AA  
                 __ptext7 02CD                   __ptext8 001B                   __ptext9 00DF  
            __size_of_ISR 00C4                 _T1CONbits 0010                   _oscInit 01FB  
   i2c_slave_init@address 0020             ??_analogInSel 0020      end_of_initialization 0017  
     __size_of_adcFoscSel 0021                 _TRISBbits 0086                 _TRISCbits 0087  
   i1analogInSel@analogIn 0072       __end_of_analogInSel 01FB          ??_i2c_slave_init 0022  
          adcFoscSel@fosc 0022             ?_adcInterrupt 0070       start_initialization 0011  
             __end_of_ISR 00DF  __CFG_FOSC$INTRC_NOCLKOUT 0000            ??_adcInterrupt 0020  
       __size_of_adcSetup 0009               __pbssCOMMON 0078                 ___latbits 0002  
           __pcstackBANK0 0020               _analogInSel 017B              ??_adcFoscSel 0020  
      __end_of_adcFoscSel 02EE                  ?_oscInit 0070            __size_of_setup 000D  
   __end_ofi1_analogInSel 017B         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C            adcInterrupt@en 0022                _ADCON0bits 001F  
              _ADCON1bits 009F      __end_of_adcInterrupt 02CD                  _adcSetup 0318  
              _ANSELHbits 0189          __size_of_oscInit 0077         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0038                _INTCONbits 000B                  intlevel1 0000  
            ?_analogInSel 0070                _OSCCONbits 008F   __size_of_i2c_slave_init 001D  
             _SSPCON2bits 0091     __size_of_adcInterrupt 0023                _SSPCONbits 0014  
