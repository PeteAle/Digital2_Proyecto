

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 09 17:17:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  000E                     	;# 
   460  000E                     	;# 
   461  000F                     	;# 
   462  0010                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0013                     	;# 
   466  0014                     	;# 
   467  0015                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  001B                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  001D                     	;# 
   478  001E                     	;# 
   479  001F                     	;# 
   480  0081                     	;# 
   481  0085                     	;# 
   482  0086                     	;# 
   483  0087                     	;# 
   484  0088                     	;# 
   485  0089                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  008F                     	;# 
   490  0090                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0094                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  0105                     	;# 
   509  0107                     	;# 
   510  0108                     	;# 
   511  0109                     	;# 
   512  010C                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  010F                     	;# 
   517  0185                     	;# 
   518  0187                     	;# 
   519  0188                     	;# 
   520  0189                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0014                     _SSPCONbits	set	20
   524  001E                     _ADRESH	set	30
   525  0010                     _T1CONbits	set	16
   526  000B                     _INTCONbits	set	11
   527  0013                     _SSPBUF	set	19
   528  0014                     _SSPCON	set	20
   529  000C                     _PIR1bits	set	12
   530  001F                     _ADCON0bits	set	31
   531  0086                     _TRISBbits	set	134
   532  0094                     _SSPSTATbits	set	148
   533  008F                     _OSCCONbits	set	143
   534  0091                     _SSPCON2bits	set	145
   535  0087                     _TRISCbits	set	135
   536  0094                     _SSPSTAT	set	148
   537  0093                     _SSPADD	set	147
   538  0091                     _SSPCON2	set	145
   539  008C                     _PIE1bits	set	140
   540  009F                     _ADCON1bits	set	159
   541  048C                     _ACKEN	set	1164
   542  0189                     _ANSELHbits	set	393
   543  0188                     _ANSEL	set	392
   544                           
   545                           ; #config settings
   546  0000                     
   547                           	psect	cinit
   548  000F                     start_initialization:	
   549  000F                     __initialization:	
   550                           
   551                           ; Clear objects allocated to COMMON
   552  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   553  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   554  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   555  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   556  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   557  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   558                           
   559                           ; Clear objects allocated to BANK0
   560  0015  1283               	bcf	3,5	;RP0=0, select bank0
   561  0016  1303               	bcf	3,6	;RP1=0, select bank0
   562  0017  01A0               	clrf	__pbssBANK0& (0+127)
   563  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   564  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   565  001A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   566  001B                     end_of_initialization:	
   567                           ;End of C runtime variable initialization code
   568                           
   569  001B                     __end_of__initialization:	
   570  001B  0183               	clrf	3
   571  001C  120A  118A  2982   	ljmp	_main	;jump to C main() function
   572                           
   573                           	psect	bssCOMMON
   574  0070                     __pbssCOMMON:	
   575  0070                     _fuerza:	
   576  0070                     	ds	2
   577  0072                     _distancia:	
   578  0072                     	ds	2
   579  0074                     _z:	
   580  0074                     	ds	1
   581  0075                     _x:	
   582  0075                     	ds	1
   583                           
   584                           	psect	bssBANK0
   585  0020                     __pbssBANK0:	
   586  0020                     _angulo:	
   587  0020                     	ds	2
   588  0022                     _velocidad:	
   589  0022                     	ds	2
   590                           
   591                           	psect	cstackCOMMON
   592  0076                     __pcstackCOMMON:	
   593  0076                     ?_setup:	
   594  0076                     ?_adcSetup:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0076                     ?_adcInterrupt:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0076                     ?_analogInSel:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0076                     ?_adcFoscSel:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0076                     ?_oscInit:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0076                     ?_ISR:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0076                     ??_ISR:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0076                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618                           
   619                           ; 1 bytes @ 0x0
   620  0076                     	ds	4
   621  007A                     ??_setup:	
   622  007A                     ??_adcSetup:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  007A                     ??_i2c_slave_init:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  007A                     ??_main:	
   629                           ; 1 bytes @ 0x4
   630                           
   631                           
   632                           	psect	cstackBANK0
   633  0024                     __pcstackBANK0:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0024                     ??_adcInterrupt:	
   637  0024                     ??_analogInSel:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0024                     ??_adcFoscSel:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0024                     ?_i2c_slave_init:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0024                     ??_oscInit:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0024                     i2c_slave_init@address:	
   650                           ; 1 bytes @ 0x0
   651                           
   652                           
   653                           ; 2 bytes @ 0x0
   654  0024                     	ds	2
   655  0026                     adcInterrupt@en:	
   656  0026                     analogInSel@analogIn:	
   657                           ; 1 bytes @ 0x2
   658                           
   659  0026                     adcFoscSel@fosc:	
   660                           ; 1 bytes @ 0x2
   661                           
   662  0026                     oscInit@freq:	
   663                           ; 1 bytes @ 0x2
   664                           
   665                           
   666                           ; 1 bytes @ 0x2
   667  0026                     	ds	1
   668                           
   669                           	psect	maintext
   670  0182                     __pmaintext:	
   671 ;;
   672 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   673 ;;
   674 ;; *************** function _main *****************
   675 ;; Defined at:
   676 ;;		line 103 in file "Sensores.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : B00/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels required when called:    2
   696 ;; This function calls:
   697 ;;		_adcFoscSel
   698 ;;		_adcInterrupt
   699 ;;		_adcSetup
   700 ;;		_analogInSel
   701 ;;		_i2c_slave_init
   702 ;;		_oscInit
   703 ;;		_setup
   704 ;; This function is called by:
   705 ;;		Startup code after reset
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _main
   711  0182                     _main:	
   712  0182                     l1247:	
   713                           ;incstack = 0
   714                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   715                           
   716                           
   717                           ;Sensores.c: 104:     setup();
   718  0182  120A  118A  221B  120A  118A  	fcall	_setup
   719  0187                     l1249:	
   720                           
   721                           ;Sensores.c: 105:     oscInit(1);
   722  0187  3001               	movlw	1
   723  0188  120A  118A  209F  120A  118A  	fcall	_oscInit
   724  018D                     l1251:	
   725                           
   726                           ;Sensores.c: 106:     adcSetup();
   727  018D  120A  118A  2228  120A  118A  	fcall	_adcSetup
   728                           
   729                           ;Sensores.c: 107:     adcFoscSel(1);
   730  0192  3001               	movlw	1
   731  0193  120A  118A  21DD  120A  118A  	fcall	_adcFoscSel
   732                           
   733                           ;Sensores.c: 108:     analogInSel(9);
   734  0198  3009               	movlw	9
   735  0199  120A  118A  201F  120A  118A  	fcall	_analogInSel
   736                           
   737                           ;Sensores.c: 109:     adcInterrupt(1);
   738  019E  3001               	movlw	1
   739  019F  120A  118A  21BA  120A  118A  	fcall	_adcInterrupt
   740  01A4                     l1253:	
   741                           
   742                           ;Sensores.c: 110:     i2c_slave_init(0x10);
   743  01A4  3010               	movlw	16
   744  01A5  1283               	bcf	3,5	;RP0=0, select bank0
   745  01A6  1303               	bcf	3,6	;RP1=0, select bank0
   746  01A7  00A4               	movwf	i2c_slave_init@address
   747  01A8  3000               	movlw	0
   748  01A9  00A5               	movwf	i2c_slave_init@address+1
   749  01AA  120A  118A  21FE  120A  118A  	fcall	_i2c_slave_init
   750  01AF                     l1255:	
   751                           
   752                           ;Sensores.c: 113:         if (ADCON0bits.GO_DONE == 0){
   753  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   754  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   755  01B1  189F               	btfsc	31,1	;volatile
   756  01B2  29B4               	goto	u181
   757  01B3  29B5               	goto	u180
   758  01B4                     u181:	
   759  01B4  29AF               	goto	l1255
   760  01B5                     u180:	
   761  01B5                     l1257:	
   762                           
   763                           ;Sensores.c: 114:             ADCON0bits.GO_DONE = 1;
   764  01B5  149F               	bsf	31,1	;volatile
   765  01B6  29AF               	goto	l1255
   766  01B7  120A  118A  280C   	ljmp	start
   767  01BA                     __end_of_main:	
   768                           
   769                           	psect	text1
   770  021B                     __ptext1:	
   771 ;; *************** function _setup *****************
   772 ;; Defined at:
   773 ;;		line 152 in file "Sensores.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		status,2
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         0       0       0       0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _setup
   803  021B                     _setup:	
   804  021B                     l871:	
   805                           ;incstack = 0
   806                           ; Regs used in _setup: [status,2]
   807                           
   808                           
   809                           ;Sensores.c: 153:     TRISBbits.TRISB0 = 1;
   810  021B  1683               	bsf	3,5	;RP0=1, select bank1
   811  021C  1303               	bcf	3,6	;RP1=0, select bank1
   812  021D  1406               	bsf	6,0	;volatile
   813                           
   814                           ;Sensores.c: 154:     TRISBbits.TRISB1 = 1;
   815  021E  1486               	bsf	6,1	;volatile
   816                           
   817                           ;Sensores.c: 155:     TRISBbits.TRISB3 = 0;
   818  021F  1186               	bcf	6,3	;volatile
   819                           
   820                           ;Sensores.c: 156:     TRISBbits.TRISB3 = 1;
   821  0220  1586               	bsf	6,3	;volatile
   822                           
   823                           ;Sensores.c: 157:     TRISBbits.TRISB4 = 1;
   824  0221  1606               	bsf	6,4	;volatile
   825  0222                     l873:	
   826                           
   827                           ;Sensores.c: 158:     ANSEL = 0;
   828  0222  1683               	bsf	3,5	;RP0=1, select bank3
   829  0223  1703               	bsf	3,6	;RP1=1, select bank3
   830  0224  0188               	clrf	8	;volatile
   831  0225                     l875:	
   832                           
   833                           ;Sensores.c: 159:     ANSELHbits.ANS9 = 1;
   834  0225  1489               	bsf	9,1	;volatile
   835  0226                     l877:	
   836                           
   837                           ;Sensores.c: 160:     ANSELHbits.ANS11 = 1;
   838  0226  1589               	bsf	9,3	;volatile
   839  0227                     l215:	
   840  0227  0008               	return
   841  0228                     __end_of_setup:	
   842                           
   843                           	psect	text2
   844  009F                     __ptext2:	
   845 ;; *************** function _oscInit *****************
   846 ;; Defined at:
   847 ;;		line 11 in file "OSCCON.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  freq            1    wreg     unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  freq            1    2[BANK0 ] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      unsigned char 
   854 ;; Registers used:
   855 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       1       0       0       0
   863 ;;      Temps:          0       2       0       0       0
   864 ;;      Totals:         0       3       0       0       0
   865 ;;Total ram usage:        3 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _oscInit
   877  009F                     _oscInit:	
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _oscInit: [wreg-fsr0h+status,2+status,0]
   881                           ;oscInit@freq stored from wreg
   882  009F  1283               	bcf	3,5	;RP0=0, select bank0
   883  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   884  00A1  00A6               	movwf	oscInit@freq
   885  00A2                     l1235:	
   886                           
   887                           ;OSCCON.c: 12:     switch(freq){
   888  00A2  28F3               	goto	l1239
   889  00A3                     l106:	
   890                           ;OSCCON.c: 13:         case 0:
   891                           
   892                           
   893                           ;OSCCON.c: 14:             OSCCONbits.IRCF2 = 1;
   894  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   895  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   896  00A5  170F               	bsf	15,6	;volatile
   897                           
   898                           ;OSCCON.c: 15:             OSCCONbits.IRCF1 = 1;
   899  00A6  168F               	bsf	15,5	;volatile
   900                           
   901                           ;OSCCON.c: 16:             OSCCONbits.IRCF0 = 1;
   902  00A7  160F               	bsf	15,4	;volatile
   903                           
   904                           ;OSCCON.c: 17:             OSCCONbits.OSTS = 0;
   905  00A8  118F               	bcf	15,3	;volatile
   906                           
   907                           ;OSCCON.c: 18:             OSCCONbits.HTS = 1;
   908  00A9  150F               	bsf	15,2	;volatile
   909                           
   910                           ;OSCCON.c: 19:             OSCCONbits.LTS = 0;
   911  00AA  108F               	bcf	15,1	;volatile
   912                           
   913                           ;OSCCON.c: 20:             OSCCONbits.SCS = 1;
   914  00AB  140F               	bsf	15,0	;volatile
   915                           
   916                           ;OSCCON.c: 21:             break;
   917  00AC  2915               	goto	l115
   918  00AD                     l108:	
   919                           ;OSCCON.c: 22:         case 1:
   920                           
   921                           
   922                           ;OSCCON.c: 23:             OSCCONbits.IRCF2 = 1;
   923  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   924  00AE  1303               	bcf	3,6	;RP1=0, select bank1
   925  00AF  170F               	bsf	15,6	;volatile
   926                           
   927                           ;OSCCON.c: 24:             OSCCONbits.IRCF1 = 1;
   928  00B0  168F               	bsf	15,5	;volatile
   929                           
   930                           ;OSCCON.c: 25:             OSCCONbits.IRCF0 = 0;
   931  00B1  120F               	bcf	15,4	;volatile
   932                           
   933                           ;OSCCON.c: 26:             OSCCONbits.OSTS = 0;
   934  00B2  118F               	bcf	15,3	;volatile
   935                           
   936                           ;OSCCON.c: 27:             OSCCONbits.HTS = 1;
   937  00B3  150F               	bsf	15,2	;volatile
   938                           
   939                           ;OSCCON.c: 28:             OSCCONbits.LTS = 0;
   940  00B4  108F               	bcf	15,1	;volatile
   941                           
   942                           ;OSCCON.c: 29:             OSCCONbits.SCS = 1;
   943  00B5  140F               	bsf	15,0	;volatile
   944                           
   945                           ;OSCCON.c: 30:             break;
   946  00B6  2915               	goto	l115
   947  00B7                     l109:	
   948                           ;OSCCON.c: 31:         case 2:
   949                           
   950                           
   951                           ;OSCCON.c: 32:             OSCCONbits.IRCF2 = 1;
   952  00B7  1683               	bsf	3,5	;RP0=1, select bank1
   953  00B8  1303               	bcf	3,6	;RP1=0, select bank1
   954  00B9  170F               	bsf	15,6	;volatile
   955                           
   956                           ;OSCCON.c: 33:             OSCCONbits.IRCF1 = 0;
   957  00BA  128F               	bcf	15,5	;volatile
   958                           
   959                           ;OSCCON.c: 34:             OSCCONbits.IRCF0 = 1;
   960  00BB  160F               	bsf	15,4	;volatile
   961                           
   962                           ;OSCCON.c: 35:             OSCCONbits.OSTS = 0;
   963  00BC  118F               	bcf	15,3	;volatile
   964                           
   965                           ;OSCCON.c: 36:             OSCCONbits.HTS = 1;
   966  00BD  150F               	bsf	15,2	;volatile
   967                           
   968                           ;OSCCON.c: 37:             OSCCONbits.LTS = 0;
   969  00BE  108F               	bcf	15,1	;volatile
   970                           
   971                           ;OSCCON.c: 38:             OSCCONbits.SCS = 1;
   972  00BF  140F               	bsf	15,0	;volatile
   973                           
   974                           ;OSCCON.c: 39:             break;
   975  00C0  2915               	goto	l115
   976  00C1                     l110:	
   977                           ;OSCCON.c: 40:         case 3:
   978                           
   979                           
   980                           ;OSCCON.c: 41:             OSCCONbits.IRCF2 = 1;
   981  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   982  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   983  00C3  170F               	bsf	15,6	;volatile
   984                           
   985                           ;OSCCON.c: 42:             OSCCONbits.IRCF1 = 0;
   986  00C4  128F               	bcf	15,5	;volatile
   987                           
   988                           ;OSCCON.c: 43:             OSCCONbits.IRCF0 = 0;
   989  00C5  120F               	bcf	15,4	;volatile
   990                           
   991                           ;OSCCON.c: 44:             OSCCONbits.OSTS = 0;
   992  00C6  118F               	bcf	15,3	;volatile
   993                           
   994                           ;OSCCON.c: 45:             OSCCONbits.HTS = 1;
   995  00C7  150F               	bsf	15,2	;volatile
   996                           
   997                           ;OSCCON.c: 46:             OSCCONbits.LTS = 0;
   998  00C8  108F               	bcf	15,1	;volatile
   999                           
  1000                           ;OSCCON.c: 47:             OSCCONbits.SCS = 1;
  1001  00C9  140F               	bsf	15,0	;volatile
  1002                           
  1003                           ;OSCCON.c: 48:             break;
  1004  00CA  2915               	goto	l115
  1005  00CB                     l111:	
  1006                           ;OSCCON.c: 49:         case 4:
  1007                           
  1008                           
  1009                           ;OSCCON.c: 50:             OSCCONbits.IRCF2 = 0;
  1010  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  1011  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  1012  00CD  130F               	bcf	15,6	;volatile
  1013                           
  1014                           ;OSCCON.c: 51:             OSCCONbits.IRCF1 = 1;
  1015  00CE  168F               	bsf	15,5	;volatile
  1016                           
  1017                           ;OSCCON.c: 52:             OSCCONbits.IRCF0 = 1;
  1018  00CF  160F               	bsf	15,4	;volatile
  1019                           
  1020                           ;OSCCON.c: 53:             OSCCONbits.OSTS = 0;
  1021  00D0  118F               	bcf	15,3	;volatile
  1022                           
  1023                           ;OSCCON.c: 54:             OSCCONbits.HTS = 1;
  1024  00D1  150F               	bsf	15,2	;volatile
  1025                           
  1026                           ;OSCCON.c: 55:             OSCCONbits.LTS = 0;
  1027  00D2  108F               	bcf	15,1	;volatile
  1028                           
  1029                           ;OSCCON.c: 56:             OSCCONbits.SCS = 1;
  1030  00D3  140F               	bsf	15,0	;volatile
  1031                           
  1032                           ;OSCCON.c: 57:             break;
  1033  00D4  2915               	goto	l115
  1034  00D5                     l112:	
  1035                           ;OSCCON.c: 58:         case 5:
  1036                           
  1037                           
  1038                           ;OSCCON.c: 59:             OSCCONbits.IRCF2 = 0;
  1039  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1040  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1041  00D7  130F               	bcf	15,6	;volatile
  1042                           
  1043                           ;OSCCON.c: 60:             OSCCONbits.IRCF1 = 1;
  1044  00D8  168F               	bsf	15,5	;volatile
  1045                           
  1046                           ;OSCCON.c: 61:             OSCCONbits.IRCF0 = 0;
  1047  00D9  120F               	bcf	15,4	;volatile
  1048                           
  1049                           ;OSCCON.c: 62:             OSCCONbits.OSTS = 0;
  1050  00DA  118F               	bcf	15,3	;volatile
  1051                           
  1052                           ;OSCCON.c: 63:             OSCCONbits.HTS = 1;
  1053  00DB  150F               	bsf	15,2	;volatile
  1054                           
  1055                           ;OSCCON.c: 64:             OSCCONbits.LTS = 0;
  1056  00DC  108F               	bcf	15,1	;volatile
  1057                           
  1058                           ;OSCCON.c: 65:             OSCCONbits.SCS = 1;
  1059  00DD  140F               	bsf	15,0	;volatile
  1060                           
  1061                           ;OSCCON.c: 66:             break;
  1062  00DE  2915               	goto	l115
  1063  00DF                     l113:	
  1064                           ;OSCCON.c: 67:         case 6:
  1065                           
  1066                           
  1067                           ;OSCCON.c: 68:             OSCCONbits.IRCF2 = 0;
  1068  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1069  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1070  00E1  130F               	bcf	15,6	;volatile
  1071                           
  1072                           ;OSCCON.c: 69:             OSCCONbits.IRCF1 = 0;
  1073  00E2  128F               	bcf	15,5	;volatile
  1074                           
  1075                           ;OSCCON.c: 70:             OSCCONbits.IRCF0 = 1;
  1076  00E3  160F               	bsf	15,4	;volatile
  1077                           
  1078                           ;OSCCON.c: 71:             OSCCONbits.OSTS = 0;
  1079  00E4  118F               	bcf	15,3	;volatile
  1080                           
  1081                           ;OSCCON.c: 72:             OSCCONbits.HTS = 1;
  1082  00E5  150F               	bsf	15,2	;volatile
  1083                           
  1084                           ;OSCCON.c: 73:             OSCCONbits.LTS = 0;
  1085  00E6  108F               	bcf	15,1	;volatile
  1086                           
  1087                           ;OSCCON.c: 74:             OSCCONbits.SCS = 1;
  1088  00E7  140F               	bsf	15,0	;volatile
  1089                           
  1090                           ;OSCCON.c: 75:             break;
  1091  00E8  2915               	goto	l115
  1092  00E9                     l114:	
  1093                           ;OSCCON.c: 76:         case 7:
  1094                           
  1095                           
  1096                           ;OSCCON.c: 77:             OSCCONbits.IRCF2 = 0;
  1097  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  1098  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  1099  00EB  130F               	bcf	15,6	;volatile
  1100                           
  1101                           ;OSCCON.c: 78:             OSCCONbits.IRCF1 = 0;
  1102  00EC  128F               	bcf	15,5	;volatile
  1103                           
  1104                           ;OSCCON.c: 79:             OSCCONbits.IRCF0 = 0;
  1105  00ED  120F               	bcf	15,4	;volatile
  1106                           
  1107                           ;OSCCON.c: 80:             OSCCONbits.OSTS = 0;
  1108  00EE  118F               	bcf	15,3	;volatile
  1109                           
  1110                           ;OSCCON.c: 81:             OSCCONbits.HTS = 0;
  1111  00EF  110F               	bcf	15,2	;volatile
  1112                           
  1113                           ;OSCCON.c: 82:             OSCCONbits.LTS = 1;
  1114  00F0  148F               	bsf	15,1	;volatile
  1115                           
  1116                           ;OSCCON.c: 83:             OSCCONbits.SCS = 1;
  1117  00F1  140F               	bsf	15,0	;volatile
  1118                           
  1119                           ;OSCCON.c: 84:             break;
  1120  00F2  2915               	goto	l115
  1121  00F3                     l1239:	
  1122  00F3  0826               	movf	oscInit@freq,w
  1123  00F4  00A4               	movwf	??_oscInit
  1124  00F5  01A5               	clrf	??_oscInit+1
  1125                           
  1126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1127                           ; Switch size 1, requested type "simple"
  1128                           ; Number of cases is 1, Range of values is 0 to 0
  1129                           ; switch strategies available:
  1130                           ; Name         Instructions Cycles
  1131                           ; simple_byte            4     3 (average)
  1132                           ; direct_byte           11     8 (fixed)
  1133                           ; jumptable            260     6 (fixed)
  1134                           ;	Chosen strategy is simple_byte
  1135  00F6  0825               	movf	??_oscInit+1,w
  1136  00F7  3A00               	xorlw	0	; case 0
  1137  00F8  1903               	skipnz
  1138  00F9  28FB               	goto	l1379
  1139  00FA  2915               	goto	l115
  1140  00FB                     l1379:	
  1141                           
  1142                           ; Switch size 1, requested type "simple"
  1143                           ; Number of cases is 8, Range of values is 0 to 7
  1144                           ; switch strategies available:
  1145                           ; Name         Instructions Cycles
  1146                           ; simple_byte           25    13 (average)
  1147                           ; direct_byte           32     8 (fixed)
  1148                           ; jumptable            260     6 (fixed)
  1149                           ;	Chosen strategy is simple_byte
  1150  00FB  0824               	movf	??_oscInit,w
  1151  00FC  3A00               	xorlw	0	; case 0
  1152  00FD  1903               	skipnz
  1153  00FE  28A3               	goto	l106
  1154  00FF  3A01               	xorlw	1	; case 1
  1155  0100  1903               	skipnz
  1156  0101  28AD               	goto	l108
  1157  0102  3A03               	xorlw	3	; case 2
  1158  0103  1903               	skipnz
  1159  0104  28B7               	goto	l109
  1160  0105  3A01               	xorlw	1	; case 3
  1161  0106  1903               	skipnz
  1162  0107  28C1               	goto	l110
  1163  0108  3A07               	xorlw	7	; case 4
  1164  0109  1903               	skipnz
  1165  010A  28CB               	goto	l111
  1166  010B  3A01               	xorlw	1	; case 5
  1167  010C  1903               	skipnz
  1168  010D  28D5               	goto	l112
  1169  010E  3A03               	xorlw	3	; case 6
  1170  010F  1903               	skipnz
  1171  0110  28DF               	goto	l113
  1172  0111  3A01               	xorlw	1	; case 7
  1173  0112  1903               	skipnz
  1174  0113  28E9               	goto	l114
  1175  0114  2915               	goto	l115
  1176  0115                     l115:	
  1177  0115  0008               	return
  1178  0116                     __end_of_oscInit:	
  1179                           
  1180                           	psect	text3
  1181  01FE                     __ptext3:	
  1182 ;; *************** function _i2c_slave_init *****************
  1183 ;; Defined at:
  1184 ;;		line 62 in file "I2C.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  address         2    0[BANK0 ] short 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       2       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0
  1201 ;;      Totals:         0       2       0       0       0
  1202 ;;Total ram usage:        2 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _i2c_slave_init
  1214  01FE                     _i2c_slave_init:	
  1215  01FE                     l1221:	
  1216                           ;incstack = 0
  1217                           ; Regs used in _i2c_slave_init: [wreg]
  1218                           
  1219                           
  1220                           ;I2C.c: 63:     SSPSTAT = 0x80;
  1221  01FE  3080               	movlw	128
  1222  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1223  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1224  0201  0094               	movwf	20	;volatile
  1225                           
  1226                           ;I2C.c: 64:     SSPADD = address;
  1227  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0204  0824               	movf	i2c_slave_init@address,w
  1230  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1231  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1232  0207  0093               	movwf	19	;volatile
  1233                           
  1234                           ;I2C.c: 65:     SSPCON = 0x36;
  1235  0208  3036               	movlw	54
  1236  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1237  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1238  020B  0094               	movwf	20	;volatile
  1239                           
  1240                           ;I2C.c: 66:     SSPCON2 = 0x01;
  1241  020C  3001               	movlw	1
  1242  020D  1683               	bsf	3,5	;RP0=1, select bank1
  1243  020E  1303               	bcf	3,6	;RP1=0, select bank1
  1244  020F  0091               	movwf	17	;volatile
  1245  0210                     l1223:	
  1246                           
  1247                           ;I2C.c: 67:     TRISCbits.TRISC3 = 1;
  1248  0210  1587               	bsf	7,3	;volatile
  1249  0211                     l1225:	
  1250                           
  1251                           ;I2C.c: 68:     TRISCbits.TRISC4 = 1;
  1252  0211  1607               	bsf	7,4	;volatile
  1253  0212                     l1227:	
  1254                           
  1255                           ;I2C.c: 69:     INTCONbits.GIE = 1;
  1256  0212  178B               	bsf	11,7	;volatile
  1257  0213                     l1229:	
  1258                           
  1259                           ;I2C.c: 70:     INTCONbits.PEIE = 1;
  1260  0213  170B               	bsf	11,6	;volatile
  1261  0214                     l1231:	
  1262                           
  1263                           ;I2C.c: 71:     PIR1bits.SSPIF = 0;
  1264  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0216  118C               	bcf	12,3	;volatile
  1267  0217                     l1233:	
  1268                           
  1269                           ;I2C.c: 72:     PIE1bits.SSPIE = 1;
  1270  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1271  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1272  0219  158C               	bsf	12,3	;volatile
  1273  021A                     l100:	
  1274  021A  0008               	return
  1275  021B                     __end_of_i2c_slave_init:	
  1276                           
  1277                           	psect	text4
  1278  001F                     __ptext4:	
  1279 ;; *************** function _analogInSel *****************
  1280 ;; Defined at:
  1281 ;;		line 32 in file "ADC.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  analogIn        1    wreg     unsigned char 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  analogIn        1    2[BANK0 ] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      unsigned char 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         0       0       0       0       0
  1296 ;;      Locals:         0       1       0       0       0
  1297 ;;      Temps:          0       2       0       0       0
  1298 ;;      Totals:         0       3       0       0       0
  1299 ;;Total ram usage:        3 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _analogInSel
  1311  001F                     _analogInSel:	
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _analogInSel: [wreg-fsr0h+status,2+status,0]
  1315                           ;analogInSel@analogIn stored from wreg
  1316  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0021  00A6               	movwf	analogInSel@analogIn
  1319  0022                     l1193:	
  1320                           
  1321                           ;ADC.c: 33:     switch(analogIn){
  1322  0022  2869               	goto	l1197
  1323  0023                     l22:	
  1324                           ;ADC.c: 34:         case 0:
  1325                           
  1326                           
  1327                           ;ADC.c: 35:             ADCON0bits.CHS3 = 0;
  1328  0023  129F               	bcf	31,5	;volatile
  1329                           
  1330                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  1331  0024  121F               	bcf	31,4	;volatile
  1332                           
  1333                           ;ADC.c: 37:             ADCON0bits.CHS1 = 0;
  1334  0025  119F               	bcf	31,3	;volatile
  1335                           
  1336                           ;ADC.c: 38:             ADCON0bits.CHS0 = 0;
  1337  0026  111F               	bcf	31,2	;volatile
  1338                           
  1339                           ;ADC.c: 39:             break;
  1340  0027  289D               	goto	l1199
  1341  0028                     l24:	
  1342                           ;ADC.c: 40:         case 1:
  1343                           
  1344                           
  1345                           ;ADC.c: 41:             ADCON0bits.CHS3 = 0;
  1346  0028  129F               	bcf	31,5	;volatile
  1347                           
  1348                           ;ADC.c: 42:             ADCON0bits.CHS2 = 0;
  1349  0029  121F               	bcf	31,4	;volatile
  1350                           
  1351                           ;ADC.c: 43:             ADCON0bits.CHS1 = 0;
  1352  002A  119F               	bcf	31,3	;volatile
  1353                           
  1354                           ;ADC.c: 44:             ADCON0bits.CHS0 = 1;
  1355  002B  151F               	bsf	31,2	;volatile
  1356                           
  1357                           ;ADC.c: 45:             break;
  1358  002C  289D               	goto	l1199
  1359  002D                     l25:	
  1360                           ;ADC.c: 46:         case 2:
  1361                           
  1362                           
  1363                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  1364  002D  129F               	bcf	31,5	;volatile
  1365                           
  1366                           ;ADC.c: 48:             ADCON0bits.CHS2 = 0;
  1367  002E  121F               	bcf	31,4	;volatile
  1368                           
  1369                           ;ADC.c: 49:             ADCON0bits.CHS1 = 1;
  1370  002F  159F               	bsf	31,3	;volatile
  1371                           
  1372                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
  1373  0030  111F               	bcf	31,2	;volatile
  1374                           
  1375                           ;ADC.c: 51:             break;
  1376  0031  289D               	goto	l1199
  1377  0032                     l26:	
  1378                           ;ADC.c: 52:         case 3:
  1379                           
  1380                           
  1381                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
  1382  0032  129F               	bcf	31,5	;volatile
  1383                           
  1384                           ;ADC.c: 54:             ADCON0bits.CHS2 = 0;
  1385  0033  121F               	bcf	31,4	;volatile
  1386                           
  1387                           ;ADC.c: 55:             ADCON0bits.CHS1 = 1;
  1388  0034  159F               	bsf	31,3	;volatile
  1389                           
  1390                           ;ADC.c: 56:             ADCON0bits.CHS0 = 1;
  1391  0035  151F               	bsf	31,2	;volatile
  1392                           
  1393                           ;ADC.c: 57:             break;
  1394  0036  289D               	goto	l1199
  1395  0037                     l27:	
  1396                           ;ADC.c: 58:         case 4:
  1397                           
  1398                           
  1399                           ;ADC.c: 59:             ADCON0bits.CHS3 = 0;
  1400  0037  129F               	bcf	31,5	;volatile
  1401                           
  1402                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  1403  0038  161F               	bsf	31,4	;volatile
  1404                           
  1405                           ;ADC.c: 61:             ADCON0bits.CHS1 = 0;
  1406  0039  119F               	bcf	31,3	;volatile
  1407                           
  1408                           ;ADC.c: 62:             ADCON0bits.CHS0 = 0;
  1409  003A  111F               	bcf	31,2	;volatile
  1410                           
  1411                           ;ADC.c: 63:             break;
  1412  003B  289D               	goto	l1199
  1413  003C                     l28:	
  1414                           ;ADC.c: 64:         case 5:
  1415                           
  1416                           
  1417                           ;ADC.c: 65:             ADCON0bits.CHS3 = 0;
  1418  003C  129F               	bcf	31,5	;volatile
  1419                           
  1420                           ;ADC.c: 66:             ADCON0bits.CHS2 = 1;
  1421  003D  161F               	bsf	31,4	;volatile
  1422                           
  1423                           ;ADC.c: 67:             ADCON0bits.CHS1 = 0;
  1424  003E  119F               	bcf	31,3	;volatile
  1425                           
  1426                           ;ADC.c: 68:             ADCON0bits.CHS0 = 1;
  1427  003F  151F               	bsf	31,2	;volatile
  1428                           
  1429                           ;ADC.c: 69:             break;
  1430  0040  289D               	goto	l1199
  1431  0041                     l29:	
  1432                           ;ADC.c: 70:         case 6:
  1433                           
  1434                           
  1435                           ;ADC.c: 71:             ADCON0bits.CHS3 = 0;
  1436  0041  129F               	bcf	31,5	;volatile
  1437                           
  1438                           ;ADC.c: 72:             ADCON0bits.CHS2 = 1;
  1439  0042  161F               	bsf	31,4	;volatile
  1440                           
  1441                           ;ADC.c: 73:             ADCON0bits.CHS1 = 1;
  1442  0043  159F               	bsf	31,3	;volatile
  1443                           
  1444                           ;ADC.c: 74:             ADCON0bits.CHS0 = 0;
  1445  0044  111F               	bcf	31,2	;volatile
  1446                           
  1447                           ;ADC.c: 75:             break;
  1448  0045  289D               	goto	l1199
  1449  0046                     l30:	
  1450                           ;ADC.c: 76:         case 7:
  1451                           
  1452                           
  1453                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;
  1454  0046  129F               	bcf	31,5	;volatile
  1455                           
  1456                           ;ADC.c: 78:             ADCON0bits.CHS2 = 1;
  1457  0047  161F               	bsf	31,4	;volatile
  1458                           
  1459                           ;ADC.c: 79:             ADCON0bits.CHS1 = 1;
  1460  0048  159F               	bsf	31,3	;volatile
  1461                           
  1462                           ;ADC.c: 80:             ADCON0bits.CHS0 = 1;
  1463  0049  151F               	bsf	31,2	;volatile
  1464                           
  1465                           ;ADC.c: 81:             break;
  1466  004A  289D               	goto	l1199
  1467  004B                     l31:	
  1468                           ;ADC.c: 82:         case 8:
  1469                           
  1470                           
  1471                           ;ADC.c: 83:             ADCON0bits.CHS3 = 1;
  1472  004B  169F               	bsf	31,5	;volatile
  1473                           
  1474                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  1475  004C  121F               	bcf	31,4	;volatile
  1476                           
  1477                           ;ADC.c: 85:             ADCON0bits.CHS1 = 0;
  1478  004D  119F               	bcf	31,3	;volatile
  1479                           
  1480                           ;ADC.c: 86:             ADCON0bits.CHS0 = 0;
  1481  004E  111F               	bcf	31,2	;volatile
  1482                           
  1483                           ;ADC.c: 87:             break;
  1484  004F  289D               	goto	l1199
  1485  0050                     l32:	
  1486                           ;ADC.c: 88:         case 9:
  1487                           
  1488                           
  1489                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1490  0050  169F               	bsf	31,5	;volatile
  1491                           
  1492                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1493  0051  121F               	bcf	31,4	;volatile
  1494                           
  1495                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;
  1496  0052  119F               	bcf	31,3	;volatile
  1497                           
  1498                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1499  0053  151F               	bsf	31,2	;volatile
  1500                           
  1501                           ;ADC.c: 93:             break;
  1502  0054  289D               	goto	l1199
  1503  0055                     l33:	
  1504                           ;ADC.c: 94:         case 10:
  1505                           
  1506                           
  1507                           ;ADC.c: 95:             ADCON0bits.CHS3 = 1;
  1508  0055  169F               	bsf	31,5	;volatile
  1509                           
  1510                           ;ADC.c: 96:             ADCON0bits.CHS2 = 0;
  1511  0056  121F               	bcf	31,4	;volatile
  1512                           
  1513                           ;ADC.c: 97:             ADCON0bits.CHS1 = 1;
  1514  0057  159F               	bsf	31,3	;volatile
  1515                           
  1516                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  1517  0058  111F               	bcf	31,2	;volatile
  1518                           
  1519                           ;ADC.c: 99:             break;
  1520  0059  289D               	goto	l1199
  1521  005A                     l34:	
  1522                           ;ADC.c: 100:         case 11:
  1523                           
  1524                           
  1525                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  1526  005A  169F               	bsf	31,5	;volatile
  1527                           
  1528                           ;ADC.c: 102:             ADCON0bits.CHS2 = 0;
  1529  005B  121F               	bcf	31,4	;volatile
  1530                           
  1531                           ;ADC.c: 103:             ADCON0bits.CHS1 = 1;
  1532  005C  159F               	bsf	31,3	;volatile
  1533                           
  1534                           ;ADC.c: 104:             ADCON0bits.CHS0 = 1;
  1535  005D  151F               	bsf	31,2	;volatile
  1536                           
  1537                           ;ADC.c: 105:             break;
  1538  005E  289D               	goto	l1199
  1539  005F                     l35:	
  1540                           ;ADC.c: 106:         case 12:
  1541                           
  1542                           
  1543                           ;ADC.c: 107:             ADCON0bits.CHS3 = 1;
  1544  005F  169F               	bsf	31,5	;volatile
  1545                           
  1546                           ;ADC.c: 108:             ADCON0bits.CHS2 = 1;
  1547  0060  161F               	bsf	31,4	;volatile
  1548                           
  1549                           ;ADC.c: 109:             ADCON0bits.CHS1 = 0;
  1550  0061  119F               	bcf	31,3	;volatile
  1551                           
  1552                           ;ADC.c: 110:             ADCON0bits.CHS0 = 0;
  1553  0062  111F               	bcf	31,2	;volatile
  1554                           
  1555                           ;ADC.c: 111:             break;
  1556  0063  289D               	goto	l1199
  1557  0064                     l36:	
  1558                           ;ADC.c: 112:         case 13:
  1559                           
  1560                           
  1561                           ;ADC.c: 113:             ADCON0bits.CHS3 = 1;
  1562  0064  169F               	bsf	31,5	;volatile
  1563                           
  1564                           ;ADC.c: 114:             ADCON0bits.CHS2 = 1;
  1565  0065  161F               	bsf	31,4	;volatile
  1566                           
  1567                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;
  1568  0066  119F               	bcf	31,3	;volatile
  1569                           
  1570                           ;ADC.c: 116:             ADCON0bits.CHS0 = 1;
  1571  0067  151F               	bsf	31,2	;volatile
  1572                           
  1573                           ;ADC.c: 117:             break;
  1574  0068  289D               	goto	l1199
  1575  0069                     l1197:	
  1576  0069  0826               	movf	analogInSel@analogIn,w
  1577  006A  00A4               	movwf	??_analogInSel
  1578  006B  01A5               	clrf	??_analogInSel+1
  1579                           
  1580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 1, Range of values is 0 to 0
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte            4     3 (average)
  1586                           ; direct_byte           11     8 (fixed)
  1587                           ; jumptable            260     6 (fixed)
  1588                           ;	Chosen strategy is simple_byte
  1589  006C  0825               	movf	??_analogInSel+1,w
  1590  006D  3A00               	xorlw	0	; case 0
  1591  006E  1903               	skipnz
  1592  006F  2871               	goto	l1381
  1593  0070  289D               	goto	l1199
  1594  0071                     l1381:	
  1595                           
  1596                           ; Switch size 1, requested type "simple"
  1597                           ; Number of cases is 14, Range of values is 0 to 13
  1598                           ; switch strategies available:
  1599                           ; Name         Instructions Cycles
  1600                           ; simple_byte           43    22 (average)
  1601                           ; direct_byte           50     8 (fixed)
  1602                           ; jumptable            260     6 (fixed)
  1603                           ;	Chosen strategy is simple_byte
  1604  0071  0824               	movf	??_analogInSel,w
  1605  0072  3A00               	xorlw	0	; case 0
  1606  0073  1903               	skipnz
  1607  0074  2823               	goto	l22
  1608  0075  3A01               	xorlw	1	; case 1
  1609  0076  1903               	skipnz
  1610  0077  2828               	goto	l24
  1611  0078  3A03               	xorlw	3	; case 2
  1612  0079  1903               	skipnz
  1613  007A  282D               	goto	l25
  1614  007B  3A01               	xorlw	1	; case 3
  1615  007C  1903               	skipnz
  1616  007D  2832               	goto	l26
  1617  007E  3A07               	xorlw	7	; case 4
  1618  007F  1903               	skipnz
  1619  0080  2837               	goto	l27
  1620  0081  3A01               	xorlw	1	; case 5
  1621  0082  1903               	skipnz
  1622  0083  283C               	goto	l28
  1623  0084  3A03               	xorlw	3	; case 6
  1624  0085  1903               	skipnz
  1625  0086  2841               	goto	l29
  1626  0087  3A01               	xorlw	1	; case 7
  1627  0088  1903               	skipnz
  1628  0089  2846               	goto	l30
  1629  008A  3A0F               	xorlw	15	; case 8
  1630  008B  1903               	skipnz
  1631  008C  284B               	goto	l31
  1632  008D  3A01               	xorlw	1	; case 9
  1633  008E  1903               	skipnz
  1634  008F  2850               	goto	l32
  1635  0090  3A03               	xorlw	3	; case 10
  1636  0091  1903               	skipnz
  1637  0092  2855               	goto	l33
  1638  0093  3A01               	xorlw	1	; case 11
  1639  0094  1903               	skipnz
  1640  0095  285A               	goto	l34
  1641  0096  3A07               	xorlw	7	; case 12
  1642  0097  1903               	skipnz
  1643  0098  285F               	goto	l35
  1644  0099  3A01               	xorlw	1	; case 13
  1645  009A  1903               	skipnz
  1646  009B  2864               	goto	l36
  1647  009C  289D               	goto	l1199
  1648  009D                     l1199:	
  1649                           
  1650                           ;ADC.c: 119:     return(ADCON0bits.CHS);;	Return value of _analogInSel is never used
  1651  009D  081F               	movf	31,w	;volatile
  1652  009E                     l37:	
  1653  009E  0008               	return
  1654  009F                     __end_of_analogInSel:	
  1655                           
  1656                           	psect	text5
  1657  0228                     __ptext5:	
  1658 ;; *************** function _adcSetup *****************
  1659 ;; Defined at:
  1660 ;;		line 12 in file "ADC.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		None
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0
  1677 ;;      Totals:         0       0       0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _adcSetup
  1690  0228                     _adcSetup:	
  1691  0228                     l807:	
  1692                           ;incstack = 0
  1693                           ; Regs used in _adcSetup: []
  1694                           
  1695                           
  1696                           ;ADC.c: 13:     ADCON0bits.ADON = 1;
  1697  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1699  022A  141F               	bsf	31,0	;volatile
  1700                           
  1701                           ;ADC.c: 14:     ADCON1bits.ADFM = 0;
  1702  022B  1683               	bsf	3,5	;RP0=1, select bank1
  1703  022C  1303               	bcf	3,6	;RP1=0, select bank1
  1704  022D  139F               	bcf	31,7	;volatile
  1705                           
  1706                           ;ADC.c: 15:     ADCON1bits.VCFG1 = 0;
  1707  022E  129F               	bcf	31,5	;volatile
  1708                           
  1709                           ;ADC.c: 16:     ADCON1bits.VCFG0 = 0;
  1710  022F  121F               	bcf	31,4	;volatile
  1711  0230                     l11:	
  1712  0230  0008               	return
  1713  0231                     __end_of_adcSetup:	
  1714                           
  1715                           	psect	text6
  1716  01BA                     __ptext6:	
  1717 ;; *************** function _adcInterrupt *****************
  1718 ;; Defined at:
  1719 ;;		line 19 in file "ADC.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  en              1    wreg     unsigned char 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  en              1    2[BANK0 ] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         0       0       0       0       0
  1734 ;;      Locals:         0       1       0       0       0
  1735 ;;      Temps:          0       2       0       0       0
  1736 ;;      Totals:         0       3       0       0       0
  1737 ;;Total ram usage:        3 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _adcInterrupt
  1749  01BA                     _adcInterrupt:	
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _adcInterrupt: [wreg-fsr0h+status,2+status,0]
  1753                           ;adcInterrupt@en stored from wreg
  1754  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1755  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1756  01BC  00A6               	movwf	adcInterrupt@en
  1757  01BD                     l1181:	
  1758                           
  1759                           ;ADC.c: 20:     switch(en){
  1760  01BD  29CC               	goto	l1185
  1761  01BE                     l15:	
  1762                           ;ADC.c: 21:         case 0:
  1763                           
  1764                           
  1765                           ;ADC.c: 22:             PIE1bits.ADIE = 0;
  1766  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  1767  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  1768  01C0  130C               	bcf	12,6	;volatile
  1769                           
  1770                           ;ADC.c: 23:             PIR1bits.ADIF = 0;
  1771  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1772  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1773  01C3  130C               	bcf	12,6	;volatile
  1774                           
  1775                           ;ADC.c: 24:             break;
  1776  01C4  29DC               	goto	l18
  1777  01C5                     l17:	
  1778                           ;ADC.c: 25:         case 1:
  1779                           
  1780                           
  1781                           ;ADC.c: 26:             PIE1bits.ADIE = 1;
  1782  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  1783  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  1784  01C7  170C               	bsf	12,6	;volatile
  1785                           
  1786                           ;ADC.c: 27:             PIR1bits.ADIF = 0;
  1787  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1788  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1789  01CA  130C               	bcf	12,6	;volatile
  1790                           
  1791                           ;ADC.c: 28:             break;
  1792  01CB  29DC               	goto	l18
  1793  01CC                     l1185:	
  1794  01CC  0826               	movf	adcInterrupt@en,w
  1795  01CD  00A4               	movwf	??_adcInterrupt
  1796  01CE  01A5               	clrf	??_adcInterrupt+1
  1797                           
  1798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1799                           ; Switch size 1, requested type "simple"
  1800                           ; Number of cases is 1, Range of values is 0 to 0
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte            4     3 (average)
  1804                           ; direct_byte           11     8 (fixed)
  1805                           ; jumptable            260     6 (fixed)
  1806                           ;	Chosen strategy is simple_byte
  1807  01CF  0825               	movf	??_adcInterrupt+1,w
  1808  01D0  3A00               	xorlw	0	; case 0
  1809  01D1  1903               	skipnz
  1810  01D2  29D4               	goto	l1383
  1811  01D3  29DC               	goto	l18
  1812  01D4                     l1383:	
  1813                           
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 2, Range of values is 0 to 1
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            7     4 (average)
  1819                           ; direct_byte           14     8 (fixed)
  1820                           ; jumptable            260     6 (fixed)
  1821                           ;	Chosen strategy is simple_byte
  1822  01D4  0824               	movf	??_adcInterrupt,w
  1823  01D5  3A00               	xorlw	0	; case 0
  1824  01D6  1903               	skipnz
  1825  01D7  29BE               	goto	l15
  1826  01D8  3A01               	xorlw	1	; case 1
  1827  01D9  1903               	skipnz
  1828  01DA  29C5               	goto	l17
  1829  01DB  29DC               	goto	l18
  1830  01DC                     l18:	
  1831  01DC  0008               	return
  1832  01DD                     __end_of_adcInterrupt:	
  1833                           
  1834                           	psect	text7
  1835  01DD                     __ptext7:	
  1836 ;; *************** function _adcFoscSel *****************
  1837 ;; Defined at:
  1838 ;;		line 128 in file "ADC.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  fosc            1    wreg     unsigned char 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  fosc            1    2[BANK0 ] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      unsigned char 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         0       0       0       0       0
  1853 ;;      Locals:         0       1       0       0       0
  1854 ;;      Temps:          0       2       0       0       0
  1855 ;;      Totals:         0       3       0       0       0
  1856 ;;Total ram usage:        3 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function _adcFoscSel
  1868  01DD                     _adcFoscSel:	
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in _adcFoscSel: [wreg-fsr0h+status,2+status,0]
  1872                           ;adcFoscSel@fosc stored from wreg
  1873  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1874  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1875  01DF  00A6               	movwf	adcFoscSel@fosc
  1876  01E0                     l1209:	
  1877                           
  1878                           ;ADC.c: 129:     switch(fosc){
  1879  01E0  29EA               	goto	l1213
  1880  01E1                     l44:	
  1881                           ;ADC.c: 130:         case 0:
  1882                           
  1883                           
  1884                           ;ADC.c: 131:             ADCON0bits.ADCS1 = 0;
  1885  01E1  139F               	bcf	31,7	;volatile
  1886                           
  1887                           ;ADC.c: 132:             ADCON0bits.ADCS0 = 0;
  1888  01E2  131F               	bcf	31,6	;volatile
  1889                           
  1890                           ;ADC.c: 133:             break;
  1891  01E3  29FD               	goto	l48
  1892  01E4                     l46:	
  1893                           ;ADC.c: 134:         case 1:
  1894                           
  1895                           
  1896                           ;ADC.c: 135:             ADCON0bits.ADCS1 = 0;
  1897  01E4  139F               	bcf	31,7	;volatile
  1898                           
  1899                           ;ADC.c: 136:             ADCON0bits.ADCS0 = 1;
  1900  01E5  171F               	bsf	31,6	;volatile
  1901                           
  1902                           ;ADC.c: 137:             break;
  1903  01E6  29FD               	goto	l48
  1904  01E7                     l47:	
  1905                           ;ADC.c: 138:         case 3:
  1906                           
  1907                           
  1908                           ;ADC.c: 139:             ADCON0bits.ADCS1 = 1;
  1909  01E7  179F               	bsf	31,7	;volatile
  1910                           
  1911                           ;ADC.c: 140:             ADCON0bits.ADCS0 = 0;
  1912  01E8  131F               	bcf	31,6	;volatile
  1913                           
  1914                           ;ADC.c: 141:             break;
  1915  01E9  29FD               	goto	l48
  1916  01EA                     l1213:	
  1917  01EA  0826               	movf	adcFoscSel@fosc,w
  1918  01EB  00A4               	movwf	??_adcFoscSel
  1919  01EC  01A5               	clrf	??_adcFoscSel+1
  1920                           
  1921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1922                           ; Switch size 1, requested type "simple"
  1923                           ; Number of cases is 1, Range of values is 0 to 0
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte            4     3 (average)
  1927                           ; direct_byte           11     8 (fixed)
  1928                           ; jumptable            260     6 (fixed)
  1929                           ;	Chosen strategy is simple_byte
  1930  01ED  0825               	movf	??_adcFoscSel+1,w
  1931  01EE  3A00               	xorlw	0	; case 0
  1932  01EF  1903               	skipnz
  1933  01F0  29F2               	goto	l1385
  1934  01F1  29FD               	goto	l48
  1935  01F2                     l1385:	
  1936                           
  1937                           ; Switch size 1, requested type "simple"
  1938                           ; Number of cases is 3, Range of values is 0 to 3
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte           10     6 (average)
  1942                           ; direct_byte           20     8 (fixed)
  1943                           ; jumptable            260     6 (fixed)
  1944                           ;	Chosen strategy is simple_byte
  1945  01F2  0824               	movf	??_adcFoscSel,w
  1946  01F3  3A00               	xorlw	0	; case 0
  1947  01F4  1903               	skipnz
  1948  01F5  29E1               	goto	l44
  1949  01F6  3A01               	xorlw	1	; case 1
  1950  01F7  1903               	skipnz
  1951  01F8  29E4               	goto	l46
  1952  01F9  3A02               	xorlw	2	; case 3
  1953  01FA  1903               	skipnz
  1954  01FB  29E7               	goto	l47
  1955  01FC  29FD               	goto	l48
  1956  01FD                     l48:	
  1957  01FD  0008               	return
  1958  01FE                     __end_of_adcFoscSel:	
  1959                           
  1960                           	psect	text8
  1961  0116                     __ptext8:	
  1962 ;; *************** function _ISR *****************
  1963 ;; Defined at:
  1964 ;;		line 50 in file "Sensores.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0
  1980 ;;      Temps:          4       0       0       0       0
  1981 ;;      Totals:         4       0       0       0       0
  1982 ;;Total ram usage:        4 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		Interrupt level 1
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _ISR
  1993  0116                     _ISR:	
  1994  0116                     i1l945:	
  1995                           
  1996                           ;Sensores.c: 51:     (INTCONbits.GIE = 0);
  1997  0116  138B               	bcf	11,7	;volatile
  1998                           
  1999                           ;Sensores.c: 52:     if (PIR1bits.ADIF == 1){
  2000  0117  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0118  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0119  1F0C               	btfss	12,6	;volatile
  2003  011A  291C               	goto	u6_21
  2004  011B  291D               	goto	u6_20
  2005  011C                     u6_21:	
  2006  011C  2925               	goto	i1l951
  2007  011D                     u6_20:	
  2008  011D                     i1l947:	
  2009                           
  2010                           ;Sensores.c: 53:         fuerza = ADRESH;
  2011  011D  081E               	movf	30,w	;volatile
  2012  011E  00F6               	movwf	??_ISR
  2013  011F  01F7               	clrf	??_ISR+1
  2014  0120  0876               	movf	??_ISR,w
  2015  0121  00F0               	movwf	_fuerza
  2016  0122  0877               	movf	??_ISR+1,w
  2017  0123  00F1               	movwf	_fuerza+1
  2018  0124                     i1l949:	
  2019                           
  2020                           ;Sensores.c: 54:         PIR1bits.ADIF = 0;
  2021  0124  130C               	bcf	12,6	;volatile
  2022  0125                     i1l951:	
  2023                           
  2024                           ;Sensores.c: 57:     if (PIR1bits.SSPIF == 1){
  2025  0125  1D8C               	btfss	12,3	;volatile
  2026  0126  2928               	goto	u7_21
  2027  0127  2929               	goto	u7_20
  2028  0128                     u7_21:	
  2029  0128  297A               	goto	i1l190
  2030  0129                     u7_20:	
  2031  0129                     i1l953:	
  2032                           
  2033                           ;Sensores.c: 58:         SSPCONbits.CKP = 0;
  2034  0129  1214               	bcf	20,4	;volatile
  2035                           
  2036                           ;Sensores.c: 59:         if (SSPCONbits.WCOL == 1 || SSPCONbits.SSPOV == 1){
  2037  012A  1B94               	btfsc	20,7	;volatile
  2038  012B  292D               	goto	u8_21
  2039  012C  292E               	goto	u8_20
  2040  012D                     u8_21:	
  2041  012D  2932               	goto	i1l957
  2042  012E                     u8_20:	
  2043  012E                     i1l955:	
  2044  012E  1F14               	btfss	20,6	;volatile
  2045  012F  2931               	goto	u9_21
  2046  0130  2932               	goto	u9_20
  2047  0131                     u9_21:	
  2048  0131  2939               	goto	i1l965
  2049  0132                     u9_20:	
  2050  0132                     i1l957:	
  2051                           
  2052                           ;Sensores.c: 60:             x = SSPBUF;
  2053  0132  0813               	movf	19,w	;volatile
  2054  0133  00F6               	movwf	??_ISR
  2055  0134  0876               	movf	??_ISR,w
  2056  0135  00F5               	movwf	_x
  2057  0136                     i1l959:	
  2058                           
  2059                           ;Sensores.c: 61:             SSPCONbits.WCOL = 0;
  2060  0136  1394               	bcf	20,7	;volatile
  2061  0137                     i1l961:	
  2062                           
  2063                           ;Sensores.c: 62:             SSPCONbits.SSPOV = 0;
  2064  0137  1314               	bcf	20,6	;volatile
  2065  0138                     i1l963:	
  2066                           
  2067                           ;Sensores.c: 63:             SSPCONbits.CKP = 1;
  2068  0138  1614               	bsf	20,4	;volatile
  2069  0139                     i1l965:	
  2070                           
  2071                           ;Sensores.c: 65:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW){
  2072  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2073  013A  1303               	bcf	3,6	;RP1=0, select bank1
  2074  013B  1A94               	btfsc	20,5	;volatile
  2075  013C  293E               	goto	u10_21
  2076  013D  293F               	goto	u10_20
  2077  013E                     u10_21:	
  2078  013E  2957               	goto	i1l194
  2079  013F                     u10_20:	
  2080  013F                     i1l967:	
  2081  013F  1914               	btfsc	20,2	;volatile
  2082  0140  2942               	goto	u11_21
  2083  0141  2943               	goto	u11_20
  2084  0142                     u11_21:	
  2085  0142  2957               	goto	i1l194
  2086  0143                     u11_20:	
  2087  0143                     i1l969:	
  2088                           
  2089                           ;Sensores.c: 66:             x = SSPBUF;
  2090  0143  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0144  1303               	bcf	3,6	;RP1=0, select bank0
  2092  0145  0813               	movf	19,w	;volatile
  2093  0146  00F6               	movwf	??_ISR
  2094  0147  0876               	movf	??_ISR,w
  2095  0148  00F5               	movwf	_x
  2096  0149                     i1l195:	
  2097                           ;Sensores.c: 67:             while(!SSPSTATbits.BF);
  2098                           
  2099  0149  1683               	bsf	3,5	;RP0=1, select bank1
  2100  014A  1303               	bcf	3,6	;RP1=0, select bank1
  2101  014B  1C14               	btfss	20,0	;volatile
  2102  014C  294E               	goto	u12_21
  2103  014D  294F               	goto	u12_20
  2104  014E                     u12_21:	
  2105  014E  2949               	goto	i1l195
  2106  014F                     u12_20:	
  2107  014F                     i1l971:	
  2108                           
  2109                           ;Sensores.c: 68:             z = SSPBUF;
  2110  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0151  0813               	movf	19,w	;volatile
  2113  0152  00F6               	movwf	??_ISR
  2114  0153  0876               	movf	??_ISR,w
  2115  0154  00F4               	movwf	_z
  2116  0155                     i1l973:	
  2117                           
  2118                           ;Sensores.c: 69:             SSPCONbits.CKP = 1;
  2119  0155  1614               	bsf	20,4	;volatile
  2120                           
  2121                           ;Sensores.c: 70:         }
  2122  0156  2978               	goto	i1l198
  2123  0157                     i1l194:	
  2124                           ;Sensores.c: 71:         else if (!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  2125                           
  2126  0157  1A94               	btfsc	20,5	;volatile
  2127  0158  295A               	goto	u13_21
  2128  0159  295B               	goto	u13_20
  2129  015A                     u13_21:	
  2130  015A  2978               	goto	i1l198
  2131  015B                     u13_20:	
  2132  015B                     i1l975:	
  2133  015B  1D14               	btfss	20,2	;volatile
  2134  015C  295E               	goto	u14_21
  2135  015D  295F               	goto	u14_20
  2136  015E                     u14_21:	
  2137  015E  2978               	goto	i1l198
  2138  015F                     u14_20:	
  2139  015F                     i1l977:	
  2140                           
  2141                           ;Sensores.c: 72:             x = SSPBUF;
  2142  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0160  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0161  0813               	movf	19,w	;volatile
  2145  0162  00F6               	movwf	??_ISR
  2146  0163  0876               	movf	??_ISR,w
  2147  0164  00F5               	movwf	_x
  2148  0165                     i1l979:	
  2149                           
  2150                           ;Sensores.c: 73:             SSPSTATbits.BF = 0;
  2151  0165  1683               	bsf	3,5	;RP0=1, select bank1
  2152  0166  1303               	bcf	3,6	;RP1=0, select bank1
  2153  0167  1014               	bcf	20,0	;volatile
  2154                           
  2155                           ;Sensores.c: 76:                 SSPBUF = fuerza;
  2156  0168  0870               	movf	_fuerza,w
  2157  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2158  016A  1303               	bcf	3,6	;RP1=0, select bank0
  2159  016B  0093               	movwf	19	;volatile
  2160  016C                     i1l981:	
  2161                           
  2162                           ;Sensores.c: 77:                 SSPCONbits.CKP = 1;
  2163  016C  1614               	bsf	20,4	;volatile
  2164                           
  2165                           ;Sensores.c: 89:             _delay((unsigned long)((300)*(4000000/4000000.0)));
  2166  016D  3063               	movlw	99
  2167  016E  00F6               	movwf	??_ISR
  2168  016F                     u19_27:	
  2169  016F  0BF6               	decfsz	??_ISR,f
  2170  0170  296F               	goto	u19_27
  2171  0171  2972               	nop2
  2172  0172                     i1l200:	
  2173                           ;Sensores.c: 90:             while(SSPSTATbits.BF);
  2174                           
  2175  0172  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0173  1303               	bcf	3,6	;RP1=0, select bank1
  2177  0174  1814               	btfsc	20,0	;volatile
  2178  0175  2977               	goto	u15_21
  2179  0176  2978               	goto	u15_20
  2180  0177                     u15_21:	
  2181  0177  2972               	goto	i1l200
  2182  0178                     u15_20:	
  2183  0178                     i1l198:	
  2184                           
  2185                           ;Sensores.c: 92:         PIR1bits.SSPIF = 0;
  2186  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0179  118C               	bcf	12,3	;volatile
  2188  017A                     i1l190:	
  2189                           ;Sensores.c: 93:     }
  2190                           
  2191                           
  2192                           ;Sensores.c: 100:     (INTCONbits.GIE = 1);
  2193  017A  178B               	bsf	11,7	;volatile
  2194  017B                     i1l203:	
  2195  017B  0879               	movf	??_ISR+3,w
  2196  017C  008A               	movwf	10
  2197  017D  0E78               	swapf	(??_ISR+2)^(0+4294967168),w
  2198  017E  0083               	movwf	3
  2199  017F  0EFE               	swapf	btemp,f
  2200  0180  0E7E               	swapf	btemp,w
  2201  0181  0009               	retfie
  2202  0182                     __end_of_ISR:	
  2203  007E                     btemp	set	126	;btemp
  2204  007E                     wtemp0	set	126
  2205                           
  2206                           	psect	intentry
  2207  0004                     __pintentry:	
  2208                           ;incstack = 0
  2209                           ; Regs used in _ISR: [wreg]
  2210                           
  2211  0004                     interrupt_function:	
  2212  007E                     saved_w	set	btemp
  2213  0004  00FE               	movwf	btemp
  2214  0005  0E03               	swapf	3,w
  2215  0006  00F8               	movwf	??_ISR+2
  2216  0007  080A               	movf	10,w
  2217  0008  00F9               	movwf	??_ISR+3
  2218  0009  120A  118A  2916   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      3       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_adcFoscSel
    _main->_adcInterrupt
    _main->_analogInSel
    _main->_oscInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     221
                         _adcFoscSel
                       _adcInterrupt
                           _adcSetup
                        _analogInSel
                     _i2c_slave_init
                            _oscInit
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscInit                                              3     3      0      28
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _analogInSel                                          3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInterrupt                                         3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcFoscSel                                           3     3      0      28
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcFoscSel
   _adcInterrupt
   _adcSetup
   _analogInSel
   _i2c_slave_init
   _oscInit
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 09 17:17:09 2020

                       _x 0075                         _z 0074               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        l11 0230                        l30 0046  
                      l22 0023                        l15 01BE                        l31 004B  
                      l32 0050                        l24 0028                        l17 01C5  
                      l33 0055                        l25 002D                        l18 01DC  
                      l34 005A                        l26 0032                        l35 005F  
                      l27 0037                        l44 01E1                        l36 0064  
                      l28 003C                        l37 009E                        l29 0041  
                      l46 01E4                        l47 01E7                        l48 01FD  
                     l100 021A                       l110 00C1                       l111 00CB  
                     l112 00D5                       l113 00DF                       l114 00E9  
                     l106 00A3                       l115 0115                       l108 00AD  
                     l109 00B7                       l215 0227                       l807 0228  
                     l871 021B                       l873 0222                       l875 0225  
                     l877 0226                       u180 01B5                       u181 01B4  
            __CFG_CPD$OFF 0000                       _ISR 0116              _adcInterrupt 01BA  
     analogInSel@analogIn 0026              __CFG_LVP$OFF 0000                      ?_ISR 0076  
                    l1213 01EA                      l1221 01FE                      l1231 0214  
                    l1223 0210                      l1209 01E0                      l1233 0217  
                    l1225 0211                      l1227 0212                      l1235 00A2  
                    l1251 018D                      l1181 01BD                      l1229 0213  
                    l1253 01A4                      l1239 00F3                      l1255 01AF  
                    l1247 0182                      l1185 01CC                      l1193 0022  
                    l1257 01B5                      l1249 0187                      l1381 0071  
                    l1197 0069                      l1383 01D4                      l1199 009D  
                    l1385 01F2                      l1379 00FB                      u6_20 011D  
                    u6_21 011C                      u7_20 0129                      u7_21 0128  
                    u8_20 012E                      u8_21 012D                      u9_20 0132  
                    u9_21 0131              __CFG_WRT$OFF 0000                      _main 0182  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0076                     ?_main 0076                     _ACKEN 048C  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l200 0172  
                   i1l203 017B                     i1l190 017A                     i1l194 0157  
                   i1l195 0149                     i1l198 0178                     i1l951 0125  
                   i1l961 0137                     i1l953 0129                     i1l945 0116  
                   i1l971 014F                     i1l963 0138                     i1l955 012E  
                   i1l947 011D                     i1l981 016C                     i1l973 0155  
                   i1l965 0139                     i1l957 0132                     i1l949 0124  
                   i1l975 015B                     i1l967 013F                     i1l959 0136  
                   i1l977 015F                     i1l969 0143                     i1l979 0165  
                   u10_20 013F                     u10_21 013E                     u11_20 0143  
                   u11_21 0142                     u12_20 014F                     u12_21 014E  
                   u13_20 015B                     u13_21 015A                     u14_20 015F  
                   u14_21 015E                     u15_20 0178                     u15_21 0177  
                   u19_27 016F            __CFG_FCMEN$OFF 0000                     _setup 021B  
         __end_of_oscInit 0116            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E      __size_of_analogInSel 0080  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 01BA  
                  ??_main 007A            _i2c_slave_init 01FE                    _ADRESH 001E  
                  ?_setup 0076          __end_of_adcSetup 0231                    _SSPADD 0093  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  _angulo 0020                    _fuerza 0070    __end_of_i2c_slave_init 021B  
               ??_oscInit 0024                    saved_w 007E                _adcFoscSel 01DD  
 __end_of__initialization 001B            __pcstackCOMMON 0076             __end_of_setup 0228  
         ?_i2c_slave_init 0024               oscInit@freq 0026                   ??_setup 007A  
              __pbssBANK0 0020                __pmaintext 0182                __pintentry 0004  
               ?_adcSetup 0076                   _SSPCON2 0091                   _SSPSTAT 0094  
             ?_adcFoscSel 0076                ??_adcSetup 007A                   __ptext1 021B  
                 __ptext2 009F                   __ptext3 01FE                   __ptext4 001F  
                 __ptext5 0228                   __ptext6 01BA                   __ptext7 01DD  
                 __ptext8 0116              __size_of_ISR 006C                 _T1CONbits 0010  
                 _oscInit 009F     i2c_slave_init@address 0024             ??_analogInSel 0024  
    end_of_initialization 001B       __size_of_adcFoscSel 0021                 _TRISBbits 0086  
               _TRISCbits 0087       __end_of_analogInSel 009F          ??_i2c_slave_init 007A  
          adcFoscSel@fosc 0026             ?_adcInterrupt 0076       start_initialization 000F  
             __end_of_ISR 0182  __CFG_FOSC$INTRC_NOCLKOUT 0000            ??_adcInterrupt 0024  
       __size_of_adcSetup 0009               __pbssCOMMON 0070                 ___latbits 0002  
           __pcstackBANK0 0024               _analogInSel 001F              ??_adcFoscSel 0024  
               _distancia 0072        __end_of_adcFoscSel 01FE                  ?_oscInit 0076  
          __size_of_setup 000D         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C            adcInterrupt@en 0026                 _velocidad 0022  
              _ADCON0bits 001F                _ADCON1bits 009F      __end_of_adcInterrupt 01DD  
                _adcSetup 0228                _ANSELHbits 0189          __size_of_oscInit 0077  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0038                _INTCONbits 000B  
                intlevel1 0000              ?_analogInSel 0076                _OSCCONbits 008F  
 __size_of_i2c_slave_init 001D               _SSPCON2bits 0091     __size_of_adcInterrupt 0023  
              _SSPCONbits 0014  
