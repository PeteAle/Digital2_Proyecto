

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 16 22:50:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0088                     	;# 
   406  0089                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  008F                     	;# 
   411  0090                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0105                     	;# 
   430  0107                     	;# 
   431  0108                     	;# 
   432  0109                     	;# 
   433  010C                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  0185                     	;# 
   439  0187                     	;# 
   440  0188                     	;# 
   441  0189                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0088                     	;# 
   484  0089                     	;# 
   485  008C                     	;# 
   486  008D                     	;# 
   487  008E                     	;# 
   488  008F                     	;# 
   489  0090                     	;# 
   490  0091                     	;# 
   491  0092                     	;# 
   492  0093                     	;# 
   493  0093                     	;# 
   494  0093                     	;# 
   495  0094                     	;# 
   496  0095                     	;# 
   497  0096                     	;# 
   498  0097                     	;# 
   499  0098                     	;# 
   500  0099                     	;# 
   501  009A                     	;# 
   502  009B                     	;# 
   503  009C                     	;# 
   504  009D                     	;# 
   505  009E                     	;# 
   506  009F                     	;# 
   507  0105                     	;# 
   508  0107                     	;# 
   509  0108                     	;# 
   510  0109                     	;# 
   511  010C                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  010F                     	;# 
   516  0185                     	;# 
   517  0187                     	;# 
   518  0188                     	;# 
   519  0189                     	;# 
   520  018C                     	;# 
   521  018D                     	;# 
   522  0005                     _PORTA	set	5
   523  0014                     _SSPCONbits	set	20
   524  001E                     _ADRESH	set	30
   525  0010                     _T1CONbits	set	16
   526  000B                     _INTCONbits	set	11
   527  0013                     _SSPBUF	set	19
   528  0014                     _SSPCON	set	20
   529  000C                     _PIR1bits	set	12
   530  001F                     _ADCON0bits	set	31
   531  0086                     _TRISBbits	set	134
   532  0085                     _TRISA	set	133
   533  0094                     _SSPSTATbits	set	148
   534  008F                     _OSCCONbits	set	143
   535  0091                     _SSPCON2bits	set	145
   536  0087                     _TRISCbits	set	135
   537  0094                     _SSPSTAT	set	148
   538  0093                     _SSPADD	set	147
   539  0091                     _SSPCON2	set	145
   540  008C                     _PIE1bits	set	140
   541  009F                     _ADCON1bits	set	159
   542  048C                     _ACKEN	set	1164
   543  0189                     _ANSELHbits	set	393
   544  0188                     _ANSEL	set	392
   545                           
   546                           ; #config settings
   547  0000                     
   548                           	psect	cinit
   549  000F                     start_initialization:	
   550  000F                     __initialization:	
   551                           
   552                           ; Clear objects allocated to COMMON
   553  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   554  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   555  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   556  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   557  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   558  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   559  0015                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  0015                     __end_of__initialization:	
   563  0015  0183               	clrf	3
   564  0016  120A  118A  29B8   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssCOMMON
   567  0070                     __pbssCOMMON:	
   568  0070                     _fuerza:	
   569  0070                     	ds	2
   570  0072                     _luz:	
   571  0072                     	ds	2
   572  0074                     _z:	
   573  0074                     	ds	1
   574  0075                     _x:	
   575  0075                     	ds	1
   576                           
   577                           	psect	cstackCOMMON
   578  0076                     __pcstackCOMMON:	
   579  0076                     ?_setup:	
   580  0076                     ?_adcSetup:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0076                     ?_adcInterrupt:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0076                     ?_analogInSel:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0076                     ?_adcFoscSel:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0076                     ?_oscInit:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0076                     ?_ISR:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0076                     ??_ISR:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0076                     ?_main:	
   602                           ; 1 bytes @ 0x0
   603                           
   604                           
   605                           ; 1 bytes @ 0x0
   606  0076                     	ds	4
   607  007A                     ??_setup:	
   608  007A                     ??_adcSetup:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  007A                     ??_i2c_slave_init:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  007A                     ??_main:	
   615                           ; 1 bytes @ 0x4
   616                           
   617                           
   618                           	psect	cstackBANK0
   619  0020                     __pcstackBANK0:	
   620                           ; 1 bytes @ 0x4
   621                           
   622  0020                     ??_adcInterrupt:	
   623  0020                     ??_analogInSel:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0020                     ??_adcFoscSel:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0020                     ?_i2c_slave_init:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0020                     ??_oscInit:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0020                     i2c_slave_init@address:	
   636                           ; 1 bytes @ 0x0
   637                           
   638                           
   639                           ; 2 bytes @ 0x0
   640  0020                     	ds	2
   641  0022                     adcInterrupt@en:	
   642  0022                     analogInSel@analogIn:	
   643                           ; 1 bytes @ 0x2
   644                           
   645  0022                     adcFoscSel@fosc:	
   646                           ; 1 bytes @ 0x2
   647                           
   648  0022                     oscInit@freq:	
   649                           ; 1 bytes @ 0x2
   650                           
   651                           
   652                           ; 1 bytes @ 0x2
   653  0022                     	ds	1
   654                           
   655                           	psect	maintext
   656  01B8                     __pmaintext:	
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 100 in file "Sensores.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : B00/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels required when called:    2
   682 ;; This function calls:
   683 ;;		_adcFoscSel
   684 ;;		_adcInterrupt
   685 ;;		_adcSetup
   686 ;;		_analogInSel
   687 ;;		_i2c_slave_init
   688 ;;		_oscInit
   689 ;;		_setup
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _main
   697  01B8                     _main:	
   698  01B8                     l1297:	
   699                           ;incstack = 0
   700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;Sensores.c: 101:     setup();
   704  01B8  120A  118A  2253  120A  118A  	fcall	_setup
   705  01BD                     l1299:	
   706                           
   707                           ;Sensores.c: 102:     oscInit(1);
   708  01BD  3001               	movlw	1
   709  01BE  120A  118A  2141  120A  118A  	fcall	_oscInit
   710  01C3                     l1301:	
   711                           
   712                           ;Sensores.c: 103:     adcSetup();
   713  01C3  120A  118A  2263  120A  118A  	fcall	_adcSetup
   714                           
   715                           ;Sensores.c: 104:     adcFoscSel(1);
   716  01C8  3001               	movlw	1
   717  01C9  120A  118A  2215  120A  118A  	fcall	_adcFoscSel
   718                           
   719                           ;Sensores.c: 105:     analogInSel(9);
   720  01CE  3009               	movlw	9
   721  01CF  120A  118A  20C1  120A  118A  	fcall	_analogInSel
   722                           
   723                           ;Sensores.c: 106:     adcInterrupt(1);
   724  01D4  3001               	movlw	1
   725  01D5  120A  118A  21F2  120A  118A  	fcall	_adcInterrupt
   726  01DA                     l1303:	
   727                           
   728                           ;Sensores.c: 107:     (INTCONbits.GIE = 0);
   729  01DA  138B               	bcf	11,7	;volatile
   730  01DB                     l1305:	
   731                           
   732                           ;Sensores.c: 108:     i2c_slave_init(0x10);
   733  01DB  3010               	movlw	16
   734  01DC  1283               	bcf	3,5	;RP0=0, select bank0
   735  01DD  1303               	bcf	3,6	;RP1=0, select bank0
   736  01DE  00A0               	movwf	i2c_slave_init@address
   737  01DF  3000               	movlw	0
   738  01E0  00A1               	movwf	i2c_slave_init@address+1
   739  01E1  120A  118A  2236  120A  118A  	fcall	_i2c_slave_init
   740  01E6                     l1307:	
   741                           
   742                           ;Sensores.c: 109:     (INTCONbits.GIE = 1);
   743  01E6  178B               	bsf	11,7	;volatile
   744  01E7                     l1309:	
   745                           
   746                           ;Sensores.c: 112:         if (ADCON0bits.GO_DONE == 0){
   747  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   748  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   749  01E9  189F               	btfsc	31,1	;volatile
   750  01EA  29EC               	goto	u271
   751  01EB  29ED               	goto	u270
   752  01EC                     u271:	
   753  01EC  29E7               	goto	l1309
   754  01ED                     u270:	
   755  01ED                     l1311:	
   756                           
   757                           ;Sensores.c: 113:             ADCON0bits.GO_DONE = 1;
   758  01ED  149F               	bsf	31,1	;volatile
   759  01EE  29E7               	goto	l1309
   760  01EF  120A  118A  280C   	ljmp	start
   761  01F2                     __end_of_main:	
   762                           
   763                           	psect	text1
   764  0253                     __ptext1:	
   765 ;; *************** function _setup *****************
   766 ;; Defined at:
   767 ;;		line 119 in file "Sensores.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		status,2
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _setup
   797  0253                     _setup:	
   798  0253                     l873:	
   799                           ;incstack = 0
   800                           ; Regs used in _setup: [status,2]
   801                           
   802                           
   803                           ;Sensores.c: 120:     TRISA = 0x00;
   804  0253  1683               	bsf	3,5	;RP0=1, select bank1
   805  0254  1303               	bcf	3,6	;RP1=0, select bank1
   806  0255  0185               	clrf	5	;volatile
   807                           
   808                           ;Sensores.c: 121:     PORTA = 0x00;
   809  0256  1283               	bcf	3,5	;RP0=0, select bank0
   810  0257  1303               	bcf	3,6	;RP1=0, select bank0
   811  0258  0185               	clrf	5	;volatile
   812  0259                     l875:	
   813                           
   814                           ;Sensores.c: 122:     TRISBbits.TRISB3 = 1;
   815  0259  1683               	bsf	3,5	;RP0=1, select bank1
   816  025A  1303               	bcf	3,6	;RP1=0, select bank1
   817  025B  1586               	bsf	6,3	;volatile
   818  025C                     l877:	
   819                           
   820                           ;Sensores.c: 123:     TRISBbits.TRISB2 = 1;
   821  025C  1506               	bsf	6,2	;volatile
   822                           
   823                           ;Sensores.c: 124:     ANSEL = 0;
   824  025D  1683               	bsf	3,5	;RP0=1, select bank3
   825  025E  1703               	bsf	3,6	;RP1=1, select bank3
   826  025F  0188               	clrf	8	;volatile
   827  0260                     l879:	
   828                           
   829                           ;Sensores.c: 125:     ANSELHbits.ANS9 = 1;
   830  0260  1489               	bsf	9,1	;volatile
   831  0261                     l881:	
   832                           
   833                           ;Sensores.c: 126:     ANSELHbits.ANS11 = 1;
   834  0261  1589               	bsf	9,3	;volatile
   835  0262                     l217:	
   836  0262  0008               	return
   837  0263                     __end_of_setup:	
   838                           
   839                           	psect	text2
   840  0141                     __ptext2:	
   841 ;; *************** function _oscInit *****************
   842 ;; Defined at:
   843 ;;		line 11 in file "OSCCON.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  freq            1    wreg     unsigned char 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  freq            1    2[BANK0 ] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      unsigned char 
   850 ;; Registers used:
   851 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         0       0       0       0       0
   858 ;;      Locals:         0       1       0       0       0
   859 ;;      Temps:          0       2       0       0       0
   860 ;;      Totals:         0       3       0       0       0
   861 ;;Total ram usage:        3 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    1
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _oscInit
   873  0141                     _oscInit:	
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _oscInit: [wreg-fsr0h+status,2+status,0]
   877                           ;oscInit@freq stored from wreg
   878  0141  1283               	bcf	3,5	;RP0=0, select bank0
   879  0142  1303               	bcf	3,6	;RP1=0, select bank0
   880  0143  00A2               	movwf	oscInit@freq
   881  0144                     l1285:	
   882                           
   883                           ;OSCCON.c: 12:     switch(freq){
   884  0144  2995               	goto	l1289
   885  0145                     l106:	
   886                           ;OSCCON.c: 13:         case 0:
   887                           
   888                           
   889                           ;OSCCON.c: 14:             OSCCONbits.IRCF2 = 1;
   890  0145  1683               	bsf	3,5	;RP0=1, select bank1
   891  0146  1303               	bcf	3,6	;RP1=0, select bank1
   892  0147  170F               	bsf	15,6	;volatile
   893                           
   894                           ;OSCCON.c: 15:             OSCCONbits.IRCF1 = 1;
   895  0148  168F               	bsf	15,5	;volatile
   896                           
   897                           ;OSCCON.c: 16:             OSCCONbits.IRCF0 = 1;
   898  0149  160F               	bsf	15,4	;volatile
   899                           
   900                           ;OSCCON.c: 17:             OSCCONbits.OSTS = 0;
   901  014A  118F               	bcf	15,3	;volatile
   902                           
   903                           ;OSCCON.c: 18:             OSCCONbits.HTS = 1;
   904  014B  150F               	bsf	15,2	;volatile
   905                           
   906                           ;OSCCON.c: 19:             OSCCONbits.LTS = 0;
   907  014C  108F               	bcf	15,1	;volatile
   908                           
   909                           ;OSCCON.c: 20:             OSCCONbits.SCS = 1;
   910  014D  140F               	bsf	15,0	;volatile
   911                           
   912                           ;OSCCON.c: 21:             break;
   913  014E  29B7               	goto	l115
   914  014F                     l108:	
   915                           ;OSCCON.c: 22:         case 1:
   916                           
   917                           
   918                           ;OSCCON.c: 23:             OSCCONbits.IRCF2 = 1;
   919  014F  1683               	bsf	3,5	;RP0=1, select bank1
   920  0150  1303               	bcf	3,6	;RP1=0, select bank1
   921  0151  170F               	bsf	15,6	;volatile
   922                           
   923                           ;OSCCON.c: 24:             OSCCONbits.IRCF1 = 1;
   924  0152  168F               	bsf	15,5	;volatile
   925                           
   926                           ;OSCCON.c: 25:             OSCCONbits.IRCF0 = 0;
   927  0153  120F               	bcf	15,4	;volatile
   928                           
   929                           ;OSCCON.c: 26:             OSCCONbits.OSTS = 0;
   930  0154  118F               	bcf	15,3	;volatile
   931                           
   932                           ;OSCCON.c: 27:             OSCCONbits.HTS = 1;
   933  0155  150F               	bsf	15,2	;volatile
   934                           
   935                           ;OSCCON.c: 28:             OSCCONbits.LTS = 0;
   936  0156  108F               	bcf	15,1	;volatile
   937                           
   938                           ;OSCCON.c: 29:             OSCCONbits.SCS = 1;
   939  0157  140F               	bsf	15,0	;volatile
   940                           
   941                           ;OSCCON.c: 30:             break;
   942  0158  29B7               	goto	l115
   943  0159                     l109:	
   944                           ;OSCCON.c: 31:         case 2:
   945                           
   946                           
   947                           ;OSCCON.c: 32:             OSCCONbits.IRCF2 = 1;
   948  0159  1683               	bsf	3,5	;RP0=1, select bank1
   949  015A  1303               	bcf	3,6	;RP1=0, select bank1
   950  015B  170F               	bsf	15,6	;volatile
   951                           
   952                           ;OSCCON.c: 33:             OSCCONbits.IRCF1 = 0;
   953  015C  128F               	bcf	15,5	;volatile
   954                           
   955                           ;OSCCON.c: 34:             OSCCONbits.IRCF0 = 1;
   956  015D  160F               	bsf	15,4	;volatile
   957                           
   958                           ;OSCCON.c: 35:             OSCCONbits.OSTS = 0;
   959  015E  118F               	bcf	15,3	;volatile
   960                           
   961                           ;OSCCON.c: 36:             OSCCONbits.HTS = 1;
   962  015F  150F               	bsf	15,2	;volatile
   963                           
   964                           ;OSCCON.c: 37:             OSCCONbits.LTS = 0;
   965  0160  108F               	bcf	15,1	;volatile
   966                           
   967                           ;OSCCON.c: 38:             OSCCONbits.SCS = 1;
   968  0161  140F               	bsf	15,0	;volatile
   969                           
   970                           ;OSCCON.c: 39:             break;
   971  0162  29B7               	goto	l115
   972  0163                     l110:	
   973                           ;OSCCON.c: 40:         case 3:
   974                           
   975                           
   976                           ;OSCCON.c: 41:             OSCCONbits.IRCF2 = 1;
   977  0163  1683               	bsf	3,5	;RP0=1, select bank1
   978  0164  1303               	bcf	3,6	;RP1=0, select bank1
   979  0165  170F               	bsf	15,6	;volatile
   980                           
   981                           ;OSCCON.c: 42:             OSCCONbits.IRCF1 = 0;
   982  0166  128F               	bcf	15,5	;volatile
   983                           
   984                           ;OSCCON.c: 43:             OSCCONbits.IRCF0 = 0;
   985  0167  120F               	bcf	15,4	;volatile
   986                           
   987                           ;OSCCON.c: 44:             OSCCONbits.OSTS = 0;
   988  0168  118F               	bcf	15,3	;volatile
   989                           
   990                           ;OSCCON.c: 45:             OSCCONbits.HTS = 1;
   991  0169  150F               	bsf	15,2	;volatile
   992                           
   993                           ;OSCCON.c: 46:             OSCCONbits.LTS = 0;
   994  016A  108F               	bcf	15,1	;volatile
   995                           
   996                           ;OSCCON.c: 47:             OSCCONbits.SCS = 1;
   997  016B  140F               	bsf	15,0	;volatile
   998                           
   999                           ;OSCCON.c: 48:             break;
  1000  016C  29B7               	goto	l115
  1001  016D                     l111:	
  1002                           ;OSCCON.c: 49:         case 4:
  1003                           
  1004                           
  1005                           ;OSCCON.c: 50:             OSCCONbits.IRCF2 = 0;
  1006  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1007  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1008  016F  130F               	bcf	15,6	;volatile
  1009                           
  1010                           ;OSCCON.c: 51:             OSCCONbits.IRCF1 = 1;
  1011  0170  168F               	bsf	15,5	;volatile
  1012                           
  1013                           ;OSCCON.c: 52:             OSCCONbits.IRCF0 = 1;
  1014  0171  160F               	bsf	15,4	;volatile
  1015                           
  1016                           ;OSCCON.c: 53:             OSCCONbits.OSTS = 0;
  1017  0172  118F               	bcf	15,3	;volatile
  1018                           
  1019                           ;OSCCON.c: 54:             OSCCONbits.HTS = 1;
  1020  0173  150F               	bsf	15,2	;volatile
  1021                           
  1022                           ;OSCCON.c: 55:             OSCCONbits.LTS = 0;
  1023  0174  108F               	bcf	15,1	;volatile
  1024                           
  1025                           ;OSCCON.c: 56:             OSCCONbits.SCS = 1;
  1026  0175  140F               	bsf	15,0	;volatile
  1027                           
  1028                           ;OSCCON.c: 57:             break;
  1029  0176  29B7               	goto	l115
  1030  0177                     l112:	
  1031                           ;OSCCON.c: 58:         case 5:
  1032                           
  1033                           
  1034                           ;OSCCON.c: 59:             OSCCONbits.IRCF2 = 0;
  1035  0177  1683               	bsf	3,5	;RP0=1, select bank1
  1036  0178  1303               	bcf	3,6	;RP1=0, select bank1
  1037  0179  130F               	bcf	15,6	;volatile
  1038                           
  1039                           ;OSCCON.c: 60:             OSCCONbits.IRCF1 = 1;
  1040  017A  168F               	bsf	15,5	;volatile
  1041                           
  1042                           ;OSCCON.c: 61:             OSCCONbits.IRCF0 = 0;
  1043  017B  120F               	bcf	15,4	;volatile
  1044                           
  1045                           ;OSCCON.c: 62:             OSCCONbits.OSTS = 0;
  1046  017C  118F               	bcf	15,3	;volatile
  1047                           
  1048                           ;OSCCON.c: 63:             OSCCONbits.HTS = 1;
  1049  017D  150F               	bsf	15,2	;volatile
  1050                           
  1051                           ;OSCCON.c: 64:             OSCCONbits.LTS = 0;
  1052  017E  108F               	bcf	15,1	;volatile
  1053                           
  1054                           ;OSCCON.c: 65:             OSCCONbits.SCS = 1;
  1055  017F  140F               	bsf	15,0	;volatile
  1056                           
  1057                           ;OSCCON.c: 66:             break;
  1058  0180  29B7               	goto	l115
  1059  0181                     l113:	
  1060                           ;OSCCON.c: 67:         case 6:
  1061                           
  1062                           
  1063                           ;OSCCON.c: 68:             OSCCONbits.IRCF2 = 0;
  1064  0181  1683               	bsf	3,5	;RP0=1, select bank1
  1065  0182  1303               	bcf	3,6	;RP1=0, select bank1
  1066  0183  130F               	bcf	15,6	;volatile
  1067                           
  1068                           ;OSCCON.c: 69:             OSCCONbits.IRCF1 = 0;
  1069  0184  128F               	bcf	15,5	;volatile
  1070                           
  1071                           ;OSCCON.c: 70:             OSCCONbits.IRCF0 = 1;
  1072  0185  160F               	bsf	15,4	;volatile
  1073                           
  1074                           ;OSCCON.c: 71:             OSCCONbits.OSTS = 0;
  1075  0186  118F               	bcf	15,3	;volatile
  1076                           
  1077                           ;OSCCON.c: 72:             OSCCONbits.HTS = 1;
  1078  0187  150F               	bsf	15,2	;volatile
  1079                           
  1080                           ;OSCCON.c: 73:             OSCCONbits.LTS = 0;
  1081  0188  108F               	bcf	15,1	;volatile
  1082                           
  1083                           ;OSCCON.c: 74:             OSCCONbits.SCS = 1;
  1084  0189  140F               	bsf	15,0	;volatile
  1085                           
  1086                           ;OSCCON.c: 75:             break;
  1087  018A  29B7               	goto	l115
  1088  018B                     l114:	
  1089                           ;OSCCON.c: 76:         case 7:
  1090                           
  1091                           
  1092                           ;OSCCON.c: 77:             OSCCONbits.IRCF2 = 0;
  1093  018B  1683               	bsf	3,5	;RP0=1, select bank1
  1094  018C  1303               	bcf	3,6	;RP1=0, select bank1
  1095  018D  130F               	bcf	15,6	;volatile
  1096                           
  1097                           ;OSCCON.c: 78:             OSCCONbits.IRCF1 = 0;
  1098  018E  128F               	bcf	15,5	;volatile
  1099                           
  1100                           ;OSCCON.c: 79:             OSCCONbits.IRCF0 = 0;
  1101  018F  120F               	bcf	15,4	;volatile
  1102                           
  1103                           ;OSCCON.c: 80:             OSCCONbits.OSTS = 0;
  1104  0190  118F               	bcf	15,3	;volatile
  1105                           
  1106                           ;OSCCON.c: 81:             OSCCONbits.HTS = 0;
  1107  0191  110F               	bcf	15,2	;volatile
  1108                           
  1109                           ;OSCCON.c: 82:             OSCCONbits.LTS = 1;
  1110  0192  148F               	bsf	15,1	;volatile
  1111                           
  1112                           ;OSCCON.c: 83:             OSCCONbits.SCS = 1;
  1113  0193  140F               	bsf	15,0	;volatile
  1114                           
  1115                           ;OSCCON.c: 84:             break;
  1116  0194  29B7               	goto	l115
  1117  0195                     l1289:	
  1118  0195  0822               	movf	oscInit@freq,w
  1119  0196  00A0               	movwf	??_oscInit
  1120  0197  01A1               	clrf	??_oscInit+1
  1121                           
  1122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1123                           ; Switch size 1, requested type "simple"
  1124                           ; Number of cases is 1, Range of values is 0 to 0
  1125                           ; switch strategies available:
  1126                           ; Name         Instructions Cycles
  1127                           ; simple_byte            4     3 (average)
  1128                           ; direct_byte           11     8 (fixed)
  1129                           ; jumptable            260     6 (fixed)
  1130                           ;	Chosen strategy is simple_byte
  1131  0198  0821               	movf	??_oscInit+1,w
  1132  0199  3A00               	xorlw	0	; case 0
  1133  019A  1903               	skipnz
  1134  019B  299D               	goto	l1433
  1135  019C  29B7               	goto	l115
  1136  019D                     l1433:	
  1137                           
  1138                           ; Switch size 1, requested type "simple"
  1139                           ; Number of cases is 8, Range of values is 0 to 7
  1140                           ; switch strategies available:
  1141                           ; Name         Instructions Cycles
  1142                           ; simple_byte           25    13 (average)
  1143                           ; direct_byte           32     8 (fixed)
  1144                           ; jumptable            260     6 (fixed)
  1145                           ;	Chosen strategy is simple_byte
  1146  019D  0820               	movf	??_oscInit,w
  1147  019E  3A00               	xorlw	0	; case 0
  1148  019F  1903               	skipnz
  1149  01A0  2945               	goto	l106
  1150  01A1  3A01               	xorlw	1	; case 1
  1151  01A2  1903               	skipnz
  1152  01A3  294F               	goto	l108
  1153  01A4  3A03               	xorlw	3	; case 2
  1154  01A5  1903               	skipnz
  1155  01A6  2959               	goto	l109
  1156  01A7  3A01               	xorlw	1	; case 3
  1157  01A8  1903               	skipnz
  1158  01A9  2963               	goto	l110
  1159  01AA  3A07               	xorlw	7	; case 4
  1160  01AB  1903               	skipnz
  1161  01AC  296D               	goto	l111
  1162  01AD  3A01               	xorlw	1	; case 5
  1163  01AE  1903               	skipnz
  1164  01AF  2977               	goto	l112
  1165  01B0  3A03               	xorlw	3	; case 6
  1166  01B1  1903               	skipnz
  1167  01B2  2981               	goto	l113
  1168  01B3  3A01               	xorlw	1	; case 7
  1169  01B4  1903               	skipnz
  1170  01B5  298B               	goto	l114
  1171  01B6  29B7               	goto	l115
  1172  01B7                     l115:	
  1173  01B7  0008               	return
  1174  01B8                     __end_of_oscInit:	
  1175                           
  1176                           	psect	text3
  1177  0236                     __ptext3:	
  1178 ;; *************** function _i2c_slave_init *****************
  1179 ;; Defined at:
  1180 ;;		line 62 in file "I2C.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;  address         2    0[BANK0 ] short 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       2       0       0       0
  1195 ;;      Locals:         0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0
  1197 ;;      Totals:         0       2       0       0       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    1
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           
  1209                           ;psect for function _i2c_slave_init
  1210  0236                     _i2c_slave_init:	
  1211  0236                     l1271:	
  1212                           ;incstack = 0
  1213                           ; Regs used in _i2c_slave_init: [wreg]
  1214                           
  1215                           
  1216                           ;I2C.c: 63:     SSPSTAT = 0x80;
  1217  0236  3080               	movlw	128
  1218  0237  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0238  1303               	bcf	3,6	;RP1=0, select bank1
  1220  0239  0094               	movwf	20	;volatile
  1221                           
  1222                           ;I2C.c: 64:     SSPADD = address;
  1223  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1224  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1225  023C  0820               	movf	i2c_slave_init@address,w
  1226  023D  1683               	bsf	3,5	;RP0=1, select bank1
  1227  023E  1303               	bcf	3,6	;RP1=0, select bank1
  1228  023F  0093               	movwf	19	;volatile
  1229                           
  1230                           ;I2C.c: 65:     SSPCON = 0x36;
  1231  0240  3036               	movlw	54
  1232  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0243  0094               	movwf	20	;volatile
  1235                           
  1236                           ;I2C.c: 66:     SSPCON2 = 0x01;
  1237  0244  3001               	movlw	1
  1238  0245  1683               	bsf	3,5	;RP0=1, select bank1
  1239  0246  1303               	bcf	3,6	;RP1=0, select bank1
  1240  0247  0091               	movwf	17	;volatile
  1241  0248                     l1273:	
  1242                           
  1243                           ;I2C.c: 67:     TRISCbits.TRISC3 = 1;
  1244  0248  1587               	bsf	7,3	;volatile
  1245  0249                     l1275:	
  1246                           
  1247                           ;I2C.c: 68:     TRISCbits.TRISC4 = 1;
  1248  0249  1607               	bsf	7,4	;volatile
  1249  024A                     l1277:	
  1250                           
  1251                           ;I2C.c: 69:     INTCONbits.GIE = 1;
  1252  024A  178B               	bsf	11,7	;volatile
  1253  024B                     l1279:	
  1254                           
  1255                           ;I2C.c: 70:     INTCONbits.PEIE = 1;
  1256  024B  170B               	bsf	11,6	;volatile
  1257  024C                     l1281:	
  1258                           
  1259                           ;I2C.c: 71:     PIR1bits.SSPIF = 0;
  1260  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1261  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1262  024E  118C               	bcf	12,3	;volatile
  1263  024F                     l1283:	
  1264                           
  1265                           ;I2C.c: 72:     PIE1bits.SSPIE = 1;
  1266  024F  1683               	bsf	3,5	;RP0=1, select bank1
  1267  0250  1303               	bcf	3,6	;RP1=0, select bank1
  1268  0251  158C               	bsf	12,3	;volatile
  1269  0252                     l100:	
  1270  0252  0008               	return
  1271  0253                     __end_of_i2c_slave_init:	
  1272                           
  1273                           	psect	text4
  1274  00C1                     __ptext4:	
  1275 ;; *************** function _analogInSel *****************
  1276 ;; Defined at:
  1277 ;;		line 32 in file "ADC.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  analogIn        1    wreg     unsigned char 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  analogIn        1    2[BANK0 ] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      unsigned char 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       0       0       0       0
  1292 ;;      Locals:         0       1       0       0       0
  1293 ;;      Temps:          0       2       0       0       0
  1294 ;;      Totals:         0       3       0       0       0
  1295 ;;Total ram usage:        3 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:    1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _analogInSel
  1307  00C1                     _analogInSel:	
  1308                           
  1309                           ;incstack = 0
  1310                           ; Regs used in _analogInSel: [wreg-fsr0h+status,2+status,0]
  1311                           ;analogInSel@analogIn stored from wreg
  1312  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1313  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1314  00C3  00A2               	movwf	analogInSel@analogIn
  1315  00C4                     l1243:	
  1316                           
  1317                           ;ADC.c: 33:     switch(analogIn){
  1318  00C4  290B               	goto	l1247
  1319  00C5                     l22:	
  1320                           ;ADC.c: 34:         case 0:
  1321                           
  1322                           
  1323                           ;ADC.c: 35:             ADCON0bits.CHS3 = 0;
  1324  00C5  129F               	bcf	31,5	;volatile
  1325                           
  1326                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  1327  00C6  121F               	bcf	31,4	;volatile
  1328                           
  1329                           ;ADC.c: 37:             ADCON0bits.CHS1 = 0;
  1330  00C7  119F               	bcf	31,3	;volatile
  1331                           
  1332                           ;ADC.c: 38:             ADCON0bits.CHS0 = 0;
  1333  00C8  111F               	bcf	31,2	;volatile
  1334                           
  1335                           ;ADC.c: 39:             break;
  1336  00C9  293F               	goto	l1249
  1337  00CA                     l24:	
  1338                           ;ADC.c: 40:         case 1:
  1339                           
  1340                           
  1341                           ;ADC.c: 41:             ADCON0bits.CHS3 = 0;
  1342  00CA  129F               	bcf	31,5	;volatile
  1343                           
  1344                           ;ADC.c: 42:             ADCON0bits.CHS2 = 0;
  1345  00CB  121F               	bcf	31,4	;volatile
  1346                           
  1347                           ;ADC.c: 43:             ADCON0bits.CHS1 = 0;
  1348  00CC  119F               	bcf	31,3	;volatile
  1349                           
  1350                           ;ADC.c: 44:             ADCON0bits.CHS0 = 1;
  1351  00CD  151F               	bsf	31,2	;volatile
  1352                           
  1353                           ;ADC.c: 45:             break;
  1354  00CE  293F               	goto	l1249
  1355  00CF                     l25:	
  1356                           ;ADC.c: 46:         case 2:
  1357                           
  1358                           
  1359                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  1360  00CF  129F               	bcf	31,5	;volatile
  1361                           
  1362                           ;ADC.c: 48:             ADCON0bits.CHS2 = 0;
  1363  00D0  121F               	bcf	31,4	;volatile
  1364                           
  1365                           ;ADC.c: 49:             ADCON0bits.CHS1 = 1;
  1366  00D1  159F               	bsf	31,3	;volatile
  1367                           
  1368                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
  1369  00D2  111F               	bcf	31,2	;volatile
  1370                           
  1371                           ;ADC.c: 51:             break;
  1372  00D3  293F               	goto	l1249
  1373  00D4                     l26:	
  1374                           ;ADC.c: 52:         case 3:
  1375                           
  1376                           
  1377                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
  1378  00D4  129F               	bcf	31,5	;volatile
  1379                           
  1380                           ;ADC.c: 54:             ADCON0bits.CHS2 = 0;
  1381  00D5  121F               	bcf	31,4	;volatile
  1382                           
  1383                           ;ADC.c: 55:             ADCON0bits.CHS1 = 1;
  1384  00D6  159F               	bsf	31,3	;volatile
  1385                           
  1386                           ;ADC.c: 56:             ADCON0bits.CHS0 = 1;
  1387  00D7  151F               	bsf	31,2	;volatile
  1388                           
  1389                           ;ADC.c: 57:             break;
  1390  00D8  293F               	goto	l1249
  1391  00D9                     l27:	
  1392                           ;ADC.c: 58:         case 4:
  1393                           
  1394                           
  1395                           ;ADC.c: 59:             ADCON0bits.CHS3 = 0;
  1396  00D9  129F               	bcf	31,5	;volatile
  1397                           
  1398                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  1399  00DA  161F               	bsf	31,4	;volatile
  1400                           
  1401                           ;ADC.c: 61:             ADCON0bits.CHS1 = 0;
  1402  00DB  119F               	bcf	31,3	;volatile
  1403                           
  1404                           ;ADC.c: 62:             ADCON0bits.CHS0 = 0;
  1405  00DC  111F               	bcf	31,2	;volatile
  1406                           
  1407                           ;ADC.c: 63:             break;
  1408  00DD  293F               	goto	l1249
  1409  00DE                     l28:	
  1410                           ;ADC.c: 64:         case 5:
  1411                           
  1412                           
  1413                           ;ADC.c: 65:             ADCON0bits.CHS3 = 0;
  1414  00DE  129F               	bcf	31,5	;volatile
  1415                           
  1416                           ;ADC.c: 66:             ADCON0bits.CHS2 = 1;
  1417  00DF  161F               	bsf	31,4	;volatile
  1418                           
  1419                           ;ADC.c: 67:             ADCON0bits.CHS1 = 0;
  1420  00E0  119F               	bcf	31,3	;volatile
  1421                           
  1422                           ;ADC.c: 68:             ADCON0bits.CHS0 = 1;
  1423  00E1  151F               	bsf	31,2	;volatile
  1424                           
  1425                           ;ADC.c: 69:             break;
  1426  00E2  293F               	goto	l1249
  1427  00E3                     l29:	
  1428                           ;ADC.c: 70:         case 6:
  1429                           
  1430                           
  1431                           ;ADC.c: 71:             ADCON0bits.CHS3 = 0;
  1432  00E3  129F               	bcf	31,5	;volatile
  1433                           
  1434                           ;ADC.c: 72:             ADCON0bits.CHS2 = 1;
  1435  00E4  161F               	bsf	31,4	;volatile
  1436                           
  1437                           ;ADC.c: 73:             ADCON0bits.CHS1 = 1;
  1438  00E5  159F               	bsf	31,3	;volatile
  1439                           
  1440                           ;ADC.c: 74:             ADCON0bits.CHS0 = 0;
  1441  00E6  111F               	bcf	31,2	;volatile
  1442                           
  1443                           ;ADC.c: 75:             break;
  1444  00E7  293F               	goto	l1249
  1445  00E8                     l30:	
  1446                           ;ADC.c: 76:         case 7:
  1447                           
  1448                           
  1449                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;
  1450  00E8  129F               	bcf	31,5	;volatile
  1451                           
  1452                           ;ADC.c: 78:             ADCON0bits.CHS2 = 1;
  1453  00E9  161F               	bsf	31,4	;volatile
  1454                           
  1455                           ;ADC.c: 79:             ADCON0bits.CHS1 = 1;
  1456  00EA  159F               	bsf	31,3	;volatile
  1457                           
  1458                           ;ADC.c: 80:             ADCON0bits.CHS0 = 1;
  1459  00EB  151F               	bsf	31,2	;volatile
  1460                           
  1461                           ;ADC.c: 81:             break;
  1462  00EC  293F               	goto	l1249
  1463  00ED                     l31:	
  1464                           ;ADC.c: 82:         case 8:
  1465                           
  1466                           
  1467                           ;ADC.c: 83:             ADCON0bits.CHS3 = 1;
  1468  00ED  169F               	bsf	31,5	;volatile
  1469                           
  1470                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  1471  00EE  121F               	bcf	31,4	;volatile
  1472                           
  1473                           ;ADC.c: 85:             ADCON0bits.CHS1 = 0;
  1474  00EF  119F               	bcf	31,3	;volatile
  1475                           
  1476                           ;ADC.c: 86:             ADCON0bits.CHS0 = 0;
  1477  00F0  111F               	bcf	31,2	;volatile
  1478                           
  1479                           ;ADC.c: 87:             break;
  1480  00F1  293F               	goto	l1249
  1481  00F2                     l32:	
  1482                           ;ADC.c: 88:         case 9:
  1483                           
  1484                           
  1485                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1486  00F2  169F               	bsf	31,5	;volatile
  1487                           
  1488                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1489  00F3  121F               	bcf	31,4	;volatile
  1490                           
  1491                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;
  1492  00F4  119F               	bcf	31,3	;volatile
  1493                           
  1494                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1495  00F5  151F               	bsf	31,2	;volatile
  1496                           
  1497                           ;ADC.c: 93:             break;
  1498  00F6  293F               	goto	l1249
  1499  00F7                     l33:	
  1500                           ;ADC.c: 94:         case 10:
  1501                           
  1502                           
  1503                           ;ADC.c: 95:             ADCON0bits.CHS3 = 1;
  1504  00F7  169F               	bsf	31,5	;volatile
  1505                           
  1506                           ;ADC.c: 96:             ADCON0bits.CHS2 = 0;
  1507  00F8  121F               	bcf	31,4	;volatile
  1508                           
  1509                           ;ADC.c: 97:             ADCON0bits.CHS1 = 1;
  1510  00F9  159F               	bsf	31,3	;volatile
  1511                           
  1512                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  1513  00FA  111F               	bcf	31,2	;volatile
  1514                           
  1515                           ;ADC.c: 99:             break;
  1516  00FB  293F               	goto	l1249
  1517  00FC                     l34:	
  1518                           ;ADC.c: 100:         case 11:
  1519                           
  1520                           
  1521                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  1522  00FC  169F               	bsf	31,5	;volatile
  1523                           
  1524                           ;ADC.c: 102:             ADCON0bits.CHS2 = 0;
  1525  00FD  121F               	bcf	31,4	;volatile
  1526                           
  1527                           ;ADC.c: 103:             ADCON0bits.CHS1 = 1;
  1528  00FE  159F               	bsf	31,3	;volatile
  1529                           
  1530                           ;ADC.c: 104:             ADCON0bits.CHS0 = 1;
  1531  00FF  151F               	bsf	31,2	;volatile
  1532                           
  1533                           ;ADC.c: 105:             break;
  1534  0100  293F               	goto	l1249
  1535  0101                     l35:	
  1536                           ;ADC.c: 106:         case 12:
  1537                           
  1538                           
  1539                           ;ADC.c: 107:             ADCON0bits.CHS3 = 1;
  1540  0101  169F               	bsf	31,5	;volatile
  1541                           
  1542                           ;ADC.c: 108:             ADCON0bits.CHS2 = 1;
  1543  0102  161F               	bsf	31,4	;volatile
  1544                           
  1545                           ;ADC.c: 109:             ADCON0bits.CHS1 = 0;
  1546  0103  119F               	bcf	31,3	;volatile
  1547                           
  1548                           ;ADC.c: 110:             ADCON0bits.CHS0 = 0;
  1549  0104  111F               	bcf	31,2	;volatile
  1550                           
  1551                           ;ADC.c: 111:             break;
  1552  0105  293F               	goto	l1249
  1553  0106                     l36:	
  1554                           ;ADC.c: 112:         case 13:
  1555                           
  1556                           
  1557                           ;ADC.c: 113:             ADCON0bits.CHS3 = 1;
  1558  0106  169F               	bsf	31,5	;volatile
  1559                           
  1560                           ;ADC.c: 114:             ADCON0bits.CHS2 = 1;
  1561  0107  161F               	bsf	31,4	;volatile
  1562                           
  1563                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;
  1564  0108  119F               	bcf	31,3	;volatile
  1565                           
  1566                           ;ADC.c: 116:             ADCON0bits.CHS0 = 1;
  1567  0109  151F               	bsf	31,2	;volatile
  1568                           
  1569                           ;ADC.c: 117:             break;
  1570  010A  293F               	goto	l1249
  1571  010B                     l1247:	
  1572  010B  0822               	movf	analogInSel@analogIn,w
  1573  010C  00A0               	movwf	??_analogInSel
  1574  010D  01A1               	clrf	??_analogInSel+1
  1575                           
  1576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1577                           ; Switch size 1, requested type "simple"
  1578                           ; Number of cases is 1, Range of values is 0 to 0
  1579                           ; switch strategies available:
  1580                           ; Name         Instructions Cycles
  1581                           ; simple_byte            4     3 (average)
  1582                           ; direct_byte           11     8 (fixed)
  1583                           ; jumptable            260     6 (fixed)
  1584                           ;	Chosen strategy is simple_byte
  1585  010E  0821               	movf	??_analogInSel+1,w
  1586  010F  3A00               	xorlw	0	; case 0
  1587  0110  1903               	skipnz
  1588  0111  2913               	goto	l1435
  1589  0112  293F               	goto	l1249
  1590  0113                     l1435:	
  1591                           
  1592                           ; Switch size 1, requested type "simple"
  1593                           ; Number of cases is 14, Range of values is 0 to 13
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte           43    22 (average)
  1597                           ; direct_byte           50     8 (fixed)
  1598                           ; jumptable            260     6 (fixed)
  1599                           ;	Chosen strategy is simple_byte
  1600  0113  0820               	movf	??_analogInSel,w
  1601  0114  3A00               	xorlw	0	; case 0
  1602  0115  1903               	skipnz
  1603  0116  28C5               	goto	l22
  1604  0117  3A01               	xorlw	1	; case 1
  1605  0118  1903               	skipnz
  1606  0119  28CA               	goto	l24
  1607  011A  3A03               	xorlw	3	; case 2
  1608  011B  1903               	skipnz
  1609  011C  28CF               	goto	l25
  1610  011D  3A01               	xorlw	1	; case 3
  1611  011E  1903               	skipnz
  1612  011F  28D4               	goto	l26
  1613  0120  3A07               	xorlw	7	; case 4
  1614  0121  1903               	skipnz
  1615  0122  28D9               	goto	l27
  1616  0123  3A01               	xorlw	1	; case 5
  1617  0124  1903               	skipnz
  1618  0125  28DE               	goto	l28
  1619  0126  3A03               	xorlw	3	; case 6
  1620  0127  1903               	skipnz
  1621  0128  28E3               	goto	l29
  1622  0129  3A01               	xorlw	1	; case 7
  1623  012A  1903               	skipnz
  1624  012B  28E8               	goto	l30
  1625  012C  3A0F               	xorlw	15	; case 8
  1626  012D  1903               	skipnz
  1627  012E  28ED               	goto	l31
  1628  012F  3A01               	xorlw	1	; case 9
  1629  0130  1903               	skipnz
  1630  0131  28F2               	goto	l32
  1631  0132  3A03               	xorlw	3	; case 10
  1632  0133  1903               	skipnz
  1633  0134  28F7               	goto	l33
  1634  0135  3A01               	xorlw	1	; case 11
  1635  0136  1903               	skipnz
  1636  0137  28FC               	goto	l34
  1637  0138  3A07               	xorlw	7	; case 12
  1638  0139  1903               	skipnz
  1639  013A  2901               	goto	l35
  1640  013B  3A01               	xorlw	1	; case 13
  1641  013C  1903               	skipnz
  1642  013D  2906               	goto	l36
  1643  013E  293F               	goto	l1249
  1644  013F                     l1249:	
  1645                           
  1646                           ;ADC.c: 119:     return(ADCON0bits.CHS);;	Return value of _analogInSel is never used
  1647  013F  081F               	movf	31,w	;volatile
  1648  0140                     l37:	
  1649  0140  0008               	return
  1650  0141                     __end_of_analogInSel:	
  1651                           
  1652                           	psect	text5
  1653  0263                     __ptext5:	
  1654 ;; *************** function _adcSetup *****************
  1655 ;; Defined at:
  1656 ;;		line 12 in file "ADC.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		None
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         0       0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _adcSetup
  1686  0263                     _adcSetup:	
  1687  0263                     l809:	
  1688                           ;incstack = 0
  1689                           ; Regs used in _adcSetup: []
  1690                           
  1691                           
  1692                           ;ADC.c: 13:     ADCON0bits.ADON = 1;
  1693  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0265  141F               	bsf	31,0	;volatile
  1696                           
  1697                           ;ADC.c: 14:     ADCON1bits.ADFM = 0;
  1698  0266  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0267  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0268  139F               	bcf	31,7	;volatile
  1701                           
  1702                           ;ADC.c: 15:     ADCON1bits.VCFG1 = 0;
  1703  0269  129F               	bcf	31,5	;volatile
  1704                           
  1705                           ;ADC.c: 16:     ADCON1bits.VCFG0 = 0;
  1706  026A  121F               	bcf	31,4	;volatile
  1707  026B                     l11:	
  1708  026B  0008               	return
  1709  026C                     __end_of_adcSetup:	
  1710                           
  1711                           	psect	text6
  1712  01F2                     __ptext6:	
  1713 ;; *************** function _adcInterrupt *****************
  1714 ;; Defined at:
  1715 ;;		line 19 in file "ADC.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  en              1    wreg     unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  en              1    2[BANK0 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       1       0       0       0
  1731 ;;      Temps:          0       2       0       0       0
  1732 ;;      Totals:         0       3       0       0       0
  1733 ;;Total ram usage:        3 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    1
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _adcInterrupt
  1745  01F2                     _adcInterrupt:	
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _adcInterrupt: [wreg-fsr0h+status,2+status,0]
  1749                           ;adcInterrupt@en stored from wreg
  1750  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1751  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1752  01F4  00A2               	movwf	adcInterrupt@en
  1753  01F5                     l1231:	
  1754                           
  1755                           ;ADC.c: 20:     switch(en){
  1756  01F5  2A04               	goto	l1235
  1757  01F6                     l15:	
  1758                           ;ADC.c: 21:         case 0:
  1759                           
  1760                           
  1761                           ;ADC.c: 22:             PIE1bits.ADIE = 0;
  1762  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  1763  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  1764  01F8  130C               	bcf	12,6	;volatile
  1765                           
  1766                           ;ADC.c: 23:             PIR1bits.ADIF = 0;
  1767  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1768  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1769  01FB  130C               	bcf	12,6	;volatile
  1770                           
  1771                           ;ADC.c: 24:             break;
  1772  01FC  2A14               	goto	l18
  1773  01FD                     l17:	
  1774                           ;ADC.c: 25:         case 1:
  1775                           
  1776                           
  1777                           ;ADC.c: 26:             PIE1bits.ADIE = 1;
  1778  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1779  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1780  01FF  170C               	bsf	12,6	;volatile
  1781                           
  1782                           ;ADC.c: 27:             PIR1bits.ADIF = 0;
  1783  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0202  130C               	bcf	12,6	;volatile
  1786                           
  1787                           ;ADC.c: 28:             break;
  1788  0203  2A14               	goto	l18
  1789  0204                     l1235:	
  1790  0204  0822               	movf	adcInterrupt@en,w
  1791  0205  00A0               	movwf	??_adcInterrupt
  1792  0206  01A1               	clrf	??_adcInterrupt+1
  1793                           
  1794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1795                           ; Switch size 1, requested type "simple"
  1796                           ; Number of cases is 1, Range of values is 0 to 0
  1797                           ; switch strategies available:
  1798                           ; Name         Instructions Cycles
  1799                           ; simple_byte            4     3 (average)
  1800                           ; direct_byte           11     8 (fixed)
  1801                           ; jumptable            260     6 (fixed)
  1802                           ;	Chosen strategy is simple_byte
  1803  0207  0821               	movf	??_adcInterrupt+1,w
  1804  0208  3A00               	xorlw	0	; case 0
  1805  0209  1903               	skipnz
  1806  020A  2A0C               	goto	l1437
  1807  020B  2A14               	goto	l18
  1808  020C                     l1437:	
  1809                           
  1810                           ; Switch size 1, requested type "simple"
  1811                           ; Number of cases is 2, Range of values is 0 to 1
  1812                           ; switch strategies available:
  1813                           ; Name         Instructions Cycles
  1814                           ; simple_byte            7     4 (average)
  1815                           ; direct_byte           14     8 (fixed)
  1816                           ; jumptable            260     6 (fixed)
  1817                           ;	Chosen strategy is simple_byte
  1818  020C  0820               	movf	??_adcInterrupt,w
  1819  020D  3A00               	xorlw	0	; case 0
  1820  020E  1903               	skipnz
  1821  020F  29F6               	goto	l15
  1822  0210  3A01               	xorlw	1	; case 1
  1823  0211  1903               	skipnz
  1824  0212  29FD               	goto	l17
  1825  0213  2A14               	goto	l18
  1826  0214                     l18:	
  1827  0214  0008               	return
  1828  0215                     __end_of_adcInterrupt:	
  1829                           
  1830                           	psect	text7
  1831  0215                     __ptext7:	
  1832 ;; *************** function _adcFoscSel *****************
  1833 ;; Defined at:
  1834 ;;		line 128 in file "ADC.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  fosc            1    wreg     unsigned char 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  fosc            1    2[BANK0 ] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      unsigned char 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       0       0       0       0
  1849 ;;      Locals:         0       1       0       0       0
  1850 ;;      Temps:          0       2       0       0       0
  1851 ;;      Totals:         0       3       0       0       0
  1852 ;;Total ram usage:        3 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    1
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _adcFoscSel
  1864  0215                     _adcFoscSel:	
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _adcFoscSel: [wreg-fsr0h+status,2+status,0]
  1868                           ;adcFoscSel@fosc stored from wreg
  1869  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0217  00A2               	movwf	adcFoscSel@fosc
  1872  0218                     l1259:	
  1873                           
  1874                           ;ADC.c: 129:     switch(fosc){
  1875  0218  2A22               	goto	l1263
  1876  0219                     l44:	
  1877                           ;ADC.c: 130:         case 0:
  1878                           
  1879                           
  1880                           ;ADC.c: 131:             ADCON0bits.ADCS1 = 0;
  1881  0219  139F               	bcf	31,7	;volatile
  1882                           
  1883                           ;ADC.c: 132:             ADCON0bits.ADCS0 = 0;
  1884  021A  131F               	bcf	31,6	;volatile
  1885                           
  1886                           ;ADC.c: 133:             break;
  1887  021B  2A35               	goto	l48
  1888  021C                     l46:	
  1889                           ;ADC.c: 134:         case 1:
  1890                           
  1891                           
  1892                           ;ADC.c: 135:             ADCON0bits.ADCS1 = 0;
  1893  021C  139F               	bcf	31,7	;volatile
  1894                           
  1895                           ;ADC.c: 136:             ADCON0bits.ADCS0 = 1;
  1896  021D  171F               	bsf	31,6	;volatile
  1897                           
  1898                           ;ADC.c: 137:             break;
  1899  021E  2A35               	goto	l48
  1900  021F                     l47:	
  1901                           ;ADC.c: 138:         case 3:
  1902                           
  1903                           
  1904                           ;ADC.c: 139:             ADCON0bits.ADCS1 = 1;
  1905  021F  179F               	bsf	31,7	;volatile
  1906                           
  1907                           ;ADC.c: 140:             ADCON0bits.ADCS0 = 0;
  1908  0220  131F               	bcf	31,6	;volatile
  1909                           
  1910                           ;ADC.c: 141:             break;
  1911  0221  2A35               	goto	l48
  1912  0222                     l1263:	
  1913  0222  0822               	movf	adcFoscSel@fosc,w
  1914  0223  00A0               	movwf	??_adcFoscSel
  1915  0224  01A1               	clrf	??_adcFoscSel+1
  1916                           
  1917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1918                           ; Switch size 1, requested type "simple"
  1919                           ; Number of cases is 1, Range of values is 0 to 0
  1920                           ; switch strategies available:
  1921                           ; Name         Instructions Cycles
  1922                           ; simple_byte            4     3 (average)
  1923                           ; direct_byte           11     8 (fixed)
  1924                           ; jumptable            260     6 (fixed)
  1925                           ;	Chosen strategy is simple_byte
  1926  0225  0821               	movf	??_adcFoscSel+1,w
  1927  0226  3A00               	xorlw	0	; case 0
  1928  0227  1903               	skipnz
  1929  0228  2A2A               	goto	l1439
  1930  0229  2A35               	goto	l48
  1931  022A                     l1439:	
  1932                           
  1933                           ; Switch size 1, requested type "simple"
  1934                           ; Number of cases is 3, Range of values is 0 to 3
  1935                           ; switch strategies available:
  1936                           ; Name         Instructions Cycles
  1937                           ; simple_byte           10     6 (average)
  1938                           ; direct_byte           20     8 (fixed)
  1939                           ; jumptable            260     6 (fixed)
  1940                           ;	Chosen strategy is simple_byte
  1941  022A  0820               	movf	??_adcFoscSel,w
  1942  022B  3A00               	xorlw	0	; case 0
  1943  022C  1903               	skipnz
  1944  022D  2A19               	goto	l44
  1945  022E  3A01               	xorlw	1	; case 1
  1946  022F  1903               	skipnz
  1947  0230  2A1C               	goto	l46
  1948  0231  3A02               	xorlw	2	; case 3
  1949  0232  1903               	skipnz
  1950  0233  2A1F               	goto	l47
  1951  0234  2A35               	goto	l48
  1952  0235                     l48:	
  1953  0235  0008               	return
  1954  0236                     __end_of_adcFoscSel:	
  1955                           
  1956                           	psect	text8
  1957  0019                     __ptext8:	
  1958 ;; *************** function _ISR *****************
  1959 ;; Defined at:
  1960 ;;		line 48 in file "Sensores.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1974 ;;      Params:         0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0
  1976 ;;      Temps:          4       0       0       0       0
  1977 ;;      Totals:         4       0       0       0       0
  1978 ;;Total ram usage:        4 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		Interrupt level 1
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function _ISR
  1989  0019                     _ISR:	
  1990  0019                     i1l949:	
  1991                           
  1992                           ;Sensores.c: 49:     (INTCONbits.GIE = 0);
  1993  0019  138B               	bcf	11,7	;volatile
  1994                           
  1995                           ;Sensores.c: 51:     if (PIR1bits.ADIF == 1 && ADCON0bits.CHS3 == 1 && ADCON0bits.CHS2 =
      +                          = 0 && ADCON0bits.CHS1 == 0 && ADCON0bits.CHS0 == 1){
  1996  001A  1283               	bcf	3,5	;RP0=0, select bank0
  1997  001B  1303               	bcf	3,6	;RP1=0, select bank0
  1998  001C  1F0C               	btfss	12,6	;volatile
  1999  001D  281F               	goto	u6_21
  2000  001E  2820               	goto	u6_20
  2001  001F                     u6_21:	
  2002  001F  283D               	goto	i1l189
  2003  0020                     u6_20:	
  2004  0020                     i1l951:	
  2005  0020  1E9F               	btfss	31,5	;volatile
  2006  0021  2823               	goto	u7_21
  2007  0022  2824               	goto	u7_20
  2008  0023                     u7_21:	
  2009  0023  283D               	goto	i1l189
  2010  0024                     u7_20:	
  2011  0024                     i1l953:	
  2012  0024  1A1F               	btfsc	31,4	;volatile
  2013  0025  2827               	goto	u8_21
  2014  0026  2828               	goto	u8_20
  2015  0027                     u8_21:	
  2016  0027  283D               	goto	i1l189
  2017  0028                     u8_20:	
  2018  0028                     i1l955:	
  2019  0028  199F               	btfsc	31,3	;volatile
  2020  0029  282B               	goto	u9_21
  2021  002A  282C               	goto	u9_20
  2022  002B                     u9_21:	
  2023  002B  283D               	goto	i1l189
  2024  002C                     u9_20:	
  2025  002C                     i1l957:	
  2026  002C  1D1F               	btfss	31,2	;volatile
  2027  002D  282F               	goto	u10_21
  2028  002E  2830               	goto	u10_20
  2029  002F                     u10_21:	
  2030  002F  283D               	goto	i1l189
  2031  0030                     u10_20:	
  2032  0030                     i1l959:	
  2033                           
  2034                           ;Sensores.c: 52:         fuerza = ADRESH;
  2035  0030  081E               	movf	30,w	;volatile
  2036  0031  00F6               	movwf	??_ISR
  2037  0032  01F7               	clrf	??_ISR+1
  2038  0033  0876               	movf	??_ISR,w
  2039  0034  00F0               	movwf	_fuerza
  2040  0035  0877               	movf	??_ISR+1,w
  2041  0036  00F1               	movwf	_fuerza+1
  2042  0037                     i1l961:	
  2043                           
  2044                           ;Sensores.c: 53:         ADCON0bits.CHS3 = 1;
  2045  0037  169F               	bsf	31,5	;volatile
  2046  0038                     i1l963:	
  2047                           
  2048                           ;Sensores.c: 54:         ADCON0bits.CHS2 = 0;
  2049  0038  121F               	bcf	31,4	;volatile
  2050  0039                     i1l965:	
  2051                           
  2052                           ;Sensores.c: 55:         ADCON0bits.CHS1 = 0;
  2053  0039  119F               	bcf	31,3	;volatile
  2054  003A                     i1l967:	
  2055                           
  2056                           ;Sensores.c: 56:         ADCON0bits.CHS0 = 0;
  2057  003A  111F               	bcf	31,2	;volatile
  2058  003B                     i1l969:	
  2059                           
  2060                           ;Sensores.c: 57:         PIR1bits.ADIF = 0;
  2061  003B  130C               	bcf	12,6	;volatile
  2062                           
  2063                           ;Sensores.c: 58:     }
  2064  003C  285D               	goto	i1l991
  2065  003D                     i1l189:	
  2066                           ;Sensores.c: 60:     else if (PIR1bits.ADIF == 1 && ADCON0bits.CHS3 == 1 && ADCON0bits.C
      +                          HS2 == 0 && ADCON0bits.CHS1 == 0 && ADCON0bits.CHS0 == 0){
  2067                           
  2068  003D  1F0C               	btfss	12,6	;volatile
  2069  003E  2840               	goto	u11_21
  2070  003F  2841               	goto	u11_20
  2071  0040                     u11_21:	
  2072  0040  285D               	goto	i1l991
  2073  0041                     u11_20:	
  2074  0041                     i1l971:	
  2075  0041  1E9F               	btfss	31,5	;volatile
  2076  0042  2844               	goto	u12_21
  2077  0043  2845               	goto	u12_20
  2078  0044                     u12_21:	
  2079  0044  285D               	goto	i1l991
  2080  0045                     u12_20:	
  2081  0045                     i1l973:	
  2082  0045  1A1F               	btfsc	31,4	;volatile
  2083  0046  2848               	goto	u13_21
  2084  0047  2849               	goto	u13_20
  2085  0048                     u13_21:	
  2086  0048  285D               	goto	i1l991
  2087  0049                     u13_20:	
  2088  0049                     i1l975:	
  2089  0049  199F               	btfsc	31,3	;volatile
  2090  004A  284C               	goto	u14_21
  2091  004B  284D               	goto	u14_20
  2092  004C                     u14_21:	
  2093  004C  285D               	goto	i1l991
  2094  004D                     u14_20:	
  2095  004D                     i1l977:	
  2096  004D  191F               	btfsc	31,2	;volatile
  2097  004E  2850               	goto	u15_21
  2098  004F  2851               	goto	u15_20
  2099  0050                     u15_21:	
  2100  0050  285D               	goto	i1l991
  2101  0051                     u15_20:	
  2102  0051                     i1l979:	
  2103                           
  2104                           ;Sensores.c: 61:         luz = ADRESH;
  2105  0051  081E               	movf	30,w	;volatile
  2106  0052  00F6               	movwf	??_ISR
  2107  0053  01F7               	clrf	??_ISR+1
  2108  0054  0876               	movf	??_ISR,w
  2109  0055  00F2               	movwf	_luz
  2110  0056  0877               	movf	??_ISR+1,w
  2111  0057  00F3               	movwf	_luz+1
  2112  0058                     i1l981:	
  2113                           
  2114                           ;Sensores.c: 62:         ADCON0bits.CHS3 = 1;
  2115  0058  169F               	bsf	31,5	;volatile
  2116  0059                     i1l983:	
  2117                           
  2118                           ;Sensores.c: 63:         ADCON0bits.CHS2 = 0;
  2119  0059  121F               	bcf	31,4	;volatile
  2120  005A                     i1l985:	
  2121                           
  2122                           ;Sensores.c: 64:         ADCON0bits.CHS1 = 0;
  2123  005A  119F               	bcf	31,3	;volatile
  2124  005B                     i1l987:	
  2125                           
  2126                           ;Sensores.c: 65:         ADCON0bits.CHS0 = 1;
  2127  005B  151F               	bsf	31,2	;volatile
  2128  005C                     i1l989:	
  2129                           
  2130                           ;Sensores.c: 66:         PIR1bits.ADIF = 0;
  2131  005C  130C               	bcf	12,6	;volatile
  2132  005D                     i1l991:	
  2133                           
  2134                           ;Sensores.c: 69:     if (PIR1bits.SSPIF == 1){
  2135  005D  1D8C               	btfss	12,3	;volatile
  2136  005E  2860               	goto	u16_21
  2137  005F  2861               	goto	u16_20
  2138  0060                     u16_21:	
  2139  0060  28B9               	goto	i1l192
  2140  0061                     u16_20:	
  2141  0061                     i1l993:	
  2142                           
  2143                           ;Sensores.c: 70:         SSPCONbits.CKP = 0;
  2144  0061  1214               	bcf	20,4	;volatile
  2145                           
  2146                           ;Sensores.c: 71:         if (SSPCONbits.WCOL == 1 || SSPCONbits.SSPOV == 1){
  2147  0062  1B94               	btfsc	20,7	;volatile
  2148  0063  2865               	goto	u17_21
  2149  0064  2866               	goto	u17_20
  2150  0065                     u17_21:	
  2151  0065  286A               	goto	i1l997
  2152  0066                     u17_20:	
  2153  0066                     i1l995:	
  2154  0066  1F14               	btfss	20,6	;volatile
  2155  0067  2869               	goto	u18_21
  2156  0068  286A               	goto	u18_20
  2157  0069                     u18_21:	
  2158  0069  2871               	goto	i1l1005
  2159  006A                     u18_20:	
  2160  006A                     i1l997:	
  2161                           
  2162                           ;Sensores.c: 72:             x = SSPBUF;
  2163  006A  0813               	movf	19,w	;volatile
  2164  006B  00F6               	movwf	??_ISR
  2165  006C  0876               	movf	??_ISR,w
  2166  006D  00F5               	movwf	_x
  2167  006E                     i1l999:	
  2168                           
  2169                           ;Sensores.c: 73:             SSPCONbits.WCOL = 0;
  2170  006E  1394               	bcf	20,7	;volatile
  2171  006F                     i1l1001:	
  2172                           
  2173                           ;Sensores.c: 74:             SSPCONbits.SSPOV = 0;
  2174  006F  1314               	bcf	20,6	;volatile
  2175  0070                     i1l1003:	
  2176                           
  2177                           ;Sensores.c: 75:             SSPCONbits.CKP = 1;
  2178  0070  1614               	bsf	20,4	;volatile
  2179  0071                     i1l1005:	
  2180                           
  2181                           ;Sensores.c: 77:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW){
  2182  0071  1683               	bsf	3,5	;RP0=1, select bank1
  2183  0072  1303               	bcf	3,6	;RP1=0, select bank1
  2184  0073  1A94               	btfsc	20,5	;volatile
  2185  0074  2876               	goto	u19_21
  2186  0075  2877               	goto	u19_20
  2187  0076                     u19_21:	
  2188  0076  2896               	goto	i1l196
  2189  0077                     u19_20:	
  2190  0077                     i1l1007:	
  2191  0077  1914               	btfsc	20,2	;volatile
  2192  0078  287A               	goto	u20_21
  2193  0079  287B               	goto	u20_20
  2194  007A                     u20_21:	
  2195  007A  2896               	goto	i1l196
  2196  007B                     u20_20:	
  2197  007B                     i1l1009:	
  2198                           
  2199                           ;Sensores.c: 78:             x = SSPBUF;
  2200  007B  1283               	bcf	3,5	;RP0=0, select bank0
  2201  007C  1303               	bcf	3,6	;RP1=0, select bank0
  2202  007D  0813               	movf	19,w	;volatile
  2203  007E  00F6               	movwf	??_ISR
  2204  007F  0876               	movf	??_ISR,w
  2205  0080  00F5               	movwf	_x
  2206  0081                     i1l1011:	
  2207                           
  2208                           ;Sensores.c: 80:             PIR1bits.SSPIF = 0;
  2209  0081  118C               	bcf	12,3	;volatile
  2210  0082                     i1l1013:	
  2211                           
  2212                           ;Sensores.c: 81:             SSPCONbits.CKP = 1;
  2213  0082  1614               	bsf	20,4	;volatile
  2214  0083                     i1l197:	
  2215                           ;Sensores.c: 82:             while(!SSPSTATbits.BF);
  2216                           
  2217  0083  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0084  1303               	bcf	3,6	;RP1=0, select bank1
  2219  0085  1C14               	btfss	20,0	;volatile
  2220  0086  2888               	goto	u21_21
  2221  0087  2889               	goto	u21_20
  2222  0088                     u21_21:	
  2223  0088  2883               	goto	i1l197
  2224  0089                     u21_20:	
  2225  0089                     i1l1015:	
  2226                           
  2227                           ;Sensores.c: 83:             z = SSPBUF;
  2228  0089  1283               	bcf	3,5	;RP0=0, select bank0
  2229  008A  1303               	bcf	3,6	;RP1=0, select bank0
  2230  008B  0813               	movf	19,w	;volatile
  2231  008C  00F6               	movwf	??_ISR
  2232  008D  0876               	movf	??_ISR,w
  2233  008E  00F4               	movwf	_z
  2234                           
  2235                           ;Sensores.c: 84:             PORTA = z;
  2236  008F  0874               	movf	_z,w
  2237  0090  0085               	movwf	5	;volatile
  2238                           
  2239                           ;Sensores.c: 85:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  2240  0091  3053               	movlw	83
  2241  0092  00F6               	movwf	??_ISR
  2242  0093                     u28_27:	
  2243  0093  0BF6               	decfsz	??_ISR,f
  2244  0094  2893               	goto	u28_27
  2245                           
  2246                           ;Sensores.c: 86:         }
  2247  0095  28B6               	goto	i1l200
  2248  0096                     i1l196:	
  2249                           ;Sensores.c: 87:         else if (!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  2250                           
  2251  0096  1A94               	btfsc	20,5	;volatile
  2252  0097  2899               	goto	u22_21
  2253  0098  289A               	goto	u22_20
  2254  0099                     u22_21:	
  2255  0099  28B6               	goto	i1l200
  2256  009A                     u22_20:	
  2257  009A                     i1l1017:	
  2258  009A  1D14               	btfss	20,2	;volatile
  2259  009B  289D               	goto	u23_21
  2260  009C  289E               	goto	u23_20
  2261  009D                     u23_21:	
  2262  009D  28B6               	goto	i1l200
  2263  009E                     u23_20:	
  2264  009E                     i1l1019:	
  2265                           
  2266                           ;Sensores.c: 88:             x = SSPBUF;
  2267  009E  1283               	bcf	3,5	;RP0=0, select bank0
  2268  009F  1303               	bcf	3,6	;RP1=0, select bank0
  2269  00A0  0813               	movf	19,w	;volatile
  2270  00A1  00F6               	movwf	??_ISR
  2271  00A2  0876               	movf	??_ISR,w
  2272  00A3  00F5               	movwf	_x
  2273  00A4                     i1l1021:	
  2274                           
  2275                           ;Sensores.c: 89:             SSPSTATbits.BF = 0;
  2276  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  2277  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  2278  00A6  1014               	bcf	20,0	;volatile
  2279                           
  2280                           ;Sensores.c: 90:             SSPBUF = fuerza;
  2281  00A7  0870               	movf	_fuerza,w
  2282  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  2283  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  2284  00AA  0093               	movwf	19	;volatile
  2285  00AB                     i1l1023:	
  2286                           
  2287                           ;Sensores.c: 91:             SSPCONbits.CKP = 1;
  2288  00AB  1614               	bsf	20,4	;volatile
  2289                           
  2290                           ;Sensores.c: 92:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  2291  00AC  3053               	movlw	83
  2292  00AD  00F6               	movwf	??_ISR
  2293  00AE                     u29_27:	
  2294  00AE  0BF6               	decfsz	??_ISR,f
  2295  00AF  28AE               	goto	u29_27
  2296  00B0                     i1l202:	
  2297                           ;Sensores.c: 93:             while(SSPSTATbits.BF);
  2298                           
  2299  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  2300  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  2301  00B2  1814               	btfsc	20,0	;volatile
  2302  00B3  28B5               	goto	u24_21
  2303  00B4  28B6               	goto	u24_20
  2304  00B5                     u24_21:	
  2305  00B5  28B0               	goto	i1l202
  2306  00B6                     u24_20:	
  2307  00B6                     i1l200:	
  2308                           
  2309                           ;Sensores.c: 95:         PIR1bits.SSPIF = 0;
  2310  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  2311  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  2312  00B8  118C               	bcf	12,3	;volatile
  2313  00B9                     i1l192:	
  2314                           ;Sensores.c: 96:     }
  2315                           
  2316                           
  2317                           ;Sensores.c: 97:     (INTCONbits.GIE = 1);
  2318  00B9  178B               	bsf	11,7	;volatile
  2319  00BA                     i1l205:	
  2320  00BA  0879               	movf	??_ISR+3,w
  2321  00BB  008A               	movwf	10
  2322  00BC  0E78               	swapf	(??_ISR+2)^(0+4294967168),w
  2323  00BD  0083               	movwf	3
  2324  00BE  0EFE               	swapf	btemp,f
  2325  00BF  0E7E               	swapf	btemp,w
  2326  00C0  0009               	retfie
  2327  00C1                     __end_of_ISR:	
  2328  007E                     btemp	set	126	;btemp
  2329  007E                     wtemp0	set	126
  2330                           
  2331                           	psect	intentry
  2332  0004                     __pintentry:	
  2333                           ;incstack = 0
  2334                           ; Regs used in _ISR: [wreg]
  2335                           
  2336  0004                     interrupt_function:	
  2337  007E                     saved_w	set	btemp
  2338  0004  00FE               	movwf	btemp
  2339  0005  0E03               	swapf	3,w
  2340  0006  00F8               	movwf	??_ISR+2
  2341  0007  080A               	movf	10,w
  2342  0008  00F9               	movwf	??_ISR+3
  2343  0009  120A  118A  2819   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_adcFoscSel
    _main->_adcInterrupt
    _main->_analogInSel
    _main->_oscInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     221
                         _adcFoscSel
                       _adcInterrupt
                           _adcSetup
                        _analogInSel
                     _i2c_slave_init
                            _oscInit
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscInit                                              3     3      0      28
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _analogInSel                                          3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInterrupt                                         3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcFoscSel                                           3     3      0      28
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcFoscSel
   _adcInterrupt
   _adcSetup
   _analogInSel
   _i2c_slave_init
   _oscInit
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 16 22:50:17 2020

                       _x 0075                         _z 0074               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        l11 026B                        l30 00E8  
                      l22 00C5                        l15 01F6                        l31 00ED  
                      l32 00F2                        l24 00CA                        l17 01FD  
                      l33 00F7                        l25 00CF                        l18 0214  
                      l34 00FC                        l26 00D4                        l35 0101  
                      l27 00D9                        l44 0219                        l36 0106  
                      l28 00DE                        l37 0140                        l29 00E3  
                      l46 021C                        l47 021F                        l48 0235  
                     l100 0252                       l110 0163                       l111 016D  
                     l112 0177                       l113 0181                       l114 018B  
                     l106 0145                       l115 01B7                       l108 014F  
                     l109 0159                       l217 0262                       l809 0263  
                     l881 0261                       l873 0253                       l875 0259  
                     l877 025C                       l879 0260                       u270 01ED  
                     u271 01EC              __CFG_CPD$OFF 0000                       _ISR 0019  
            _adcInterrupt 01F2                       _luz 0072       analogInSel@analogIn 0022  
            __CFG_LVP$OFF 0000                      ?_ISR 0076                      l1301 01C3  
                    l1231 01F5                      l1311 01ED                      l1303 01DA  
                    l1305 01DB                      l1235 0204                      l1243 00C4  
                    l1307 01E6                      l1309 01E7                      l1263 0222  
                    l1247 010B                      l1271 0236                      l1249 013F  
                    l1281 024C                      l1273 0248                      l1433 019D  
                    l1259 0218                      l1435 0113                      l1283 024F  
                    l1275 0249                      l1437 020C                      l1277 024A  
                    l1285 0144                      l1439 022A                      l1279 024B  
                    l1289 0195                      l1297 01B8                      l1299 01BD  
                    u6_20 0020                      u6_21 001F                      u7_20 0024  
                    u7_21 0023                      u8_20 0028                      u8_21 0027  
                    u9_20 002C                      u9_21 002B              __CFG_WRT$OFF 0000  
                    _main 01B8                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0076                     ?_main 0076  
                   _ACKEN 048C             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l200 00B6                     i1l202 00B0                     i1l205 00BA  
                   i1l192 00B9                     i1l196 0096                     i1l197 0083  
                   i1l189 003D                     i1l951 0020                     i1l961 0037  
                   i1l953 0024                     i1l971 0041                     i1l963 0038  
                   i1l955 0028                     i1l981 0058                     i1l973 0045  
                   i1l965 0039                     i1l957 002C                     i1l949 0019  
                   i1l983 0059                     i1l975 0049                     i1l991 005D  
                   i1l967 003A                     i1l959 0030                     i1l993 0061  
                   i1l985 005A                     i1l977 004D                     i1l969 003B  
                   i1l995 0066                     i1l987 005B                     i1l979 0051  
                   i1l997 006A                     i1l989 005C                     i1l999 006E  
                   u10_20 0030                     u10_21 002F                     u11_20 0041  
                   u11_21 0040                     u20_20 007B                     u12_20 0045  
                   u20_21 007A                     u12_21 0044                     u21_20 0089  
                   u13_20 0049                     u21_21 0088                     u13_21 0048  
                   u22_20 009A                     u14_20 004D                     u22_21 0099  
                   u14_21 004C                     u23_20 009E                     u15_20 0051  
                   u23_21 009D                     u15_21 0050                     u24_20 00B6  
                   u16_20 0061                     u24_21 00B5                     u16_21 0060  
                   u17_20 0066                     u17_21 0065                     u18_20 006A  
                   u18_21 0069                     u19_20 0077                     u19_21 0076  
                   _PORTA 0005                     u28_27 0093                     u29_27 00AE  
                   _TRISA 0085            __CFG_FCMEN$OFF 0000                     _setup 0253  
         __end_of_oscInit 01B8            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E      __size_of_analogInSel 0080  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 01F2  
                  ??_main 007A            _i2c_slave_init 0236                    _ADRESH 001E  
                  ?_setup 0076          __end_of_adcSetup 026C                    i1l1001 006F  
                  i1l1011 0081                    i1l1003 0070                    i1l1021 00A4  
                  i1l1013 0082                    i1l1005 0071                    i1l1023 00AB  
                  i1l1015 0089                    i1l1007 0077                    i1l1017 009A  
                  i1l1009 007B                    i1l1019 009E                    _SSPADD 0093  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  _fuerza 0070    __end_of_i2c_slave_init 0253                 ??_oscInit 0020  
                  saved_w 007E                _adcFoscSel 0215   __end_of__initialization 0015  
          __pcstackCOMMON 0076             __end_of_setup 0263           ?_i2c_slave_init 0020  
             oscInit@freq 0022                   ??_setup 007A                __pmaintext 01B8  
              __pintentry 0004                 ?_adcSetup 0076                   _SSPCON2 0091  
                 _SSPSTAT 0094               ?_adcFoscSel 0076                ??_adcSetup 007A  
                 __ptext1 0253                   __ptext2 0141                   __ptext3 0236  
                 __ptext4 00C1                   __ptext5 0263                   __ptext6 01F2  
                 __ptext7 0215                   __ptext8 0019              __size_of_ISR 00A8  
               _T1CONbits 0010                   _oscInit 0141     i2c_slave_init@address 0020  
           ??_analogInSel 0020      end_of_initialization 0015       __size_of_adcFoscSel 0021  
               _TRISBbits 0086                 _TRISCbits 0087       __end_of_analogInSel 0141  
        ??_i2c_slave_init 007A            adcFoscSel@fosc 0022             ?_adcInterrupt 0076  
     start_initialization 000F               __end_of_ISR 00C1  __CFG_FOSC$INTRC_NOCLKOUT 0000  
          ??_adcInterrupt 0020         __size_of_adcSetup 0009               __pbssCOMMON 0070  
               ___latbits 0002             __pcstackBANK0 0020               _analogInSel 00C1  
            ??_adcFoscSel 0020        __end_of_adcFoscSel 0236                  ?_oscInit 0076  
          __size_of_setup 0010         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C            adcInterrupt@en 0022                _ADCON0bits 001F  
              _ADCON1bits 009F      __end_of_adcInterrupt 0215                  _adcSetup 0263  
              _ANSELHbits 0189          __size_of_oscInit 0077         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 003A                _INTCONbits 000B                  intlevel1 0000  
            ?_analogInSel 0076                _OSCCONbits 008F   __size_of_i2c_slave_init 001D  
             _SSPCON2bits 0091     __size_of_adcInterrupt 0023                _SSPCONbits 0014  
