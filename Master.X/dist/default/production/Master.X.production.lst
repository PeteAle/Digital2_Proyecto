

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 30 10:21:18 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  008F                     	;# 
   280  0090                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0105                     	;# 
   299  0107                     	;# 
   300  0108                     	;# 
   301  0109                     	;# 
   302  010C                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0185                     	;# 
   308  0187                     	;# 
   309  0188                     	;# 
   310  0189                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  008F                     	;# 
   358  0090                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0094                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  0105                     	;# 
   377  0107                     	;# 
   378  0108                     	;# 
   379  0109                     	;# 
   380  010C                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  0185                     	;# 
   386  0187                     	;# 
   387  0188                     	;# 
   388  0189                     	;# 
   389  018C                     	;# 
   390  018D                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  000E                     	;# 
   406  000E                     	;# 
   407  000F                     	;# 
   408  0010                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0014                     	;# 
   413  0015                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001D                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  0081                     	;# 
   427  0085                     	;# 
   428  0086                     	;# 
   429  0087                     	;# 
   430  0088                     	;# 
   431  0089                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  008E                     	;# 
   435  008F                     	;# 
   436  0090                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  0105                     	;# 
   455  0107                     	;# 
   456  0108                     	;# 
   457  0109                     	;# 
   458  010C                     	;# 
   459  010C                     	;# 
   460  010D                     	;# 
   461  010E                     	;# 
   462  010F                     	;# 
   463  0185                     	;# 
   464  0187                     	;# 
   465  0188                     	;# 
   466  0189                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000D                     	;# 
   483  000E                     	;# 
   484  000E                     	;# 
   485  000F                     	;# 
   486  0010                     	;# 
   487  0011                     	;# 
   488  0012                     	;# 
   489  0013                     	;# 
   490  0014                     	;# 
   491  0015                     	;# 
   492  0015                     	;# 
   493  0016                     	;# 
   494  0017                     	;# 
   495  0018                     	;# 
   496  0019                     	;# 
   497  001A                     	;# 
   498  001B                     	;# 
   499  001B                     	;# 
   500  001C                     	;# 
   501  001D                     	;# 
   502  001E                     	;# 
   503  001F                     	;# 
   504  0081                     	;# 
   505  0085                     	;# 
   506  0086                     	;# 
   507  0087                     	;# 
   508  0088                     	;# 
   509  0089                     	;# 
   510  008C                     	;# 
   511  008D                     	;# 
   512  008E                     	;# 
   513  008F                     	;# 
   514  0090                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0093                     	;# 
   518  0093                     	;# 
   519  0093                     	;# 
   520  0094                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009C                     	;# 
   529  009D                     	;# 
   530  009E                     	;# 
   531  009F                     	;# 
   532  0105                     	;# 
   533  0107                     	;# 
   534  0108                     	;# 
   535  0109                     	;# 
   536  010C                     	;# 
   537  010C                     	;# 
   538  010D                     	;# 
   539  010E                     	;# 
   540  010F                     	;# 
   541  0185                     	;# 
   542  0187                     	;# 
   543  0188                     	;# 
   544  0189                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  000E                     	;# 
   563  000F                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001D                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  0081                     	;# 
   583  0085                     	;# 
   584  0086                     	;# 
   585  0087                     	;# 
   586  0088                     	;# 
   587  0089                     	;# 
   588  008C                     	;# 
   589  008D                     	;# 
   590  008E                     	;# 
   591  008F                     	;# 
   592  0090                     	;# 
   593  0091                     	;# 
   594  0092                     	;# 
   595  0093                     	;# 
   596  0093                     	;# 
   597  0093                     	;# 
   598  0094                     	;# 
   599  0095                     	;# 
   600  0096                     	;# 
   601  0097                     	;# 
   602  0098                     	;# 
   603  0099                     	;# 
   604  009A                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  009F                     	;# 
   610  0105                     	;# 
   611  0107                     	;# 
   612  0108                     	;# 
   613  0109                     	;# 
   614  010C                     	;# 
   615  010C                     	;# 
   616  010D                     	;# 
   617  010E                     	;# 
   618  010F                     	;# 
   619  0185                     	;# 
   620  0187                     	;# 
   621  0188                     	;# 
   622  0189                     	;# 
   623  018C                     	;# 
   624  018D                     	;# 
   625  0000                     	;# 
   626  0001                     	;# 
   627  0002                     	;# 
   628  0003                     	;# 
   629  0004                     	;# 
   630  0005                     	;# 
   631  0006                     	;# 
   632  0007                     	;# 
   633  0008                     	;# 
   634  0009                     	;# 
   635  000A                     	;# 
   636  000B                     	;# 
   637  000C                     	;# 
   638  000D                     	;# 
   639  000E                     	;# 
   640  000E                     	;# 
   641  000F                     	;# 
   642  0010                     	;# 
   643  0011                     	;# 
   644  0012                     	;# 
   645  0013                     	;# 
   646  0014                     	;# 
   647  0015                     	;# 
   648  0015                     	;# 
   649  0016                     	;# 
   650  0017                     	;# 
   651  0018                     	;# 
   652  0019                     	;# 
   653  001A                     	;# 
   654  001B                     	;# 
   655  001B                     	;# 
   656  001C                     	;# 
   657  001D                     	;# 
   658  001E                     	;# 
   659  001F                     	;# 
   660  0081                     	;# 
   661  0085                     	;# 
   662  0086                     	;# 
   663  0087                     	;# 
   664  0088                     	;# 
   665  0089                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  008F                     	;# 
   670  0090                     	;# 
   671  0091                     	;# 
   672  0092                     	;# 
   673  0093                     	;# 
   674  0093                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0095                     	;# 
   678  0096                     	;# 
   679  0097                     	;# 
   680  0098                     	;# 
   681  0099                     	;# 
   682  009A                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  009F                     	;# 
   688  0105                     	;# 
   689  0107                     	;# 
   690  0108                     	;# 
   691  0109                     	;# 
   692  010C                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  010F                     	;# 
   697  0185                     	;# 
   698  0187                     	;# 
   699  0188                     	;# 
   700  0189                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703                           
   704                           	psect	idataCOMMON
   705  0003                     __pidataCOMMON:	
   706                           
   707                           ;initializer for _i
   708  0003  3401               	retlw	1
   709                           
   710                           	psect	strings
   711  0800                     __pstrings:	
   712  0800                     stringtab:	
   713  0800                     __stringtab:	
   714                           
   715                           ;	String table - string pointers are 1 byte each
   716  0800  1BFF               	btfsc	btemp+1,7
   717  0801  280A               	ljmp	stringcode
   718  0802  1383               	bcf	3,7
   719  0803  187F               	btfsc	btemp+1,0
   720  0804  1783               	bsf	3,7
   721  0805  0800               	movf	0,w
   722  0806  0A84               	incf	4,f
   723  0807  1903               	skipnz
   724  0808  0AFF               	incf	btemp+1,f
   725  0809  0008               	return
   726  080A                     stringcode:	
   727  080A                     stringdir:	
   728  080A  3008               	movlw	high stringdir
   729  080B  008A               	movwf	10
   730  080C  0804               	movf	4,w
   731  080D  0A84               	incf	4,f
   732  080E  0782               	addwf	2,f
   733  080F                     __stringbase:	
   734  080F  3400               	retlw	0
   735  0810                     __end_of__stringtab:	
   736  0810                     _dpowers:	
   737  0810  3401               	retlw	1
   738  0811  3400               	retlw	0
   739  0812  340A               	retlw	10
   740  0813  3400               	retlw	0
   741  0814  3464               	retlw	100
   742  0815  3400               	retlw	0
   743  0816  34E8               	retlw	232
   744  0817  3403               	retlw	3
   745  0818  3410               	retlw	16
   746  0819  3427               	retlw	39
   747  081A                     __end_of_dpowers:	
   748  000B                     _INTCONbits	set	11
   749  0013                     _SSPBUF	set	19
   750  0014                     _SSPCON	set	20
   751  000C                     _PIR1bits	set	12
   752  0009                     _PORTEbits	set	9
   753  0005                     _PORTA	set	5
   754  0010                     _T1CONbits	set	16
   755  000E                     _TMR1L	set	14
   756  000F                     _TMR1H	set	15
   757  0006                     _PORTBbits	set	6
   758  0008                     _PORTD	set	8
   759  001E                     _ADRESH	set	30
   760  001F                     _ADCON0bits	set	31
   761  009F                     _ADCON1bits	set	159
   762  0091                     _SSPCON2bits	set	145
   763  0087                     _TRISCbits	set	135
   764  0094                     _SSPSTAT	set	148
   765  0093                     _SSPADD	set	147
   766  0091                     _SSPCON2	set	145
   767  008C                     _PIE1bits	set	140
   768  008F                     _OSCCONbits	set	143
   769  0089                     _TRISE	set	137
   770  0088                     _TRISD	set	136
   771  0086                     _TRISBbits	set	134
   772  0085                     _TRISA	set	133
   773  0189                     _ANSELH	set	393
   774  0188                     _ANSEL	set	392
   775  081A                     STR_7:	
   776  081A  3447               	retlw	71	;'G'
   777  081B  3478               	retlw	120	;'x'
   778  081C  343A               	retlw	58	;':'
   779  081D  3400               	retlw	0
   780  081E                     STR_9:	
   781  081E  3441               	retlw	65	;'A'
   782  081F  3479               	retlw	121	;'y'
   783  0820  343A               	retlw	58	;':'
   784  0821  3400               	retlw	0
   785  0822                     STR_1:	
   786  0822  3425               	retlw	37	;'%'
   787  0823  3433               	retlw	51	;'3'
   788  0824  3475               	retlw	117	;'u'
   789  0825  3400               	retlw	0
   790  0826                     STR_2:	
   791  0826  3464               	retlw	100	;'d'
   792  0827  343A               	retlw	58	;':'
   793  0828  3400               	retlw	0
   794  0829                     STR_5:	
   795  0829  3466               	retlw	102	;'f'
   796  082A  343A               	retlw	58	;':'
   797  082B  3400               	retlw	0
   798  082C                     STR_3:	
   799  082C  3463               	retlw	99	;'c'
   800  082D  346D               	retlw	109	;'m'
   801  082E  3400               	retlw	0
   802  0822                     
   803                           ; #config settings
   804  0000                     
   805                           	psect	cinit
   806  000F                     start_initialization:	
   807  000F                     __initialization:	
   808                           
   809                           ; Initialize objects allocated to COMMON
   810  000F  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   811  0014  00FB               	movwf	__pdataCOMMON& (0+127)
   812                           
   813                           ; Clear objects allocated to BANK0
   814  0015  1383               	bcf	3,7	;select IRP bank0
   815  0016  3057               	movlw	low __pbssBANK0
   816  0017  0084               	movwf	4
   817  0018  306E               	movlw	low (__pbssBANK0+23)
   818  0019  120A  158A  2691  120A  118A  	fcall	clear_ram0
   819  001E                     end_of_initialization:	
   820                           ;End of C runtime variable initialization code
   821                           
   822  001E                     __end_of__initialization:	
   823  001E  0183               	clrf	3
   824  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   825                           
   826                           	psect	dataCOMMON
   827  007B                     __pdataCOMMON:	
   828  007B                     _i:	
   829  007B                     	ds	1
   830                           
   831                           	psect	bssBANK0
   832  0057                     __pbssBANK0:	
   833  0057                     _Gz:	
   834  0057                     	ds	2
   835  0059                     _Gy:	
   836  0059                     	ds	2
   837  005B                     _Gx:	
   838  005B                     	ds	2
   839  005D                     _T:	
   840  005D                     	ds	2
   841  005F                     _Az:	
   842  005F                     	ds	2
   843  0061                     _Ay:	
   844  0061                     	ds	2
   845  0063                     _Ax:	
   846  0063                     	ds	2
   847  0065                     _gyro:	
   848  0065                     	ds	2
   849  0067                     _acel:	
   850  0067                     	ds	2
   851  0069                     _distancia:	
   852  0069                     	ds	2
   853  006B                     _controlador:	
   854  006B                     	ds	1
   855  006C                     _luz:	
   856  006C                     	ds	1
   857  006D                     _fuerza:	
   858  006D                     	ds	1
   859                           
   860                           	psect	clrtext
   861  0E91                     clear_ram0:	
   862                           ;	Called with FSR containing the base address, and
   863                           ;	W with the last address+1
   864                           
   865  0E91  0064               	clrwdt	;clear the watchdog before getting into this loop
   866  0E92                     clrloop0:	
   867  0E92  0180               	clrf	0	;clear RAM location pointed to by FSR
   868  0E93  0A84               	incf	4,f	;increment pointer
   869  0E94  0604               	xorwf	4,w	;XOR with final address
   870  0E95  1903               	btfsc	3,2	;have we reached the end yet?
   871  0E96  3400               	retlw	0	;all done for this memory range, return
   872  0E97  0604               	xorwf	4,w	;XOR again to restore value
   873  0E98  2E92               	goto	clrloop0	;do the next byte
   874                           
   875                           	psect	cstackCOMMON
   876  0070                     __pcstackCOMMON:	
   877  0070                     ?_isdigit:	
   878  0070                     ?_setup:	
   879                           ; 1 bit 
   880                           
   881  0070                     ?_oscInit:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_tmr1_Init:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_tmr1_Prescaler:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_tmr1_Interrupt:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_adcSetup:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_adcFoscSel:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_analogInSel:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_adcInterrupt:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_mpu6050_init:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_lcd8_init:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_i2c_addr_start:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_i2c_masterStop:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_i2c_masterWrite:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_delay_1ms:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_lcd8_cmd:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_isr:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ??_isr:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_main:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_i2c_masterWait:	
   936                           ; 1 bytes @ 0x0
   937                           
   938                           
   939                           ; 1 bytes @ 0x0
   940  0070                     	ds	2
   941  0072                     ??_setup:	
   942  0072                     ??_oscInit:	
   943                           ; 1 bytes @ 0x2
   944                           
   945  0072                     ??_tmr1_Init:	
   946                           ; 1 bytes @ 0x2
   947                           
   948  0072                     ??_tmr1_Prescaler:	
   949                           ; 1 bytes @ 0x2
   950                           
   951  0072                     ??_tmr1_Interrupt:	
   952                           ; 1 bytes @ 0x2
   953                           
   954  0072                     ??_adcSetup:	
   955                           ; 1 bytes @ 0x2
   956                           
   957  0072                     ??_adcFoscSel:	
   958                           ; 1 bytes @ 0x2
   959                           
   960  0072                     ??_analogInSel:	
   961                           ; 1 bytes @ 0x2
   962                           
   963  0072                     ??_adcInterrupt:	
   964                           ; 1 bytes @ 0x2
   965                           
   966  0072                     ??_i2c_masterStop:	
   967                           ; 1 bytes @ 0x2
   968                           
   969  0072                     ??_i2c_masterWrite:	
   970                           ; 1 bytes @ 0x2
   971                           
   972  0072                     ??_delay_1ms:	
   973                           ; 1 bytes @ 0x2
   974                           
   975  0072                     ??_isdigit:	
   976                           ; 1 bytes @ 0x2
   977                           
   978  0072                     ??_i2c_masterWait:	
   979                           ; 1 bytes @ 0x2
   980                           
   981  0072                     ?_i2c_masterRead:	
   982                           ; 1 bytes @ 0x2
   983                           
   984  0072                     ?___wmul:	
   985                           ; 2 bytes @ 0x2
   986                           
   987  0072                     ?___lwdiv:	
   988                           ; 2 bytes @ 0x2
   989                           
   990  0072                     ?___lldiv:	
   991                           ; 2 bytes @ 0x2
   992                           
   993  0072                     tmr1_Interrupt@tmr1_Int:	
   994                           ; 4 bytes @ 0x2
   995                           
   996  0072                     i2c_masterWrite@data:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  0072                     _isdigit$1178:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  0072                     delay_1ms@i:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005  0072                     i2c_masterRead@a:	
  1006                           ; 2 bytes @ 0x2
  1007                           
  1008  0072                     ___wmul@multiplier:	
  1009                           ; 2 bytes @ 0x2
  1010                           
  1011  0072                     ___lwdiv@divisor:	
  1012                           ; 2 bytes @ 0x2
  1013                           
  1014  0072                     ___lldiv@divisor:	
  1015                           ; 2 bytes @ 0x2
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x2
  1019  0072                     	ds	1
  1020  0073                     ??_i2c_addr_start:	
  1021  0073                     i2c_addr_start@addr:	
  1022                           ; 1 bytes @ 0x3
  1023                           
  1024  0073                     isdigit@c:	
  1025                           ; 1 bytes @ 0x3
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x3
  1029  0073                     	ds	1
  1030  0074                     ??_mpu6050_init:	
  1031  0074                     ??_i2c_masterRead:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  0074                     ??_lcd8_cmd:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037  0074                     ?_lcd8_write:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040  0074                     oscInit@freq:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043  0074                     lcd8_cmd@cmd:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046  0074                     tmr1_Prescaler@prescaler:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049  0074                     adcInterrupt@en:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052  0074                     analogInSel@analogIn:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0074                     adcFoscSel@fosc:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058  0074                     lcd8_write@dat:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061  0074                     ___wmul@multiplicand:	
  1062                           ; 2 bytes @ 0x4
  1063                           
  1064  0074                     ___lwdiv@dividend:	
  1065                           ; 2 bytes @ 0x4
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0x4
  1069  0074                     	ds	1
  1070  0075                     ??_lcd8_init:	
  1071  0075                     ?_lcd8_setCursor:	
  1072                           ; 1 bytes @ 0x5
  1073                           
  1074  0075                     lcd8_setCursor@columna:	
  1075                           ; 1 bytes @ 0x5
  1076                           
  1077                           
  1078                           ; 1 bytes @ 0x5
  1079  0075                     	ds	1
  1080  0076                     ??_lcd8_setCursor:	
  1081  0076                     ?_lcd8_dispString:	
  1082                           ; 1 bytes @ 0x6
  1083                           
  1084  0076                     ??_lcd8_write:	
  1085                           ; 1 bytes @ 0x6
  1086                           
  1087  0076                     ??___wmul:	
  1088                           ; 1 bytes @ 0x6
  1089                           
  1090  0076                     ??___lwdiv:	
  1091                           ; 1 bytes @ 0x6
  1092                           
  1093  0076                     lcd8_setCursor@fila:	
  1094                           ; 1 bytes @ 0x6
  1095                           
  1096  0076                     lcd8_dispString@value:	
  1097                           ; 1 bytes @ 0x6
  1098                           
  1099  0076                     i2c_masterRead@temp:	
  1100                           ; 2 bytes @ 0x6
  1101                           
  1102  0076                     ___wmul@product:	
  1103                           ; 2 bytes @ 0x6
  1104                           
  1105  0076                     ___lldiv@dividend:	
  1106                           ; 2 bytes @ 0x6
  1107                           
  1108                           
  1109                           ; 4 bytes @ 0x6
  1110  0076                     	ds	1
  1111  0077                     ___lwdiv@quotient:	
  1112                           
  1113                           ; 2 bytes @ 0x7
  1114  0077                     	ds	1
  1115  0078                     ??_lcd8_dispString:	
  1116                           
  1117                           ; 1 bytes @ 0x8
  1118  0078                     	ds	1
  1119  0079                     ___lwdiv@counter:	
  1120                           
  1121                           ; 1 bytes @ 0x9
  1122  0079                     	ds	1
  1123  007A                     ??___lldiv:	
  1124  007A                     ??___lwmod:	
  1125                           ; 1 bytes @ 0xA
  1126                           
  1127                           
  1128                           ; 1 bytes @ 0xA
  1129  007A                     	ds	1
  1130                           
  1131                           	psect	cstackBANK0
  1132  0020                     __pcstackBANK0:	
  1133  0020                     ?___lwmod:	
  1134  0020                     ___lwmod@divisor:	
  1135                           ; 2 bytes @ 0x0
  1136                           
  1137  0020                     ___lldiv@quotient:	
  1138                           ; 2 bytes @ 0x0
  1139                           
  1140                           
  1141                           ; 4 bytes @ 0x0
  1142  0020                     	ds	2
  1143  0022                     ___lwmod@dividend:	
  1144                           
  1145                           ; 2 bytes @ 0x2
  1146  0022                     	ds	2
  1147  0024                     ___lldiv@counter:	
  1148  0024                     ___lwmod@counter:	
  1149                           ; 1 bytes @ 0x4
  1150                           
  1151                           
  1152                           ; 1 bytes @ 0x4
  1153  0024                     	ds	1
  1154  0025                     ?_i2c_master_init:	
  1155  0025                     ?_sprintf:	
  1156                           ; 1 bytes @ 0x5
  1157                           
  1158  0025                     sprintf@f:	
  1159                           ; 2 bytes @ 0x5
  1160                           
  1161  0025                     i2c_master_init@c:	
  1162                           ; 1 bytes @ 0x5
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x5
  1166  0025                     	ds	3
  1167  0028                     ??_sprintf:	
  1168                           
  1169                           ; 1 bytes @ 0x8
  1170  0028                     	ds	1
  1171  0029                     ??_i2c_master_init:	
  1172                           
  1173                           ; 1 bytes @ 0x9
  1174  0029                     	ds	2
  1175  002B                     sprintf@flag:	
  1176                           
  1177                           ; 1 bytes @ 0xB
  1178  002B                     	ds	1
  1179  002C                     sprintf@ap:	
  1180                           
  1181                           ; 1 bytes @ 0xC
  1182  002C                     	ds	1
  1183  002D                     sprintf@val:	
  1184                           
  1185                           ; 2 bytes @ 0xD
  1186  002D                     	ds	2
  1187  002F                     sprintf@prec:	
  1188                           
  1189                           ; 1 bytes @ 0xF
  1190  002F                     	ds	1
  1191  0030                     sprintf@width:	
  1192                           
  1193                           ; 2 bytes @ 0x10
  1194  0030                     	ds	2
  1195  0032                     sprintf@sp:	
  1196                           
  1197                           ; 1 bytes @ 0x12
  1198  0032                     	ds	1
  1199  0033                     sprintf@c:	
  1200                           
  1201                           ; 1 bytes @ 0x13
  1202  0033                     	ds	1
  1203  0034                     ??_main:	
  1204                           
  1205                           ; 1 bytes @ 0x14
  1206  0034                     	ds	3
  1207  0037                     main@G:	
  1208                           
  1209                           ; 10 bytes @ 0x17
  1210  0037                     	ds	10
  1211  0041                     main@A:	
  1212                           
  1213                           ; 10 bytes @ 0x21
  1214  0041                     	ds	10
  1215  004B                     main@D:	
  1216                           
  1217                           ; 5 bytes @ 0x2B
  1218  004B                     	ds	5
  1219  0050                     main@F:	
  1220                           
  1221                           ; 5 bytes @ 0x30
  1222  0050                     	ds	5
  1223  0055                     main@Ayh:	
  1224                           
  1225                           ; 1 bytes @ 0x35
  1226  0055                     	ds	1
  1227  0056                     main@Gxh:	
  1228                           
  1229                           ; 1 bytes @ 0x36
  1230  0056                     	ds	1
  1231                           
  1232                           	psect	maintext
  1233  0022                     __pmaintext:	
  1234 ;;
  1235 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1236 ;;
  1237 ;; *************** function _main *****************
  1238 ;; Defined at:
  1239 ;;		line 57 in file "master.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  A              10   33[BANK0 ] unsigned char [10]
  1244 ;;  G              10   23[BANK0 ] unsigned char [10]
  1245 ;;  F               5   48[BANK0 ] unsigned char [5]
  1246 ;;  D               5   43[BANK0 ] unsigned char [5]
  1247 ;;  Gxh             1   54[BANK0 ] unsigned char 
  1248 ;;  Ayh             1   53[BANK0 ] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : B00/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       0       0       0       0
  1259 ;;      Locals:         0      32       0       0       0
  1260 ;;      Temps:          0       3       0       0       0
  1261 ;;      Totals:         0      35       0       0       0
  1262 ;;Total ram usage:       35 bytes
  1263 ;; Hardware stack levels required when called:    5
  1264 ;; This function calls:
  1265 ;;		___lwdiv
  1266 ;;		_adcFoscSel
  1267 ;;		_adcInterrupt
  1268 ;;		_adcSetup
  1269 ;;		_analogInSel
  1270 ;;		_delay_1ms
  1271 ;;		_i2c_addr_start
  1272 ;;		_i2c_masterRead
  1273 ;;		_i2c_masterStop
  1274 ;;		_i2c_masterWrite
  1275 ;;		_i2c_master_init
  1276 ;;		_lcd8_dispString
  1277 ;;		_lcd8_init
  1278 ;;		_lcd8_setCursor
  1279 ;;		_mpu6050_init
  1280 ;;		_oscInit
  1281 ;;		_setup
  1282 ;;		_sprintf
  1283 ;;		_tmr1_Init
  1284 ;;		_tmr1_Interrupt
  1285 ;;		_tmr1_Prescaler
  1286 ;; This function is called by:
  1287 ;;		Startup code after reset
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function _main
  1293  0022                     _main:	
  1294  0022                     l2444:	
  1295                           ;incstack = 0
  1296                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1297                           
  1298                           
  1299                           ;master.c: 58:     setup();
  1300  0022  120A  158A  2712  120A  118A  	fcall	_setup
  1301  0027                     l2446:	
  1302                           
  1303                           ;master.c: 59:     oscInit(1);
  1304  0027  3001               	movlw	1
  1305  0028  120A  118A  25C3  120A  118A  	fcall	_oscInit
  1306  002D                     l2448:	
  1307                           
  1308                           ;master.c: 60:     tmr1_Init();
  1309  002D  120A  158A  2684  120A  118A  	fcall	_tmr1_Init
  1310                           
  1311                           ;master.c: 61:     tmr1_Prescaler(1);
  1312  0032  3001               	movlw	1
  1313  0033  120A  158A  27D3  120A  118A  	fcall	_tmr1_Prescaler
  1314  0038                     l2450:	
  1315                           
  1316                           ;master.c: 62:     tmr1_Interrupt(0);
  1317  0038  3000               	movlw	0
  1318  0039  120A  158A  26B6  120A  118A  	fcall	_tmr1_Interrupt
  1319  003E                     l2452:	
  1320                           
  1321                           ;master.c: 63:     adcSetup();
  1322  003E  120A  158A  2699  120A  118A  	fcall	_adcSetup
  1323  0043                     l2454:	
  1324                           
  1325                           ;master.c: 64:     adcFoscSel(1);
  1326  0043  3001               	movlw	1
  1327  0044  120A  158A  275D  120A  118A  	fcall	_adcFoscSel
  1328  0049                     l2456:	
  1329                           
  1330                           ;master.c: 65:     analogInSel(9);
  1331  0049  3009               	movlw	9
  1332  004A  120A  118A  2496  120A  118A  	fcall	_analogInSel
  1333  004F                     l2458:	
  1334                           
  1335                           ;master.c: 66:     adcInterrupt(0);
  1336  004F  3000               	movlw	0
  1337  0050  120A  158A  273C  120A  118A  	fcall	_adcInterrupt
  1338  0055                     l2460:	
  1339                           
  1340                           ;master.c: 67:     i2c_master_init(100000);
  1341  0055  3000               	movlw	0
  1342  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0058  00A8               	movwf	i2c_master_init@c+3
  1345  0059  3001               	movlw	1
  1346  005A  00A7               	movwf	i2c_master_init@c+2
  1347  005B  3086               	movlw	134
  1348  005C  00A6               	movwf	i2c_master_init@c+1
  1349  005D  30A0               	movlw	160
  1350  005E  00A5               	movwf	i2c_master_init@c
  1351  005F  120A  118A  2776  120A  118A  	fcall	_i2c_master_init
  1352  0064                     l2462:	
  1353                           
  1354                           ;master.c: 68:     mpu6050_init();
  1355  0064  120A  118A  252F  120A  118A  	fcall	_mpu6050_init
  1356  0069                     l2464:	
  1357                           
  1358                           ;master.c: 69:     lcd8_init();
  1359  0069  120A  118A  26A0  120A  118A  	fcall	_lcd8_init
  1360  006E                     l2466:	
  1361                           
  1362                           ;master.c: 72:         if (ADCON0bits.GO_DONE == 0){
  1363  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1364  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1365  0070  189F               	btfsc	31,1	;volatile
  1366  0071  2873               	goto	u1271
  1367  0072  2874               	goto	u1270
  1368  0073                     u1271:	
  1369  0073  2875               	goto	l2470
  1370  0074                     u1270:	
  1371  0074                     l2468:	
  1372                           
  1373                           ;master.c: 73:             ADCON0bits.GO_DONE = 1;
  1374  0074  149F               	bsf	31,1	;volatile
  1375  0075                     l2470:	
  1376                           
  1377                           ;master.c: 75:         luz = ADRESH;
  1378  0075  081E               	movf	30,w	;volatile
  1379  0076  00B4               	movwf	??_main
  1380  0077  0834               	movf	??_main,w
  1381  0078  00EC               	movwf	_luz
  1382  0079                     l2472:	
  1383                           
  1384                           ;master.c: 77:         i2c_addr_start(0x11);
  1385  0079  3011               	movlw	17
  1386  007A  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  1387  007F                     l2474:	
  1388                           
  1389                           ;master.c: 78:         fuerza = i2c_masterRead(0);
  1390  007F  3000               	movlw	0
  1391  0080  00F2               	movwf	i2c_masterRead@a
  1392  0081  00F3               	movwf	i2c_masterRead@a+1
  1393  0082  120A  118A  27AE  120A  118A  	fcall	_i2c_masterRead
  1394  0087  0872               	movf	?_i2c_masterRead,w
  1395  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1397  008A  00B4               	movwf	??_main
  1398  008B  0834               	movf	??_main,w
  1399  008C  00ED               	movwf	_fuerza
  1400  008D                     l2476:	
  1401                           
  1402                           ;master.c: 79:         i2c_masterStop();
  1403  008D  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  1404  0092                     l2478:	
  1405                           
  1406                           ;master.c: 80:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1407  0092  300D               	movlw	13
  1408  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0095  00B5               	movwf	??_main+1
  1411  0096  30FB               	movlw	251
  1412  0097  00B4               	movwf	??_main
  1413  0098                     u1377:	
  1414  0098  0BB4               	decfsz	??_main,f
  1415  0099  2898               	goto	u1377
  1416  009A  0BB5               	decfsz	??_main+1,f
  1417  009B  2898               	goto	u1377
  1418                           
  1419                           ;master.c: 82:         i2c_addr_start(0x41);
  1420  009C  3041               	movlw	65
  1421  009D  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  1422                           
  1423                           ;master.c: 83:         controlador = i2c_masterRead(0);
  1424  00A2  3000               	movlw	0
  1425  00A3  00F2               	movwf	i2c_masterRead@a
  1426  00A4  00F3               	movwf	i2c_masterRead@a+1
  1427  00A5  120A  118A  27AE  120A  118A  	fcall	_i2c_masterRead
  1428  00AA  0872               	movf	?_i2c_masterRead,w
  1429  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1430  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1431  00AD  00B4               	movwf	??_main
  1432  00AE  0834               	movf	??_main,w
  1433  00AF  00EB               	movwf	_controlador
  1434                           
  1435                           ;master.c: 84:         i2c_masterStop();
  1436  00B0  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  1437  00B5                     l2480:	
  1438                           
  1439                           ;master.c: 85:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1440  00B5  300D               	movlw	13
  1441  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1442  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1443  00B8  00B5               	movwf	??_main+1
  1444  00B9  30FB               	movlw	251
  1445  00BA  00B4               	movwf	??_main
  1446  00BB                     u1387:	
  1447  00BB  0BB4               	decfsz	??_main,f
  1448  00BC  28BB               	goto	u1387
  1449  00BD  0BB5               	decfsz	??_main+1,f
  1450  00BE  28BB               	goto	u1387
  1451  00BF                     l2482:	
  1452                           
  1453                           ;master.c: 87:         PORTD = controlador;
  1454  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1455  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1456  00C1  086B               	movf	_controlador,w
  1457  00C2  0088               	movwf	8	;volatile
  1458  00C3                     l2484:	
  1459                           
  1460                           ;master.c: 89:         if (luz < 5){
  1461  00C3  3005               	movlw	5
  1462  00C4  026C               	subwf	_luz,w
  1463  00C5  1803               	skipnc
  1464  00C6  28C8               	goto	u1281
  1465  00C7  28C9               	goto	u1280
  1466  00C8                     u1281:	
  1467  00C8  28CB               	goto	l2488
  1468  00C9                     u1280:	
  1469  00C9                     l2486:	
  1470                           
  1471                           ;master.c: 90:             PORTBbits.RB4 = 1;
  1472  00C9  1606               	bsf	6,4	;volatile
  1473                           
  1474                           ;master.c: 91:         }
  1475  00CA  28D2               	goto	l2492
  1476  00CB                     l2488:	
  1477  00CB  3007               	movlw	7
  1478  00CC  026C               	subwf	_luz,w
  1479  00CD  1C03               	skipc
  1480  00CE  28D0               	goto	u1291
  1481  00CF  28D1               	goto	u1290
  1482  00D0                     u1291:	
  1483  00D0  28D2               	goto	l2492
  1484  00D1                     u1290:	
  1485  00D1                     l2490:	
  1486                           
  1487                           ;master.c: 93:             PORTBbits.RB4 = 0;
  1488  00D1  1206               	bcf	6,4	;volatile
  1489  00D2                     l2492:	
  1490                           
  1491                           ;master.c: 96:         i2c_addr_start(0xD0);
  1492  00D2  30D0               	movlw	208
  1493  00D3  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  1494                           
  1495                           ;master.c: 97:         i2c_masterWrite(0x3D);
  1496  00D8  303D               	movlw	61
  1497  00D9  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  1498                           
  1499                           ;master.c: 98:         i2c_masterStop();
  1500  00DE  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  1501                           
  1502                           ;master.c: 99:         i2c_addr_start(0xD1);
  1503  00E3  30D1               	movlw	209
  1504  00E4  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  1505                           
  1506                           ;master.c: 100:         unsigned char Ayh = i2c_masterRead(0);
  1507  00E9  3000               	movlw	0
  1508  00EA  00F2               	movwf	i2c_masterRead@a
  1509  00EB  00F3               	movwf	i2c_masterRead@a+1
  1510  00EC  120A  118A  27AE  120A  118A  	fcall	_i2c_masterRead
  1511  00F1  0872               	movf	?_i2c_masterRead,w
  1512  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1513  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1514  00F4  00B4               	movwf	??_main
  1515  00F5  0834               	movf	??_main,w
  1516  00F6  00D5               	movwf	main@Ayh
  1517                           
  1518                           ;master.c: 101:         i2c_masterStop();
  1519  00F7  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  1520                           
  1521                           ;master.c: 102:         i2c_addr_start(0xD0);
  1522  00FC  30D0               	movlw	208
  1523  00FD  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  1524                           
  1525                           ;master.c: 103:         i2c_masterWrite(0x43);
  1526  0102  3043               	movlw	67
  1527  0103  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  1528                           
  1529                           ;master.c: 104:         i2c_masterStop();
  1530  0108  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  1531                           
  1532                           ;master.c: 105:         i2c_addr_start(0xD1);
  1533  010D  30D1               	movlw	209
  1534  010E  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  1535                           
  1536                           ;master.c: 106:         unsigned char Gxh = i2c_masterRead(0);
  1537  0113  3000               	movlw	0
  1538  0114  00F2               	movwf	i2c_masterRead@a
  1539  0115  00F3               	movwf	i2c_masterRead@a+1
  1540  0116  120A  118A  27AE  120A  118A  	fcall	_i2c_masterRead
  1541  011B  0872               	movf	?_i2c_masterRead,w
  1542  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1543  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1544  011E  00B4               	movwf	??_main
  1545  011F  0834               	movf	??_main,w
  1546  0120  00D6               	movwf	main@Gxh
  1547                           
  1548                           ;master.c: 107:         i2c_masterStop();
  1549  0121  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  1550  0126                     l2494:	
  1551                           
  1552                           ;master.c: 109:         TMR1H = 0;
  1553  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0128  018F               	clrf	15	;volatile
  1556  0129                     l2496:	
  1557                           
  1558                           ;master.c: 110:         TMR1L = 0;
  1559  0129  018E               	clrf	14	;volatile
  1560  012A                     l2498:	
  1561                           
  1562                           ;master.c: 111:         PORTBbits.RB0 = 1;
  1563  012A  1406               	bsf	6,0	;volatile
  1564  012B                     l2500:	
  1565                           
  1566                           ;master.c: 112:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1567  012B  3002               	movlw	2
  1568  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1569  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1570  012E  00B4               	movwf	??_main
  1571  012F                     u1397:	
  1572  012F  0BB4               	decfsz	??_main,f
  1573  0130  292F               	goto	u1397
  1574  0131  0000               	nop
  1575  0132                     l2502:	
  1576                           
  1577                           ;master.c: 113:         PORTBbits.RB0 = 0;
  1578  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0134  1006               	bcf	6,0	;volatile
  1581  0135                     l111:	
  1582                           ;master.c: 114:         while(!PORTBbits.RB1);
  1583                           
  1584  0135  1C86               	btfss	6,1	;volatile
  1585  0136  2938               	goto	u1301
  1586  0137  2939               	goto	u1300
  1587  0138                     u1301:	
  1588  0138  2935               	goto	l111
  1589  0139                     u1300:	
  1590  0139                     l113:	
  1591                           
  1592                           ;master.c: 115:         T1CONbits.TMR1ON = 1;
  1593  0139  1410               	bsf	16,0	;volatile
  1594  013A                     l114:	
  1595                           ;master.c: 116:         while(PORTBbits.RB1);
  1596                           
  1597  013A  1886               	btfsc	6,1	;volatile
  1598  013B  293D               	goto	u1311
  1599  013C  293E               	goto	u1310
  1600  013D                     u1311:	
  1601  013D  293A               	goto	l114
  1602  013E                     u1310:	
  1603  013E                     l116:	
  1604                           
  1605                           ;master.c: 117:         T1CONbits.TMR1ON = 0;
  1606  013E  1010               	bcf	16,0	;volatile
  1607  013F                     l2504:	
  1608                           
  1609                           ;master.c: 119:         distancia = (TMR1L | (TMR1H<<8));
  1610  013F  080F               	movf	15,w	;volatile
  1611  0140  00EA               	movwf	_distancia+1
  1612  0141  080E               	movf	14,w	;volatile
  1613  0142  00E9               	movwf	_distancia
  1614  0143                     l2506:	
  1615                           
  1616                           ;master.c: 120:         distancia = distancia/29;
  1617  0143  301D               	movlw	29
  1618  0144  00F2               	movwf	___lwdiv@divisor
  1619  0145  3000               	movlw	0
  1620  0146  00F3               	movwf	___lwdiv@divisor+1
  1621  0147  086A               	movf	_distancia+1,w
  1622  0148  00F5               	movwf	___lwdiv@dividend+1
  1623  0149  0869               	movf	_distancia,w
  1624  014A  00F4               	movwf	___lwdiv@dividend
  1625  014B  120A  118A  26F6  120A  118A  	fcall	___lwdiv
  1626  0150  0873               	movf	?___lwdiv+1,w
  1627  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0153  00EA               	movwf	_distancia+1
  1630  0154  0872               	movf	?___lwdiv,w
  1631  0155  00E9               	movwf	_distancia
  1632  0156                     l2508:	
  1633                           
  1634                           ;master.c: 121:         distancia = distancia + 1;
  1635  0156  0869               	movf	_distancia,w
  1636  0157  3E01               	addlw	1
  1637  0158  00E9               	movwf	_distancia
  1638  0159  086A               	movf	_distancia+1,w
  1639  015A  1803               	skipnc
  1640  015B  3E01               	addlw	1
  1641  015C  3E00               	addlw	0
  1642  015D  00EA               	movwf	_distancia+1
  1643  015E                     l2510:	
  1644                           
  1645                           ;master.c: 123:         if (distancia <= 8 && distancia >= 7){
  1646  015E  3000               	movlw	0
  1647  015F  026A               	subwf	_distancia+1,w
  1648  0160  3009               	movlw	9
  1649  0161  1903               	skipnz
  1650  0162  0269               	subwf	_distancia,w
  1651  0163  1803               	skipnc
  1652  0164  2966               	goto	u1321
  1653  0165  2967               	goto	u1320
  1654  0166                     u1321:	
  1655  0166  2992               	goto	l117
  1656  0167                     u1320:	
  1657  0167                     l2512:	
  1658  0167  3000               	movlw	0
  1659  0168  026A               	subwf	_distancia+1,w
  1660  0169  3007               	movlw	7
  1661  016A  1903               	skipnz
  1662  016B  0269               	subwf	_distancia,w
  1663  016C  1C03               	skipc
  1664  016D  296F               	goto	u1331
  1665  016E  2970               	goto	u1330
  1666  016F                     u1331:	
  1667  016F  2992               	goto	l117
  1668  0170                     u1330:	
  1669  0170                     l2514:	
  1670                           
  1671                           ;master.c: 124:             PORTBbits.RB2 = 1;
  1672  0170  1506               	bsf	6,2	;volatile
  1673  0171                     l2516:	
  1674                           
  1675                           ;master.c: 125:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1676  0171  3002               	movlw	2
  1677  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0174  00B6               	movwf	??_main+2
  1680  0175  3086               	movlw	134
  1681  0176  00B5               	movwf	??_main+1
  1682  0177  3098               	movlw	152
  1683  0178  00B4               	movwf	??_main
  1684  0179                     u1407:	
  1685  0179  0BB4               	decfsz	??_main,f
  1686  017A  2979               	goto	u1407
  1687  017B  0BB5               	decfsz	??_main+1,f
  1688  017C  2979               	goto	u1407
  1689  017D  0BB6               	decfsz	??_main+2,f
  1690  017E  2979               	goto	u1407
  1691  017F  0000               	nop
  1692  0180                     l2518:	
  1693                           
  1694                           ;master.c: 126:             PORTBbits.RB2 = 0;
  1695  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0182  1106               	bcf	6,2	;volatile
  1698                           
  1699                           ;master.c: 127:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1700  0183  3002               	movlw	2
  1701  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0186  00B6               	movwf	??_main+2
  1704  0187  3086               	movlw	134
  1705  0188  00B5               	movwf	??_main+1
  1706  0189  3098               	movlw	152
  1707  018A  00B4               	movwf	??_main
  1708  018B                     u1417:	
  1709  018B  0BB4               	decfsz	??_main,f
  1710  018C  298B               	goto	u1417
  1711  018D  0BB5               	decfsz	??_main+1,f
  1712  018E  298B               	goto	u1417
  1713  018F  0BB6               	decfsz	??_main+2,f
  1714  0190  298B               	goto	u1417
  1715  0191  0000               	nop
  1716  0192                     l117:	
  1717                           ;master.c: 128:         }
  1718                           
  1719                           
  1720                           ;master.c: 129:         if (distancia <= 6 && distancia >= 5){
  1721  0192  3000               	movlw	0
  1722  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1724  0195  026A               	subwf	_distancia+1,w
  1725  0196  3007               	movlw	7
  1726  0197  1903               	skipnz
  1727  0198  0269               	subwf	_distancia,w
  1728  0199  1803               	skipnc
  1729  019A  299C               	goto	u1341
  1730  019B  299D               	goto	u1340
  1731  019C                     u1341:	
  1732  019C  29C3               	goto	l118
  1733  019D                     u1340:	
  1734  019D                     l2520:	
  1735  019D  3000               	movlw	0
  1736  019E  026A               	subwf	_distancia+1,w
  1737  019F  3005               	movlw	5
  1738  01A0  1903               	skipnz
  1739  01A1  0269               	subwf	_distancia,w
  1740  01A2  1C03               	skipc
  1741  01A3  29A5               	goto	u1351
  1742  01A4  29A6               	goto	u1350
  1743  01A5                     u1351:	
  1744  01A5  29C3               	goto	l118
  1745  01A6                     u1350:	
  1746  01A6                     l2522:	
  1747                           
  1748                           ;master.c: 130:             PORTBbits.RB2 = 1;
  1749  01A6  1506               	bsf	6,2	;volatile
  1750  01A7                     l2524:	
  1751                           
  1752                           ;master.c: 131:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1753  01A7  3002               	movlw	2
  1754  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1755  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1756  01AA  00B6               	movwf	??_main+2
  1757  01AB  3086               	movlw	134
  1758  01AC  00B5               	movwf	??_main+1
  1759  01AD  3098               	movlw	152
  1760  01AE  00B4               	movwf	??_main
  1761  01AF                     u1427:	
  1762  01AF  0BB4               	decfsz	??_main,f
  1763  01B0  29AF               	goto	u1427
  1764  01B1  0BB5               	decfsz	??_main+1,f
  1765  01B2  29AF               	goto	u1427
  1766  01B3  0BB6               	decfsz	??_main+2,f
  1767  01B4  29AF               	goto	u1427
  1768  01B5  0000               	nop
  1769  01B6                     l2526:	
  1770                           
  1771                           ;master.c: 132:             PORTBbits.RB2 = 0;
  1772  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1773  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1774  01B8  1106               	bcf	6,2	;volatile
  1775                           
  1776                           ;master.c: 133:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1777  01B9  3082               	movlw	130
  1778  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1779  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1780  01BC  00B5               	movwf	??_main+1
  1781  01BD  30DD               	movlw	221
  1782  01BE  00B4               	movwf	??_main
  1783  01BF                     u1437:	
  1784  01BF  0BB4               	decfsz	??_main,f
  1785  01C0  29BF               	goto	u1437
  1786  01C1  0BB5               	decfsz	??_main+1,f
  1787  01C2  29BF               	goto	u1437
  1788  01C3                     l118:	
  1789                           ;master.c: 134:         }
  1790                           
  1791                           
  1792                           ;master.c: 135:         if (distancia < 5){
  1793  01C3  3000               	movlw	0
  1794  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1795  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1796  01C6  026A               	subwf	_distancia+1,w
  1797  01C7  3005               	movlw	5
  1798  01C8  1903               	skipnz
  1799  01C9  0269               	subwf	_distancia,w
  1800  01CA  1803               	skipnc
  1801  01CB  29CD               	goto	u1361
  1802  01CC  29CE               	goto	u1360
  1803  01CD                     u1361:	
  1804  01CD  29CF               	goto	l2530
  1805  01CE                     u1360:	
  1806  01CE                     l2528:	
  1807                           
  1808                           ;master.c: 136:             PORTBbits.RB2 = 1;
  1809  01CE  1506               	bsf	6,2	;volatile
  1810  01CF                     l2530:	
  1811                           
  1812                           ;master.c: 139:         char D[5];;master.c: 140:         sprintf(D ,"%3u", distancia);
  1813  01CF  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1814  01D0  00B4               	movwf	??_main
  1815  01D1  0834               	movf	??_main,w
  1816  01D2  00A5               	movwf	sprintf@f
  1817  01D3  086A               	movf	_distancia+1,w
  1818  01D4  00A7               	movwf	?_sprintf+2
  1819  01D5  0869               	movf	_distancia,w
  1820  01D6  00A6               	movwf	?_sprintf+1
  1821  01D7  304B               	movlw	(low (main@D| 0))& (0+255)
  1822  01D8  120A  118A  233B  120A  118A  	fcall	_sprintf
  1823  01DD                     l2532:	
  1824                           
  1825                           ;master.c: 141:         lcd8_setCursor(1,0);
  1826  01DD  01F5               	clrf	lcd8_setCursor@columna
  1827  01DE  3001               	movlw	1
  1828  01DF  120A  118A  27E4  120A  118A  	fcall	_lcd8_setCursor
  1829  01E4                     l2534:	
  1830                           
  1831                           ;master.c: 142:         delay_1ms();
  1832  01E4  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1833                           
  1834                           ;master.c: 143:         lcd8_dispString("d:");
  1835  01E9  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1836  01EA  00F6               	movwf	lcd8_dispString@value
  1837  01EB  3080               	movlw	128
  1838  01EC  00F7               	movwf	lcd8_dispString@value+1
  1839  01ED  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1840  01F2                     l2536:	
  1841                           
  1842                           ;master.c: 144:         delay_1ms();
  1843  01F2  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1844  01F7                     l2538:	
  1845                           
  1846                           ;master.c: 145:         lcd8_setCursor(1,2);
  1847  01F7  3002               	movlw	2
  1848  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1849  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1850  01FA  00B4               	movwf	??_main
  1851  01FB  0834               	movf	??_main,w
  1852  01FC  00F5               	movwf	lcd8_setCursor@columna
  1853  01FD  3001               	movlw	1
  1854  01FE  120A  118A  27E4  120A  118A  	fcall	_lcd8_setCursor
  1855  0203                     l2540:	
  1856                           
  1857                           ;master.c: 146:         delay_1ms();
  1858  0203  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1859  0208                     l2542:	
  1860                           
  1861                           ;master.c: 147:         lcd8_dispString(D);
  1862  0208  304B               	movlw	(low (main@D| 0))& (0+255)
  1863  0209  00F6               	movwf	lcd8_dispString@value
  1864  020A  3000               	movlw	0
  1865  020B  00F7               	movwf	lcd8_dispString@value+1
  1866  020C  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1867                           
  1868                           ;master.c: 148:         delay_1ms();
  1869  0211  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1870                           
  1871                           ;master.c: 149:         lcd8_setCursor(1,5);
  1872  0216  3005               	movlw	5
  1873  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0219  00B4               	movwf	??_main
  1876  021A  0834               	movf	??_main,w
  1877  021B  00F5               	movwf	lcd8_setCursor@columna
  1878  021C  3001               	movlw	1
  1879  021D  120A  118A  27E4  120A  118A  	fcall	_lcd8_setCursor
  1880                           
  1881                           ;master.c: 150:         delay_1ms();
  1882  0222  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1883  0227                     l2544:	
  1884                           
  1885                           ;master.c: 151:         lcd8_dispString("cm");
  1886  0227  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1887  0228  00F6               	movwf	lcd8_dispString@value
  1888  0229  3080               	movlw	128
  1889  022A  00F7               	movwf	lcd8_dispString@value+1
  1890  022B  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1891  0230                     l2546:	
  1892                           
  1893                           ;master.c: 152:         delay_1ms();
  1894  0230  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1895                           
  1896                           ;master.c: 154:         char F[5];;master.c: 155:         sprintf(F, "%3u", fuerza);
  1897  0235  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1898  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0238  00B4               	movwf	??_main
  1901  0239  0834               	movf	??_main,w
  1902  023A  00A5               	movwf	sprintf@f
  1903  023B  086D               	movf	_fuerza,w
  1904  023C  00B5               	movwf	??_main+1
  1905  023D  01B6               	clrf	??_main+2
  1906  023E  0835               	movf	??_main+1,w
  1907  023F  00A6               	movwf	?_sprintf+1
  1908  0240  0836               	movf	??_main+2,w
  1909  0241  00A7               	movwf	?_sprintf+2
  1910  0242  3050               	movlw	(low (main@F| 0))& (0+255)
  1911  0243  120A  118A  233B  120A  118A  	fcall	_sprintf
  1912  0248                     l2548:	
  1913                           
  1914                           ;master.c: 156:         lcd8_setCursor(1,8);
  1915  0248  3008               	movlw	8
  1916  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1917  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1918  024B  00B4               	movwf	??_main
  1919  024C  0834               	movf	??_main,w
  1920  024D  00F5               	movwf	lcd8_setCursor@columna
  1921  024E  3001               	movlw	1
  1922  024F  120A  118A  27E4  120A  118A  	fcall	_lcd8_setCursor
  1923  0254                     l2550:	
  1924                           
  1925                           ;master.c: 157:         delay_1ms();
  1926  0254  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1927                           
  1928                           ;master.c: 158:         lcd8_dispString("f:");
  1929  0259  301A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1930  025A  00F6               	movwf	lcd8_dispString@value
  1931  025B  3080               	movlw	128
  1932  025C  00F7               	movwf	lcd8_dispString@value+1
  1933  025D  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1934  0262                     l2552:	
  1935                           
  1936                           ;master.c: 159:         delay_1ms();
  1937  0262  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1938  0267                     l2554:	
  1939                           
  1940                           ;master.c: 160:         lcd8_setCursor(1,10);
  1941  0267  300A               	movlw	10
  1942  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0269  1303               	bcf	3,6	;RP1=0, select bank0
  1944  026A  00B4               	movwf	??_main
  1945  026B  0834               	movf	??_main,w
  1946  026C  00F5               	movwf	lcd8_setCursor@columna
  1947  026D  3001               	movlw	1
  1948  026E  120A  118A  27E4  120A  118A  	fcall	_lcd8_setCursor
  1949  0273                     l2556:	
  1950                           
  1951                           ;master.c: 161:         delay_1ms();
  1952  0273  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1953  0278                     l2558:	
  1954                           
  1955                           ;master.c: 162:         lcd8_dispString(F);
  1956  0278  3050               	movlw	(low (main@F| 0))& (0+255)
  1957  0279  00F6               	movwf	lcd8_dispString@value
  1958  027A  3000               	movlw	0
  1959  027B  00F7               	movwf	lcd8_dispString@value+1
  1960  027C  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1961                           
  1962                           ;master.c: 163:         delay_1ms();
  1963  0281  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1964  0286                     l2560:	
  1965                           
  1966                           ;master.c: 165:         char G[10];;master.c: 166:         sprintf(G, "%3u", Gxh);
  1967  0286  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1968  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0289  00B4               	movwf	??_main
  1971  028A  0834               	movf	??_main,w
  1972  028B  00A5               	movwf	sprintf@f
  1973  028C  0856               	movf	main@Gxh,w
  1974  028D  00B5               	movwf	??_main+1
  1975  028E  01B6               	clrf	??_main+2
  1976  028F  0835               	movf	??_main+1,w
  1977  0290  00A6               	movwf	?_sprintf+1
  1978  0291  0836               	movf	??_main+2,w
  1979  0292  00A7               	movwf	?_sprintf+2
  1980  0293  3037               	movlw	(low (main@G| 0))& (0+255)
  1981  0294  120A  118A  233B  120A  118A  	fcall	_sprintf
  1982  0299                     l2562:	
  1983                           
  1984                           ;master.c: 167:         lcd8_setCursor(2,0);
  1985  0299  01F5               	clrf	lcd8_setCursor@columna
  1986  029A  3002               	movlw	2
  1987  029B  120A  118A  27E4  120A  118A  	fcall	_lcd8_setCursor
  1988  02A0                     l2564:	
  1989                           
  1990                           ;master.c: 168:         delay_1ms();
  1991  02A0  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  1992  02A5                     l2566:	
  1993                           
  1994                           ;master.c: 169:         lcd8_dispString("Gx:");
  1995  02A5  300B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1996  02A6  00F6               	movwf	lcd8_dispString@value
  1997  02A7  3080               	movlw	128
  1998  02A8  00F7               	movwf	lcd8_dispString@value+1
  1999  02A9  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  2000                           
  2001                           ;master.c: 170:         delay_1ms();
  2002  02AE  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  2003                           
  2004                           ;master.c: 171:         lcd8_setCursor(2,3);
  2005  02B3  3003               	movlw	3
  2006  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2007  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2008  02B6  00B4               	movwf	??_main
  2009  02B7  0834               	movf	??_main,w
  2010  02B8  00F5               	movwf	lcd8_setCursor@columna
  2011  02B9  3002               	movlw	2
  2012  02BA  120A  118A  27E4  120A  118A  	fcall	_lcd8_setCursor
  2013                           
  2014                           ;master.c: 172:         delay_1ms();
  2015  02BF  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  2016  02C4                     l2568:	
  2017                           
  2018                           ;master.c: 173:         lcd8_dispString(G);
  2019  02C4  3037               	movlw	(low (main@G| 0))& (0+255)
  2020  02C5  00F6               	movwf	lcd8_dispString@value
  2021  02C6  3000               	movlw	0
  2022  02C7  00F7               	movwf	lcd8_dispString@value+1
  2023  02C8  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  2024  02CD                     l2570:	
  2025                           
  2026                           ;master.c: 174:         _delay((unsigned long)((200)*(4000000/4000.0)));
  2027  02CD  3002               	movlw	2
  2028  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2029  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2030  02D0  00B6               	movwf	??_main+2
  2031  02D1  3004               	movlw	4
  2032  02D2  00B5               	movwf	??_main+1
  2033  02D3  30B9               	movlw	185
  2034  02D4  00B4               	movwf	??_main
  2035  02D5                     u1447:	
  2036  02D5  0BB4               	decfsz	??_main,f
  2037  02D6  2AD5               	goto	u1447
  2038  02D7  0BB5               	decfsz	??_main+1,f
  2039  02D8  2AD5               	goto	u1447
  2040  02D9  0BB6               	decfsz	??_main+2,f
  2041  02DA  2AD5               	goto	u1447
  2042  02DB  2ADC               	nop2
  2043  02DC                     l2572:	
  2044                           
  2045                           ;master.c: 176:         char A[10];;master.c: 177:         sprintf(A, "%3u", Ayh);
  2046  02DC  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2047  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2048  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2049  02DF  00B4               	movwf	??_main
  2050  02E0  0834               	movf	??_main,w
  2051  02E1  00A5               	movwf	sprintf@f
  2052  02E2  0855               	movf	main@Ayh,w
  2053  02E3  00B5               	movwf	??_main+1
  2054  02E4  01B6               	clrf	??_main+2
  2055  02E5  0835               	movf	??_main+1,w
  2056  02E6  00A6               	movwf	?_sprintf+1
  2057  02E7  0836               	movf	??_main+2,w
  2058  02E8  00A7               	movwf	?_sprintf+2
  2059  02E9  3041               	movlw	(low (main@A| 0))& (0+255)
  2060  02EA  120A  118A  233B  120A  118A  	fcall	_sprintf
  2061  02EF                     l2574:	
  2062                           
  2063                           ;master.c: 178:         lcd8_setCursor(2,8);
  2064  02EF  3008               	movlw	8
  2065  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2066  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2067  02F2  00B4               	movwf	??_main
  2068  02F3  0834               	movf	??_main,w
  2069  02F4  00F5               	movwf	lcd8_setCursor@columna
  2070  02F5  3002               	movlw	2
  2071  02F6  120A  118A  27E4  120A  118A  	fcall	_lcd8_setCursor
  2072  02FB                     l2576:	
  2073                           
  2074                           ;master.c: 179:         delay_1ms();
  2075  02FB  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  2076  0300                     l2578:	
  2077                           
  2078                           ;master.c: 180:         lcd8_dispString("Ay:");
  2079  0300  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2080  0301  00F6               	movwf	lcd8_dispString@value
  2081  0302  3080               	movlw	128
  2082  0303  00F7               	movwf	lcd8_dispString@value+1
  2083  0304  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  2084  0309                     l2580:	
  2085                           
  2086                           ;master.c: 181:         delay_1ms();
  2087  0309  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  2088  030E                     l2582:	
  2089                           
  2090                           ;master.c: 182:         lcd8_setCursor(2,11);
  2091  030E  300B               	movlw	11
  2092  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0311  00B4               	movwf	??_main
  2095  0312  0834               	movf	??_main,w
  2096  0313  00F5               	movwf	lcd8_setCursor@columna
  2097  0314  3002               	movlw	2
  2098  0315  120A  118A  27E4  120A  118A  	fcall	_lcd8_setCursor
  2099  031A                     l2584:	
  2100                           
  2101                           ;master.c: 183:         delay_1ms();
  2102  031A  120A  158A  2726  120A  118A  	fcall	_delay_1ms
  2103  031F                     l2586:	
  2104                           
  2105                           ;master.c: 184:         lcd8_dispString(A);
  2106  031F  3041               	movlw	(low (main@A| 0))& (0+255)
  2107  0320  00F6               	movwf	lcd8_dispString@value
  2108  0321  3000               	movlw	0
  2109  0322  00F7               	movwf	lcd8_dispString@value+1
  2110  0323  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  2111                           
  2112                           ;master.c: 185:         _delay((unsigned long)((200)*(4000000/4000.0)));
  2113  0328  3002               	movlw	2
  2114  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2115  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2116  032B  00B6               	movwf	??_main+2
  2117  032C  3004               	movlw	4
  2118  032D  00B5               	movwf	??_main+1
  2119  032E  30B9               	movlw	185
  2120  032F  00B4               	movwf	??_main
  2121  0330                     u1457:	
  2122  0330  0BB4               	decfsz	??_main,f
  2123  0331  2B30               	goto	u1457
  2124  0332  0BB5               	decfsz	??_main+1,f
  2125  0333  2B30               	goto	u1457
  2126  0334  0BB6               	decfsz	??_main+2,f
  2127  0335  2B30               	goto	u1457
  2128  0336  2B37               	nop2
  2129  0337  286E               	goto	l2466
  2130  0338  120A  118A  280C   	ljmp	start
  2131  033B                     __end_of_main:	
  2132                           
  2133                           	psect	text1
  2134  0FD3                     __ptext1:	
  2135 ;; *************** function _tmr1_Prescaler *****************
  2136 ;; Defined at:
  2137 ;;		line 22 in file "TMR1.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  prescaler       1    wreg     unsigned char 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  prescaler       1    4[COMMON] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2151 ;;      Params:         0       0       0       0       0
  2152 ;;      Locals:         1       0       0       0       0
  2153 ;;      Temps:          2       0       0       0       0
  2154 ;;      Totals:         3       0       0       0       0
  2155 ;;Total ram usage:        3 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    1
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           
  2166                           ;psect for function _tmr1_Prescaler
  2167  0FD3                     _tmr1_Prescaler:	
  2168                           
  2169                           ;incstack = 0
  2170                           ; Regs used in _tmr1_Prescaler: [wreg-fsr0h+status,2+status,0]
  2171                           ;tmr1_Prescaler@prescaler stored from wreg
  2172  0FD3  00F4               	movwf	tmr1_Prescaler@prescaler
  2173  0FD4                     l1824:	
  2174                           
  2175                           ;TMR1.c: 23:     switch(prescaler){
  2176  0FD4  2FE9               	goto	l1828
  2177  0FD5                     l195:	
  2178                           ;TMR1.c: 24:         case 0:
  2179                           
  2180                           
  2181                           ;TMR1.c: 25:             T1CONbits.T1CKPS1 = 0;
  2182  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0FD7  1290               	bcf	16,5	;volatile
  2185                           
  2186                           ;TMR1.c: 26:             T1CONbits.T1CKPS0 = 0;
  2187  0FD8  1210               	bcf	16,4	;volatile
  2188                           
  2189                           ;TMR1.c: 27:             break;
  2190  0FD9  2FFF               	goto	l200
  2191  0FDA                     l197:	
  2192                           ;TMR1.c: 28:         case 1:
  2193                           
  2194                           
  2195                           ;TMR1.c: 29:             T1CONbits.T1CKPS1 = 0;
  2196  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0FDC  1290               	bcf	16,5	;volatile
  2199                           
  2200                           ;TMR1.c: 30:             T1CONbits.T1CKPS0 = 1;
  2201  0FDD  1610               	bsf	16,4	;volatile
  2202                           
  2203                           ;TMR1.c: 31:             break;
  2204  0FDE  2FFF               	goto	l200
  2205  0FDF                     l198:	
  2206                           ;TMR1.c: 32:         case 2:
  2207                           
  2208                           
  2209                           ;TMR1.c: 33:             T1CONbits.T1CKPS1 = 1;
  2210  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0FE1  1690               	bsf	16,5	;volatile
  2213                           
  2214                           ;TMR1.c: 34:             T1CONbits.T1CKPS0 = 0;
  2215  0FE2  1210               	bcf	16,4	;volatile
  2216                           
  2217                           ;TMR1.c: 35:             break;
  2218  0FE3  2FFF               	goto	l200
  2219  0FE4                     l199:	
  2220                           ;TMR1.c: 36:         case 3:
  2221                           
  2222                           
  2223                           ;TMR1.c: 37:             T1CONbits.T1CKPS1 = 1;
  2224  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0FE6  1690               	bsf	16,5	;volatile
  2227                           
  2228                           ;TMR1.c: 38:             T1CONbits.T1CKPS0 = 1;
  2229  0FE7  1610               	bsf	16,4	;volatile
  2230                           
  2231                           ;TMR1.c: 39:             break;
  2232  0FE8  2FFF               	goto	l200
  2233  0FE9                     l1828:	
  2234  0FE9  0874               	movf	tmr1_Prescaler@prescaler,w
  2235  0FEA  00F2               	movwf	??_tmr1_Prescaler
  2236  0FEB  01F3               	clrf	??_tmr1_Prescaler+1
  2237                           
  2238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2239                           ; Switch size 1, requested type "simple"
  2240                           ; Number of cases is 1, Range of values is 0 to 0
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte            4     3 (average)
  2244                           ; direct_byte           11     8 (fixed)
  2245                           ; jumptable            260     6 (fixed)
  2246                           ;	Chosen strategy is simple_byte
  2247  0FEC  0873               	movf	??_tmr1_Prescaler+1,w
  2248  0FED  3A00               	xorlw	0	; case 0
  2249  0FEE  1903               	skipnz
  2250  0FEF  2FF1               	goto	l2708
  2251  0FF0  2FFF               	goto	l200
  2252  0FF1                     l2708:	
  2253                           
  2254                           ; Switch size 1, requested type "simple"
  2255                           ; Number of cases is 4, Range of values is 0 to 3
  2256                           ; switch strategies available:
  2257                           ; Name         Instructions Cycles
  2258                           ; simple_byte           13     7 (average)
  2259                           ; direct_byte           20     8 (fixed)
  2260                           ; jumptable            260     6 (fixed)
  2261                           ;	Chosen strategy is simple_byte
  2262  0FF1  0872               	movf	??_tmr1_Prescaler,w
  2263  0FF2  3A00               	xorlw	0	; case 0
  2264  0FF3  1903               	skipnz
  2265  0FF4  2FD5               	goto	l195
  2266  0FF5  3A01               	xorlw	1	; case 1
  2267  0FF6  1903               	skipnz
  2268  0FF7  2FDA               	goto	l197
  2269  0FF8  3A03               	xorlw	3	; case 2
  2270  0FF9  1903               	skipnz
  2271  0FFA  2FDF               	goto	l198
  2272  0FFB  3A01               	xorlw	1	; case 3
  2273  0FFC  1903               	skipnz
  2274  0FFD  2FE4               	goto	l199
  2275  0FFE  2FFF               	goto	l200
  2276  0FFF                     l200:	
  2277  0FFF  0008               	return
  2278  1000                     __end_of_tmr1_Prescaler:	
  2279                           
  2280                           	psect	text2
  2281  0EB6                     __ptext2:	
  2282 ;; *************** function _tmr1_Interrupt *****************
  2283 ;; Defined at:
  2284 ;;		line 43 in file "TMR1.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  tmr1_Int        1    wreg     unsigned char 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  tmr1_Int        1    2[COMMON] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       0       0       0       0
  2299 ;;      Locals:         1       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0
  2301 ;;      Totals:         1       0       0       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _tmr1_Interrupt
  2314  0EB6                     _tmr1_Interrupt:	
  2315                           
  2316                           ;incstack = 0
  2317                           ; Regs used in _tmr1_Interrupt: [wreg+status,0]
  2318                           ;tmr1_Interrupt@tmr1_Int stored from wreg
  2319  0EB6  00F2               	movwf	tmr1_Interrupt@tmr1_Int
  2320  0EB7                     l1834:	
  2321                           
  2322                           ;TMR1.c: 44:     PIE1bits.TMR1IE = tmr1_Int;
  2323  0EB7  0C72               	rrf	tmr1_Interrupt@tmr1_Int,w
  2324  0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  2325  0EB9  1303               	bcf	3,6	;RP1=0, select bank1
  2326  0EBA  1C03               	skipc
  2327  0EBB  100C               	bcf	12,0	;volatile
  2328  0EBC  1803               	skipnc
  2329  0EBD  140C               	bsf	12,0	;volatile
  2330  0EBE                     l1836:	
  2331                           
  2332                           ;TMR1.c: 45:     PIR1bits.TMR1IF = 0;
  2333  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2334  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2335  0EC0  100C               	bcf	12,0	;volatile
  2336  0EC1                     l203:	
  2337  0EC1  0008               	return
  2338  0EC2                     __end_of_tmr1_Interrupt:	
  2339                           
  2340                           	psect	text3
  2341  0E84                     __ptext3:	
  2342 ;; *************** function _tmr1_Init *****************
  2343 ;; Defined at:
  2344 ;;		line 16 in file "TMR1.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		None
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    1
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_main
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _tmr1_Init
  2374  0E84                     _tmr1_Init:	
  2375  0E84                     l1822:	
  2376                           ;incstack = 0
  2377                           ; Regs used in _tmr1_Init: []
  2378                           
  2379                           
  2380                           ;TMR1.c: 17:     T1CONbits.T1OSCEN = 0;
  2381  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0E86  1190               	bcf	16,3	;volatile
  2384                           
  2385                           ;TMR1.c: 18:     T1CONbits.TMR1CS = 0;
  2386  0E87  1090               	bcf	16,1	;volatile
  2387                           
  2388                           ;TMR1.c: 19:     T1CONbits.TMR1ON = 1;
  2389  0E88  1410               	bsf	16,0	;volatile
  2390  0E89                     l191:	
  2391  0E89  0008               	return
  2392  0E8A                     __end_of_tmr1_Init:	
  2393                           
  2394                           	psect	text4
  2395  033B                     __ptext4:	
  2396 ;; *************** function _sprintf *****************
  2397 ;; Defined at:
  2398 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  sp              1    wreg     PTR unsigned char 
  2401 ;;		 -> main@A(10), main@G(10), main@F(5), main@D(5), 
  2402 ;;  f               1    5[BANK0 ] PTR const unsigned char 
  2403 ;;		 -> STR_8(4), STR_6(4), STR_4(4), STR_1(4), 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  2406 ;;		 -> main@A(10), main@G(10), main@F(5), main@D(5), 
  2407 ;;  tmpval          4    0        struct .
  2408 ;;  width           2   16[BANK0 ] int 
  2409 ;;  val             2   13[BANK0 ] unsigned int 
  2410 ;;  cp              2    0        PTR const unsigned char 
  2411 ;;  len             2    0        unsigned int 
  2412 ;;  c               1   19[BANK0 ] unsigned char 
  2413 ;;  prec            1   15[BANK0 ] char 
  2414 ;;  ap              1   12[BANK0 ] PTR void [1]
  2415 ;;		 -> ?_sprintf(2), 
  2416 ;;  flag            1   11[BANK0 ] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  2    5[BANK0 ] int 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2426 ;;      Params:         0       3       0       0       0
  2427 ;;      Locals:         0       9       0       0       0
  2428 ;;      Temps:          0       3       0       0       0
  2429 ;;      Totals:         0      15       0       0       0
  2430 ;;Total ram usage:       15 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    2
  2433 ;; This function calls:
  2434 ;;		___lwdiv
  2435 ;;		___lwmod
  2436 ;;		___wmul
  2437 ;;		_isdigit
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _sprintf
  2445  033B                     _sprintf:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2449                           ;sprintf@sp stored from wreg
  2450  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2451  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2452  033D  00B2               	movwf	sprintf@sp
  2453  033E                     l2366:	
  2454                           
  2455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;
  2456  033E  3026               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2457  033F  00A8               	movwf	??_sprintf
  2458  0340  0828               	movf	??_sprintf,w
  2459  0341  00AC               	movwf	sprintf@ap
  2460                           
  2461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2462  0342  2C7F               	goto	l2434
  2463  0343                     l2368:	
  2464                           
  2465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  2466  0343  3025               	movlw	37
  2467  0344  0633               	xorwf	sprintf@c,w
  2468  0345  1903               	btfsc	3,2
  2469  0346  2B48               	goto	u1171
  2470  0347  2B49               	goto	u1170
  2471  0348                     u1171:	
  2472  0348  2B55               	goto	l2374
  2473  0349                     u1170:	
  2474  0349                     l2370:	
  2475                           
  2476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  2477  0349  0833               	movf	sprintf@c,w
  2478  034A  00A8               	movwf	??_sprintf
  2479  034B  0832               	movf	sprintf@sp,w
  2480  034C  0084               	movwf	4
  2481  034D  0828               	movf	??_sprintf,w
  2482  034E  1383               	bcf	3,7	;select IRP bank0
  2483  034F  0080               	movwf	0
  2484  0350                     l2372:	
  2485  0350  3001               	movlw	1
  2486  0351  00A8               	movwf	??_sprintf
  2487  0352  0828               	movf	??_sprintf,w
  2488  0353  07B2               	addwf	sprintf@sp,f
  2489                           
  2490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  2491  0354  2C7F               	goto	l2434
  2492  0355                     l2374:	
  2493                           
  2494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  2495  0355  01B0               	clrf	sprintf@width
  2496  0356  01B1               	clrf	sprintf@width+1
  2497                           
  2498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  2499  0357  01AB               	clrf	sprintf@flag
  2500  0358                     l2376:	
  2501                           
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  2503  0358  0825               	movf	sprintf@f,w
  2504  0359  0084               	movwf	4
  2505  035A  120A  158A  200A  120A  118A  	fcall	stringdir
  2506  035F  120A  158A  2700  120A  118A  	fcall	_isdigit
  2507  0364  1C03               	btfss	3,0
  2508  0365  2B67               	goto	u1181
  2509  0366  2B68               	goto	u1180
  2510  0367                     u1181:	
  2511  0367  2BAE               	goto	l2392
  2512  0368                     u1180:	
  2513  0368                     l2378:	
  2514                           
  2515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  2516  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2518  036A  01B0               	clrf	sprintf@width
  2519  036B  01B1               	clrf	sprintf@width+1
  2520  036C                     l2380:	
  2521                           
  2522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  2523  036C  300A               	movlw	10
  2524  036D  00F2               	movwf	___wmul@multiplier
  2525  036E  3000               	movlw	0
  2526  036F  00F3               	movwf	___wmul@multiplier+1
  2527  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0372  0831               	movf	sprintf@width+1,w
  2530  0373  00F5               	movwf	___wmul@multiplicand+1
  2531  0374  0830               	movf	sprintf@width,w
  2532  0375  00F4               	movwf	___wmul@multiplicand
  2533  0376  120A  158A  2782  120A  118A  	fcall	___wmul
  2534  037B  0873               	movf	?___wmul+1,w
  2535  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2536  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2537  037E  00B1               	movwf	sprintf@width+1
  2538  037F  0872               	movf	?___wmul,w
  2539  0380  00B0               	movwf	sprintf@width
  2540  0381                     l2382:	
  2541                           
  2542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  2543  0381  0825               	movf	sprintf@f,w
  2544  0382  0084               	movwf	4
  2545  0383  120A  158A  200A  120A  118A  	fcall	stringdir
  2546  0388  3ED0               	addlw	208
  2547  0389  00A8               	movwf	??_sprintf
  2548  038A  30FF               	movlw	255
  2549  038B  1803               	skipnc
  2550  038C  3000               	movlw	0
  2551  038D  00A9               	movwf	??_sprintf+1
  2552  038E  0828               	movf	??_sprintf,w
  2553  038F  07B0               	addwf	sprintf@width,f
  2554  0390  1803               	skipnc
  2555  0391  0AB1               	incf	sprintf@width+1,f
  2556  0392  0829               	movf	??_sprintf+1,w
  2557  0393  07B1               	addwf	sprintf@width+1,f
  2558  0394                     l2384:	
  2559  0394  3001               	movlw	1
  2560  0395  00A8               	movwf	??_sprintf
  2561  0396  0828               	movf	??_sprintf,w
  2562  0397  07A5               	addwf	sprintf@f,f
  2563  0398                     l2386:	
  2564                           
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  2566  0398  0825               	movf	sprintf@f,w
  2567  0399  0084               	movwf	4
  2568  039A  120A  158A  200A  120A  118A  	fcall	stringdir
  2569  039F  120A  158A  2700  120A  118A  	fcall	_isdigit
  2570  03A4  1803               	btfsc	3,0
  2571  03A5  2BA7               	goto	u1191
  2572  03A6  2BA8               	goto	u1190
  2573  03A7                     u1191:	
  2574  03A7  2B6C               	goto	l2380
  2575  03A8                     u1190:	
  2576  03A8  2BAE               	goto	l2392
  2577  03A9                     l2388:	
  2578                           
  2579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 844:    fla
      +                          g |= 0xC0;
  2580  03A9  30C0               	movlw	192
  2581  03AA  00A8               	movwf	??_sprintf
  2582  03AB  0828               	movf	??_sprintf,w
  2583  03AC  04AB               	iorwf	sprintf@flag,f
  2584                           
  2585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 845:    bre
      +                          ak;
  2586  03AD  2BCA               	goto	l2394
  2587  03AE                     l2392:	
  2588  03AE  3001               	movlw	1
  2589  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2590  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2591  03B1  07A5               	addwf	sprintf@f,f
  2592  03B2  30FF               	movlw	-1
  2593  03B3  0725               	addwf	sprintf@f,w
  2594  03B4  0084               	movwf	4
  2595  03B5  120A  158A  200A  120A  118A  	fcall	stringdir
  2596  03BA  00B3               	movwf	sprintf@c
  2597  03BB  00A8               	movwf	??_sprintf
  2598  03BC  01A9               	clrf	??_sprintf+1
  2599                           
  2600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2601                           ; Switch size 1, requested type "simple"
  2602                           ; Number of cases is 1, Range of values is 0 to 0
  2603                           ; switch strategies available:
  2604                           ; Name         Instructions Cycles
  2605                           ; simple_byte            4     3 (average)
  2606                           ; direct_byte           11     8 (fixed)
  2607                           ; jumptable            260     6 (fixed)
  2608                           ;	Chosen strategy is simple_byte
  2609  03BD  0829               	movf	??_sprintf+1,w
  2610  03BE  3A00               	xorlw	0	; case 0
  2611  03BF  1903               	skipnz
  2612  03C0  2BC2               	goto	l2710
  2613  03C1  2C7F               	goto	l2434
  2614  03C2                     l2710:	
  2615                           
  2616                           ; Switch size 1, requested type "simple"
  2617                           ; Number of cases is 2, Range of values is 0 to 117
  2618                           ; switch strategies available:
  2619                           ; Name         Instructions Cycles
  2620                           ; simple_byte            7     4 (average)
  2621                           ; jumptable            260     6 (fixed)
  2622                           ;	Chosen strategy is simple_byte
  2623  03C2  0828               	movf	??_sprintf,w
  2624  03C3  3A00               	xorlw	0	; case 0
  2625  03C4  1903               	skipnz
  2626  03C5  2C91               	goto	l2436
  2627  03C6  3A75               	xorlw	117	; case 117
  2628  03C7  1903               	skipnz
  2629  03C8  2BA9               	goto	l2388
  2630  03C9  2C7F               	goto	l2434
  2631  03CA                     l2394:	
  2632                           
  2633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1299:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1312:     val
      +                           = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2634  03CA  082C               	movf	sprintf@ap,w
  2635  03CB  0084               	movwf	4
  2636  03CC  1383               	bcf	3,7	;select IRP bank0
  2637  03CD  0800               	movf	0,w
  2638  03CE  00AD               	movwf	sprintf@val
  2639  03CF  0A84               	incf	4,f
  2640  03D0  0800               	movf	0,w
  2641  03D1  00AE               	movwf	sprintf@val+1
  2642  03D2                     l2396:	
  2643  03D2  3002               	movlw	2
  2644  03D3  00A8               	movwf	??_sprintf
  2645  03D4  0828               	movf	??_sprintf,w
  2646  03D5  07AC               	addwf	sprintf@ap,f
  2647  03D6                     l2398:	
  2648                           
  2649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1313:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2650  03D6  01B3               	clrf	sprintf@c
  2651  03D7  0AB3               	incf	sprintf@c,f
  2652  03D8                     l2404:	
  2653                           
  2654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  2655  03D8  0833               	movf	sprintf@c,w
  2656  03D9  00A8               	movwf	??_sprintf
  2657  03DA  0728               	addwf	??_sprintf,w
  2658  03DB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2659  03DC  0084               	movwf	4
  2660  03DD  120A  158A  200A  120A  118A  	fcall	stringdir
  2661  03E2  00A9               	movwf	??_sprintf+1
  2662  03E3  120A  158A  200A  120A  118A  	fcall	stringdir
  2663  03E8  00AA               	movwf	??_sprintf+2
  2664  03E9  082A               	movf	??_sprintf+2,w
  2665  03EA  022E               	subwf	sprintf@val+1,w
  2666  03EB  1D03               	skipz
  2667  03EC  2BEF               	goto	u1205
  2668  03ED  0829               	movf	??_sprintf+1,w
  2669  03EE  022D               	subwf	sprintf@val,w
  2670  03EF                     u1205:	
  2671  03EF  1803               	skipnc
  2672  03F0  2BF2               	goto	u1201
  2673  03F1  2BF3               	goto	u1200
  2674  03F2                     u1201:	
  2675  03F2  2BF4               	goto	l2408
  2676  03F3                     u1200:	
  2677  03F3  2BFE               	goto	l2410
  2678  03F4                     l2408:	
  2679  03F4  3001               	movlw	1
  2680  03F5  00A8               	movwf	??_sprintf
  2681  03F6  0828               	movf	??_sprintf,w
  2682  03F7  07B3               	addwf	sprintf@c,f
  2683  03F8  3005               	movlw	5
  2684  03F9  0633               	xorwf	sprintf@c,w
  2685  03FA  1D03               	btfss	3,2
  2686  03FB  2BFD               	goto	u1211
  2687  03FC  2BFE               	goto	u1210
  2688  03FD                     u1211:	
  2689  03FD  2BD8               	goto	l2404
  2690  03FE                     u1210:	
  2691  03FE                     l2410:	
  2692                           
  2693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  2694  03FE  0831               	movf	sprintf@width+1,w
  2695  03FF  3A80               	xorlw	128
  2696  0400  3C80               	sublw	128
  2697  0401  1D03               	skipz
  2698  0402  2C05               	goto	u1225
  2699  0403  0830               	movf	sprintf@width,w
  2700  0404  0233               	subwf	sprintf@c,w
  2701  0405                     u1225:	
  2702  0405  1803               	skipnc
  2703  0406  2C08               	goto	u1221
  2704  0407  2C09               	goto	u1220
  2705  0408                     u1221:	
  2706  0408  2C15               	goto	l2414
  2707  0409                     u1220:	
  2708  0409                     l2412:	
  2709                           
  2710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  2711  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2712  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2713  040B  0833               	movf	sprintf@c,w
  2714  040C  00A8               	movwf	??_sprintf
  2715  040D  01A9               	clrf	??_sprintf+1
  2716  040E  0828               	movf	??_sprintf,w
  2717  040F  02B0               	subwf	sprintf@width,f
  2718  0410  0829               	movf	??_sprintf+1,w
  2719  0411  1C03               	skipc
  2720  0412  03B1               	decf	sprintf@width+1,f
  2721  0413  02B1               	subwf	sprintf@width+1,f
  2722  0414  2C19               	goto	l2416
  2723  0415                     l2414:	
  2724                           
  2725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  2726  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0417  01B0               	clrf	sprintf@width
  2729  0418  01B1               	clrf	sprintf@width+1
  2730  0419                     l2416:	
  2731                           
  2732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  2733  0419  0830               	movf	sprintf@width,w
  2734  041A  0431               	iorwf	sprintf@width+1,w
  2735  041B  1903               	btfsc	3,2
  2736  041C  2C1E               	goto	u1231
  2737  041D  2C1F               	goto	u1230
  2738  041E                     u1231:	
  2739  041E  2C36               	goto	l2424
  2740  041F                     u1230:	
  2741  041F                     l2418:	
  2742                           
  2743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  2744  041F  3020               	movlw	32
  2745  0420  00A8               	movwf	??_sprintf
  2746  0421  0832               	movf	sprintf@sp,w
  2747  0422  0084               	movwf	4
  2748  0423  0828               	movf	??_sprintf,w
  2749  0424  1383               	bcf	3,7	;select IRP bank0
  2750  0425  0080               	movwf	0
  2751  0426                     l2420:	
  2752  0426  3001               	movlw	1
  2753  0427  00A8               	movwf	??_sprintf
  2754  0428  0828               	movf	??_sprintf,w
  2755  0429  07B2               	addwf	sprintf@sp,f
  2756  042A                     l2422:	
  2757  042A  30FF               	movlw	255
  2758  042B  07B0               	addwf	sprintf@width,f
  2759  042C  1803               	skipnc
  2760  042D  0AB1               	incf	sprintf@width+1,f
  2761  042E  30FF               	movlw	255
  2762  042F  07B1               	addwf	sprintf@width+1,f
  2763  0430  0830               	movf	sprintf@width,w
  2764  0431  0431               	iorwf	sprintf@width+1,w
  2765  0432  1D03               	btfss	3,2
  2766  0433  2C35               	goto	u1241
  2767  0434  2C36               	goto	u1240
  2768  0435                     u1241:	
  2769  0435  2C1F               	goto	l2418
  2770  0436                     u1240:	
  2771  0436                     l2424:	
  2772                           
  2773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  2774  0436  0833               	movf	sprintf@c,w
  2775  0437  00A8               	movwf	??_sprintf
  2776  0438  0828               	movf	??_sprintf,w
  2777  0439  00AF               	movwf	sprintf@prec
  2778                           
  2779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2780  043A  2C76               	goto	l2432
  2781  043B                     l2426:	
  2782                           
  2783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2784  043B  300A               	movlw	10
  2785  043C  00A0               	movwf	___lwmod@divisor
  2786  043D  3000               	movlw	0
  2787  043E  00A1               	movwf	___lwmod@divisor+1
  2788  043F  082F               	movf	sprintf@prec,w
  2789  0440  00A8               	movwf	??_sprintf
  2790  0441  0728               	addwf	??_sprintf,w
  2791  0442  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2792  0443  0084               	movwf	4
  2793  0444  120A  158A  200A  120A  118A  	fcall	stringdir
  2794  0449  00F2               	movwf	___lwdiv@divisor
  2795  044A  120A  158A  200A  120A  118A  	fcall	stringdir
  2796  044F  00F3               	movwf	___lwdiv@divisor+1
  2797  0450  082E               	movf	sprintf@val+1,w
  2798  0451  00F5               	movwf	___lwdiv@dividend+1
  2799  0452  082D               	movf	sprintf@val,w
  2800  0453  00F4               	movwf	___lwdiv@dividend
  2801  0454  120A  118A  26F6  120A  118A  	fcall	___lwdiv
  2802  0459  0873               	movf	?___lwdiv+1,w
  2803  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2804  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2805  045C  00A3               	movwf	___lwmod@dividend+1
  2806  045D  0872               	movf	?___lwdiv,w
  2807  045E  00A2               	movwf	___lwmod@dividend
  2808  045F  120A  118A  273A  120A  118A  	fcall	___lwmod
  2809  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0466  0820               	movf	?___lwmod,w
  2812  0467  3E30               	addlw	48
  2813  0468  00A9               	movwf	??_sprintf+1
  2814  0469  0829               	movf	??_sprintf+1,w
  2815  046A  00B3               	movwf	sprintf@c
  2816  046B                     l2428:	
  2817                           
  2818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  2819  046B  0833               	movf	sprintf@c,w
  2820  046C  00A8               	movwf	??_sprintf
  2821  046D  0832               	movf	sprintf@sp,w
  2822  046E  0084               	movwf	4
  2823  046F  0828               	movf	??_sprintf,w
  2824  0470  1383               	bcf	3,7	;select IRP bank0
  2825  0471  0080               	movwf	0
  2826  0472                     l2430:	
  2827  0472  3001               	movlw	1
  2828  0473  00A8               	movwf	??_sprintf
  2829  0474  0828               	movf	??_sprintf,w
  2830  0475  07B2               	addwf	sprintf@sp,f
  2831  0476                     l2432:	
  2832                           
  2833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2834  0476  30FF               	movlw	255
  2835  0477  00A8               	movwf	??_sprintf
  2836  0478  0828               	movf	??_sprintf,w
  2837  0479  07AF               	addwf	sprintf@prec,f
  2838  047A  0A2F               	incf	sprintf@prec,w
  2839  047B  1D03               	btfss	3,2
  2840  047C  2C7E               	goto	u1251
  2841  047D  2C7F               	goto	u1250
  2842  047E                     u1251:	
  2843  047E  2C3B               	goto	l2426
  2844  047F                     u1250:	
  2845  047F                     l2434:	
  2846                           
  2847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2848  047F  3001               	movlw	1
  2849  0480  07A5               	addwf	sprintf@f,f
  2850  0481  30FF               	movlw	-1
  2851  0482  0725               	addwf	sprintf@f,w
  2852  0483  0084               	movwf	4
  2853  0484  120A  158A  200A  120A  118A  	fcall	stringdir
  2854  0489  00A8               	movwf	??_sprintf
  2855  048A  0828               	movf	??_sprintf,w
  2856  048B  00B3               	movwf	sprintf@c
  2857  048C  0833               	movf	sprintf@c,w
  2858  048D  1D03               	btfss	3,2
  2859  048E  2C90               	goto	u1261
  2860  048F  2C91               	goto	u1260
  2861  0490                     u1261:	
  2862  0490  2B43               	goto	l2368
  2863  0491                     u1260:	
  2864  0491                     l2436:	
  2865                           
  2866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  2867  0491  0832               	movf	sprintf@sp,w
  2868  0492  0084               	movwf	4
  2869  0493  1383               	bcf	3,7	;select IRP bank0
  2870  0494  0180               	clrf	0
  2871  0495                     l431:	
  2872  0495  0008               	return
  2873  0496                     __end_of_sprintf:	
  2874                           
  2875                           	psect	text5
  2876  0F00                     __ptext5:	
  2877 ;; *************** function _isdigit *****************
  2878 ;; Defined at:
  2879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  c               1    wreg     unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  c               1    3[COMMON] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;		None               void
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2893 ;;      Params:         0       0       0       0       0
  2894 ;;      Locals:         2       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0
  2896 ;;      Totals:         2       0       0       0       0
  2897 ;;Total ram usage:        2 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    1
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_sprintf
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function _isdigit
  2909  0F00                     _isdigit:	
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2913                           ;isdigit@c stored from wreg
  2914  0F00  00F3               	movwf	isdigit@c
  2915  0F01                     l1702:	
  2916  0F01  01F2               	clrf	_isdigit$1178
  2917  0F02                     l1704:	
  2918  0F02  303A               	movlw	58
  2919  0F03  0273               	subwf	isdigit@c,w
  2920  0F04  1803               	skipnc
  2921  0F05  2F07               	goto	u591
  2922  0F06  2F08               	goto	u590
  2923  0F07                     u591:	
  2924  0F07  2F10               	goto	l1710
  2925  0F08                     u590:	
  2926  0F08                     l1706:	
  2927  0F08  3030               	movlw	48
  2928  0F09  0273               	subwf	isdigit@c,w
  2929  0F0A  1C03               	skipc
  2930  0F0B  2F0D               	goto	u601
  2931  0F0C  2F0E               	goto	u600
  2932  0F0D                     u601:	
  2933  0F0D  2F10               	goto	l1710
  2934  0F0E                     u600:	
  2935  0F0E                     l1708:	
  2936  0F0E  01F2               	clrf	_isdigit$1178
  2937  0F0F  0AF2               	incf	_isdigit$1178,f
  2938  0F10                     l1710:	
  2939  0F10  0C72               	rrf	_isdigit$1178,w
  2940  0F11                     l882:	
  2941  0F11  0008               	return
  2942  0F12                     __end_of_isdigit:	
  2943                           
  2944                           	psect	text6
  2945  0F82                     __ptext6:	
  2946 ;; *************** function ___wmul *****************
  2947 ;; Defined at:
  2948 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  multiplier      2    2[COMMON] unsigned int 
  2951 ;;  multiplicand    2    4[COMMON] unsigned int 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  product         2    6[COMMON] unsigned int 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2    2[COMMON] unsigned int 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         4       0       0       0       0
  2964 ;;      Locals:         2       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         6       0       0       0       0
  2967 ;;Total ram usage:        6 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_sprintf
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function ___wmul
  2979  0F82                     ___wmul:	
  2980  0F82                     l1714:	
  2981                           ;incstack = 0
  2982                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2983                           
  2984  0F82  01F6               	clrf	___wmul@product
  2985  0F83  01F7               	clrf	___wmul@product+1
  2986  0F84                     l1716:	
  2987  0F84  1C72               	btfss	___wmul@multiplier,0
  2988  0F85  2F87               	goto	u611
  2989  0F86  2F88               	goto	u610
  2990  0F87                     u611:	
  2991  0F87  2F8E               	goto	l435
  2992  0F88                     u610:	
  2993  0F88                     l1718:	
  2994  0F88  0874               	movf	___wmul@multiplicand,w
  2995  0F89  07F6               	addwf	___wmul@product,f
  2996  0F8A  1803               	skipnc
  2997  0F8B  0AF7               	incf	___wmul@product+1,f
  2998  0F8C  0875               	movf	___wmul@multiplicand+1,w
  2999  0F8D  07F7               	addwf	___wmul@product+1,f
  3000  0F8E                     l435:	
  3001  0F8E  3001               	movlw	1
  3002  0F8F                     u625:	
  3003  0F8F  1003               	clrc
  3004  0F90  0DF4               	rlf	___wmul@multiplicand,f
  3005  0F91  0DF5               	rlf	___wmul@multiplicand+1,f
  3006  0F92  3EFF               	addlw	-1
  3007  0F93  1D03               	skipz
  3008  0F94  2F8F               	goto	u625
  3009  0F95                     l1720:	
  3010  0F95  3001               	movlw	1
  3011  0F96                     u635:	
  3012  0F96  1003               	clrc
  3013  0F97  0CF3               	rrf	___wmul@multiplier+1,f
  3014  0F98  0CF2               	rrf	___wmul@multiplier,f
  3015  0F99  3EFF               	addlw	-1
  3016  0F9A  1D03               	skipz
  3017  0F9B  2F96               	goto	u635
  3018  0F9C                     l1722:	
  3019  0F9C  0872               	movf	___wmul@multiplier,w
  3020  0F9D  0473               	iorwf	___wmul@multiplier+1,w
  3021  0F9E  1D03               	btfss	3,2
  3022  0F9F  2FA1               	goto	u641
  3023  0FA0  2FA2               	goto	u640
  3024  0FA1                     u641:	
  3025  0FA1  2F84               	goto	l1716
  3026  0FA2                     u640:	
  3027  0FA2                     l1724:	
  3028  0FA2  0877               	movf	___wmul@product+1,w
  3029  0FA3  00F3               	movwf	?___wmul+1
  3030  0FA4  0876               	movf	___wmul@product,w
  3031  0FA5  00F2               	movwf	?___wmul
  3032  0FA6                     l437:	
  3033  0FA6  0008               	return
  3034  0FA7                     __end_of___wmul:	
  3035                           
  3036                           	psect	text7
  3037  073A                     __ptext7:	
  3038 ;; *************** function ___lwmod *****************
  3039 ;; Defined at:
  3040 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  divisor         2    0[BANK0 ] unsigned int 
  3043 ;;  dividend        2    2[BANK0 ] unsigned int 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  counter         1    4[BANK0 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  2    0[BANK0 ] unsigned int 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       4       0       0       0
  3056 ;;      Locals:         0       1       0       0       0
  3057 ;;      Temps:          1       0       0       0       0
  3058 ;;      Totals:         1       5       0       0       0
  3059 ;;Total ram usage:        6 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    1
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_sprintf
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function ___lwmod
  3071  073A                     ___lwmod:	
  3072  073A                     l2344:	
  3073                           ;incstack = 0
  3074                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3075                           
  3076  073A  1283               	bcf	3,5	;RP0=0, select bank0
  3077  073B  1303               	bcf	3,6	;RP1=0, select bank0
  3078  073C  0820               	movf	___lwmod@divisor,w
  3079  073D  0421               	iorwf	___lwmod@divisor+1,w
  3080  073E  1903               	btfsc	3,2
  3081  073F  2F41               	goto	u1111
  3082  0740  2F42               	goto	u1110
  3083  0741                     u1111:	
  3084  0741  2F71               	goto	l2362
  3085  0742                     u1110:	
  3086  0742                     l2346:	
  3087  0742  01A4               	clrf	___lwmod@counter
  3088  0743  0AA4               	incf	___lwmod@counter,f
  3089  0744  2F50               	goto	l2352
  3090  0745                     l2348:	
  3091  0745  3001               	movlw	1
  3092  0746                     u1125:	
  3093  0746  1003               	clrc
  3094  0747  0DA0               	rlf	___lwmod@divisor,f
  3095  0748  0DA1               	rlf	___lwmod@divisor+1,f
  3096  0749  3EFF               	addlw	-1
  3097  074A  1D03               	skipz
  3098  074B  2F46               	goto	u1125
  3099  074C                     l2350:	
  3100  074C  3001               	movlw	1
  3101  074D  00FA               	movwf	??___lwmod
  3102  074E  087A               	movf	??___lwmod,w
  3103  074F  07A4               	addwf	___lwmod@counter,f
  3104  0750                     l2352:	
  3105  0750  1FA1               	btfss	___lwmod@divisor+1,7
  3106  0751  2F53               	goto	u1131
  3107  0752  2F54               	goto	u1130
  3108  0753                     u1131:	
  3109  0753  2F45               	goto	l2348
  3110  0754                     u1130:	
  3111  0754                     l2354:	
  3112  0754  0821               	movf	___lwmod@divisor+1,w
  3113  0755  0223               	subwf	___lwmod@dividend+1,w
  3114  0756  1D03               	skipz
  3115  0757  2F5A               	goto	u1145
  3116  0758  0820               	movf	___lwmod@divisor,w
  3117  0759  0222               	subwf	___lwmod@dividend,w
  3118  075A                     u1145:	
  3119  075A  1C03               	skipc
  3120  075B  2F5D               	goto	u1141
  3121  075C  2F5E               	goto	u1140
  3122  075D                     u1141:	
  3123  075D  2F64               	goto	l2358
  3124  075E                     u1140:	
  3125  075E                     l2356:	
  3126  075E  0820               	movf	___lwmod@divisor,w
  3127  075F  02A2               	subwf	___lwmod@dividend,f
  3128  0760  0821               	movf	___lwmod@divisor+1,w
  3129  0761  1C03               	skipc
  3130  0762  03A3               	decf	___lwmod@dividend+1,f
  3131  0763  02A3               	subwf	___lwmod@dividend+1,f
  3132  0764                     l2358:	
  3133  0764  3001               	movlw	1
  3134  0765                     u1155:	
  3135  0765  1003               	clrc
  3136  0766  0CA1               	rrf	___lwmod@divisor+1,f
  3137  0767  0CA0               	rrf	___lwmod@divisor,f
  3138  0768  3EFF               	addlw	-1
  3139  0769  1D03               	skipz
  3140  076A  2F65               	goto	u1155
  3141  076B                     l2360:	
  3142  076B  3001               	movlw	1
  3143  076C  02A4               	subwf	___lwmod@counter,f
  3144  076D  1D03               	btfss	3,2
  3145  076E  2F70               	goto	u1161
  3146  076F  2F71               	goto	u1160
  3147  0770                     u1161:	
  3148  0770  2F54               	goto	l2354
  3149  0771                     u1160:	
  3150  0771                     l2362:	
  3151  0771  0823               	movf	___lwmod@dividend+1,w
  3152  0772  00A1               	movwf	?___lwmod+1
  3153  0773  0822               	movf	___lwmod@dividend,w
  3154  0774  00A0               	movwf	?___lwmod
  3155  0775                     l717:	
  3156  0775  0008               	return
  3157  0776                     __end_of___lwmod:	
  3158                           
  3159                           	psect	text8
  3160  06F6                     __ptext8:	
  3161 ;; *************** function ___lwdiv *****************
  3162 ;; Defined at:
  3163 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  divisor         2    2[COMMON] unsigned int 
  3166 ;;  dividend        2    4[COMMON] unsigned int 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  quotient        2    7[COMMON] unsigned int 
  3169 ;;  counter         1    9[COMMON] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  2    2[COMMON] unsigned int 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         4       0       0       0       0
  3180 ;;      Locals:         3       0       0       0       0
  3181 ;;      Temps:          1       0       0       0       0
  3182 ;;      Totals:         8       0       0       0       0
  3183 ;;Total ram usage:        8 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;;		_sprintf
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function ___lwdiv
  3196  06F6                     ___lwdiv:	
  3197  06F6                     l1752:	
  3198                           ;incstack = 0
  3199                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3200                           
  3201  06F6  01F7               	clrf	___lwdiv@quotient
  3202  06F7  01F8               	clrf	___lwdiv@quotient+1
  3203  06F8                     l1754:	
  3204  06F8  0872               	movf	___lwdiv@divisor,w
  3205  06F9  0473               	iorwf	___lwdiv@divisor+1,w
  3206  06FA  1903               	btfsc	3,2
  3207  06FB  2EFD               	goto	u721
  3208  06FC  2EFE               	goto	u720
  3209  06FD                     u721:	
  3210  06FD  2F35               	goto	l1774
  3211  06FE                     u720:	
  3212  06FE                     l1756:	
  3213  06FE  01F9               	clrf	___lwdiv@counter
  3214  06FF  0AF9               	incf	___lwdiv@counter,f
  3215  0700  2F0C               	goto	l1762
  3216  0701                     l1758:	
  3217  0701  3001               	movlw	1
  3218  0702                     u735:	
  3219  0702  1003               	clrc
  3220  0703  0DF2               	rlf	___lwdiv@divisor,f
  3221  0704  0DF3               	rlf	___lwdiv@divisor+1,f
  3222  0705  3EFF               	addlw	-1
  3223  0706  1D03               	skipz
  3224  0707  2F02               	goto	u735
  3225  0708                     l1760:	
  3226  0708  3001               	movlw	1
  3227  0709  00F6               	movwf	??___lwdiv
  3228  070A  0876               	movf	??___lwdiv,w
  3229  070B  07F9               	addwf	___lwdiv@counter,f
  3230  070C                     l1762:	
  3231  070C  1FF3               	btfss	___lwdiv@divisor+1,7
  3232  070D  2F0F               	goto	u741
  3233  070E  2F10               	goto	u740
  3234  070F                     u741:	
  3235  070F  2F01               	goto	l1758
  3236  0710                     u740:	
  3237  0710                     l1764:	
  3238  0710  3001               	movlw	1
  3239  0711                     u755:	
  3240  0711  1003               	clrc
  3241  0712  0DF7               	rlf	___lwdiv@quotient,f
  3242  0713  0DF8               	rlf	___lwdiv@quotient+1,f
  3243  0714  3EFF               	addlw	-1
  3244  0715  1D03               	skipz
  3245  0716  2F11               	goto	u755
  3246  0717  0873               	movf	___lwdiv@divisor+1,w
  3247  0718  0275               	subwf	___lwdiv@dividend+1,w
  3248  0719  1D03               	skipz
  3249  071A  2F1D               	goto	u765
  3250  071B  0872               	movf	___lwdiv@divisor,w
  3251  071C  0274               	subwf	___lwdiv@dividend,w
  3252  071D                     u765:	
  3253  071D  1C03               	skipc
  3254  071E  2F20               	goto	u761
  3255  071F  2F21               	goto	u760
  3256  0720                     u761:	
  3257  0720  2F28               	goto	l1770
  3258  0721                     u760:	
  3259  0721                     l1766:	
  3260  0721  0872               	movf	___lwdiv@divisor,w
  3261  0722  02F4               	subwf	___lwdiv@dividend,f
  3262  0723  0873               	movf	___lwdiv@divisor+1,w
  3263  0724  1C03               	skipc
  3264  0725  03F5               	decf	___lwdiv@dividend+1,f
  3265  0726  02F5               	subwf	___lwdiv@dividend+1,f
  3266  0727                     l1768:	
  3267  0727  1477               	bsf	___lwdiv@quotient,0
  3268  0728                     l1770:	
  3269  0728  3001               	movlw	1
  3270  0729                     u775:	
  3271  0729  1003               	clrc
  3272  072A  0CF3               	rrf	___lwdiv@divisor+1,f
  3273  072B  0CF2               	rrf	___lwdiv@divisor,f
  3274  072C  3EFF               	addlw	-1
  3275  072D  1D03               	skipz
  3276  072E  2F29               	goto	u775
  3277  072F                     l1772:	
  3278  072F  3001               	movlw	1
  3279  0730  02F9               	subwf	___lwdiv@counter,f
  3280  0731  1D03               	btfss	3,2
  3281  0732  2F34               	goto	u781
  3282  0733  2F35               	goto	u780
  3283  0734                     u781:	
  3284  0734  2F10               	goto	l1764
  3285  0735                     u780:	
  3286  0735                     l1774:	
  3287  0735  0878               	movf	___lwdiv@quotient+1,w
  3288  0736  00F3               	movwf	?___lwdiv+1
  3289  0737  0877               	movf	___lwdiv@quotient,w
  3290  0738  00F2               	movwf	?___lwdiv
  3291  0739                     l707:	
  3292  0739  0008               	return
  3293  073A                     __end_of___lwdiv:	
  3294                           
  3295                           	psect	text9
  3296  0F12                     __ptext9:	
  3297 ;; *************** function _setup *****************
  3298 ;; Defined at:
  3299 ;;		line 190 in file "master.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		status,2
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3313 ;;      Params:         0       0       0       0       0
  3314 ;;      Locals:         0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0
  3316 ;;      Totals:         0       0       0       0       0
  3317 ;;Total ram usage:        0 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    1
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           
  3328                           ;psect for function _setup
  3329  0F12                     _setup:	
  3330  0F12                     l1800:	
  3331                           ;incstack = 0
  3332                           ; Regs used in _setup: [status,2]
  3333                           
  3334                           
  3335                           ;master.c: 191:     TRISA = 0x00;
  3336  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  3337  0F13  1303               	bcf	3,6	;RP1=0, select bank1
  3338  0F14  0185               	clrf	5	;volatile
  3339  0F15                     l1802:	
  3340                           
  3341                           ;master.c: 192:     TRISBbits.TRISB0 = 0;
  3342  0F15  1006               	bcf	6,0	;volatile
  3343  0F16                     l1804:	
  3344                           
  3345                           ;master.c: 193:     TRISBbits.TRISB1 = 1;
  3346  0F16  1486               	bsf	6,1	;volatile
  3347  0F17                     l1806:	
  3348                           
  3349                           ;master.c: 194:     TRISBbits.TRISB2 = 0;
  3350  0F17  1106               	bcf	6,2	;volatile
  3351  0F18                     l1808:	
  3352                           
  3353                           ;master.c: 195:     TRISBbits.TRISB3 = 1;
  3354  0F18  1586               	bsf	6,3	;volatile
  3355  0F19                     l1810:	
  3356                           
  3357                           ;master.c: 196:     TRISBbits.TRISB4 = 0;
  3358  0F19  1206               	bcf	6,4	;volatile
  3359                           
  3360                           ;master.c: 197:     TRISD = 0;
  3361  0F1A  0188               	clrf	8	;volatile
  3362                           
  3363                           ;master.c: 198:     PORTD = 0;
  3364  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0F1D  0188               	clrf	8	;volatile
  3367                           
  3368                           ;master.c: 199:     TRISE = 0;
  3369  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  3371  0F20  0189               	clrf	9	;volatile
  3372                           
  3373                           ;master.c: 200:     ANSEL = 0;
  3374  0F21  1683               	bsf	3,5	;RP0=1, select bank3
  3375  0F22  1703               	bsf	3,6	;RP1=1, select bank3
  3376  0F23  0188               	clrf	8	;volatile
  3377                           
  3378                           ;master.c: 201:     ANSELH = 0;
  3379  0F24  0189               	clrf	9	;volatile
  3380  0F25                     l125:	
  3381  0F25  0008               	return
  3382  0F26                     __end_of_setup:	
  3383                           
  3384                           	psect	text10
  3385  05C3                     __ptext10:	
  3386 ;; *************** function _oscInit *****************
  3387 ;; Defined at:
  3388 ;;		line 11 in file "OSCCON.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  freq            1    wreg     unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  freq            1    4[COMMON] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      unsigned char 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       0       0       0       0
  3403 ;;      Locals:         1       0       0       0       0
  3404 ;;      Temps:          2       0       0       0       0
  3405 ;;      Totals:         3       0       0       0       0
  3406 ;;Total ram usage:        3 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _oscInit
  3418  05C3                     _oscInit:	
  3419                           
  3420                           ;incstack = 0
  3421                           ; Regs used in _oscInit: [wreg-fsr0h+status,2+status,0]
  3422                           ;oscInit@freq stored from wreg
  3423  05C3  00F4               	movwf	oscInit@freq
  3424  05C4                     l1812:	
  3425                           
  3426                           ;OSCCON.c: 12:     switch(freq){
  3427  05C4  2E15               	goto	l1816
  3428  05C5                     l131:	
  3429                           ;OSCCON.c: 13:         case 0:
  3430                           
  3431                           
  3432                           ;OSCCON.c: 14:             OSCCONbits.IRCF2 = 1;
  3433  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3434  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  3435  05C7  170F               	bsf	15,6	;volatile
  3436                           
  3437                           ;OSCCON.c: 15:             OSCCONbits.IRCF1 = 1;
  3438  05C8  168F               	bsf	15,5	;volatile
  3439                           
  3440                           ;OSCCON.c: 16:             OSCCONbits.IRCF0 = 1;
  3441  05C9  160F               	bsf	15,4	;volatile
  3442                           
  3443                           ;OSCCON.c: 17:             OSCCONbits.OSTS = 0;
  3444  05CA  118F               	bcf	15,3	;volatile
  3445                           
  3446                           ;OSCCON.c: 18:             OSCCONbits.HTS = 1;
  3447  05CB  150F               	bsf	15,2	;volatile
  3448                           
  3449                           ;OSCCON.c: 19:             OSCCONbits.LTS = 0;
  3450  05CC  108F               	bcf	15,1	;volatile
  3451                           
  3452                           ;OSCCON.c: 20:             OSCCONbits.SCS = 1;
  3453  05CD  140F               	bsf	15,0	;volatile
  3454                           
  3455                           ;OSCCON.c: 21:             break;
  3456  05CE  2E37               	goto	l140
  3457  05CF                     l133:	
  3458                           ;OSCCON.c: 22:         case 1:
  3459                           
  3460                           
  3461                           ;OSCCON.c: 23:             OSCCONbits.IRCF2 = 1;
  3462  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  3463  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  3464  05D1  170F               	bsf	15,6	;volatile
  3465                           
  3466                           ;OSCCON.c: 24:             OSCCONbits.IRCF1 = 1;
  3467  05D2  168F               	bsf	15,5	;volatile
  3468                           
  3469                           ;OSCCON.c: 25:             OSCCONbits.IRCF0 = 0;
  3470  05D3  120F               	bcf	15,4	;volatile
  3471                           
  3472                           ;OSCCON.c: 26:             OSCCONbits.OSTS = 0;
  3473  05D4  118F               	bcf	15,3	;volatile
  3474                           
  3475                           ;OSCCON.c: 27:             OSCCONbits.HTS = 1;
  3476  05D5  150F               	bsf	15,2	;volatile
  3477                           
  3478                           ;OSCCON.c: 28:             OSCCONbits.LTS = 0;
  3479  05D6  108F               	bcf	15,1	;volatile
  3480                           
  3481                           ;OSCCON.c: 29:             OSCCONbits.SCS = 1;
  3482  05D7  140F               	bsf	15,0	;volatile
  3483                           
  3484                           ;OSCCON.c: 30:             break;
  3485  05D8  2E37               	goto	l140
  3486  05D9                     l134:	
  3487                           ;OSCCON.c: 31:         case 2:
  3488                           
  3489                           
  3490                           ;OSCCON.c: 32:             OSCCONbits.IRCF2 = 1;
  3491  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  3492  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  3493  05DB  170F               	bsf	15,6	;volatile
  3494                           
  3495                           ;OSCCON.c: 33:             OSCCONbits.IRCF1 = 0;
  3496  05DC  128F               	bcf	15,5	;volatile
  3497                           
  3498                           ;OSCCON.c: 34:             OSCCONbits.IRCF0 = 1;
  3499  05DD  160F               	bsf	15,4	;volatile
  3500                           
  3501                           ;OSCCON.c: 35:             OSCCONbits.OSTS = 0;
  3502  05DE  118F               	bcf	15,3	;volatile
  3503                           
  3504                           ;OSCCON.c: 36:             OSCCONbits.HTS = 1;
  3505  05DF  150F               	bsf	15,2	;volatile
  3506                           
  3507                           ;OSCCON.c: 37:             OSCCONbits.LTS = 0;
  3508  05E0  108F               	bcf	15,1	;volatile
  3509                           
  3510                           ;OSCCON.c: 38:             OSCCONbits.SCS = 1;
  3511  05E1  140F               	bsf	15,0	;volatile
  3512                           
  3513                           ;OSCCON.c: 39:             break;
  3514  05E2  2E37               	goto	l140
  3515  05E3                     l135:	
  3516                           ;OSCCON.c: 40:         case 3:
  3517                           
  3518                           
  3519                           ;OSCCON.c: 41:             OSCCONbits.IRCF2 = 1;
  3520  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  3521  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  3522  05E5  170F               	bsf	15,6	;volatile
  3523                           
  3524                           ;OSCCON.c: 42:             OSCCONbits.IRCF1 = 0;
  3525  05E6  128F               	bcf	15,5	;volatile
  3526                           
  3527                           ;OSCCON.c: 43:             OSCCONbits.IRCF0 = 0;
  3528  05E7  120F               	bcf	15,4	;volatile
  3529                           
  3530                           ;OSCCON.c: 44:             OSCCONbits.OSTS = 0;
  3531  05E8  118F               	bcf	15,3	;volatile
  3532                           
  3533                           ;OSCCON.c: 45:             OSCCONbits.HTS = 1;
  3534  05E9  150F               	bsf	15,2	;volatile
  3535                           
  3536                           ;OSCCON.c: 46:             OSCCONbits.LTS = 0;
  3537  05EA  108F               	bcf	15,1	;volatile
  3538                           
  3539                           ;OSCCON.c: 47:             OSCCONbits.SCS = 1;
  3540  05EB  140F               	bsf	15,0	;volatile
  3541                           
  3542                           ;OSCCON.c: 48:             break;
  3543  05EC  2E37               	goto	l140
  3544  05ED                     l136:	
  3545                           ;OSCCON.c: 49:         case 4:
  3546                           
  3547                           
  3548                           ;OSCCON.c: 50:             OSCCONbits.IRCF2 = 0;
  3549  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  3550  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  3551  05EF  130F               	bcf	15,6	;volatile
  3552                           
  3553                           ;OSCCON.c: 51:             OSCCONbits.IRCF1 = 1;
  3554  05F0  168F               	bsf	15,5	;volatile
  3555                           
  3556                           ;OSCCON.c: 52:             OSCCONbits.IRCF0 = 1;
  3557  05F1  160F               	bsf	15,4	;volatile
  3558                           
  3559                           ;OSCCON.c: 53:             OSCCONbits.OSTS = 0;
  3560  05F2  118F               	bcf	15,3	;volatile
  3561                           
  3562                           ;OSCCON.c: 54:             OSCCONbits.HTS = 1;
  3563  05F3  150F               	bsf	15,2	;volatile
  3564                           
  3565                           ;OSCCON.c: 55:             OSCCONbits.LTS = 0;
  3566  05F4  108F               	bcf	15,1	;volatile
  3567                           
  3568                           ;OSCCON.c: 56:             OSCCONbits.SCS = 1;
  3569  05F5  140F               	bsf	15,0	;volatile
  3570                           
  3571                           ;OSCCON.c: 57:             break;
  3572  05F6  2E37               	goto	l140
  3573  05F7                     l137:	
  3574                           ;OSCCON.c: 58:         case 5:
  3575                           
  3576                           
  3577                           ;OSCCON.c: 59:             OSCCONbits.IRCF2 = 0;
  3578  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3579  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3580  05F9  130F               	bcf	15,6	;volatile
  3581                           
  3582                           ;OSCCON.c: 60:             OSCCONbits.IRCF1 = 1;
  3583  05FA  168F               	bsf	15,5	;volatile
  3584                           
  3585                           ;OSCCON.c: 61:             OSCCONbits.IRCF0 = 0;
  3586  05FB  120F               	bcf	15,4	;volatile
  3587                           
  3588                           ;OSCCON.c: 62:             OSCCONbits.OSTS = 0;
  3589  05FC  118F               	bcf	15,3	;volatile
  3590                           
  3591                           ;OSCCON.c: 63:             OSCCONbits.HTS = 1;
  3592  05FD  150F               	bsf	15,2	;volatile
  3593                           
  3594                           ;OSCCON.c: 64:             OSCCONbits.LTS = 0;
  3595  05FE  108F               	bcf	15,1	;volatile
  3596                           
  3597                           ;OSCCON.c: 65:             OSCCONbits.SCS = 1;
  3598  05FF  140F               	bsf	15,0	;volatile
  3599                           
  3600                           ;OSCCON.c: 66:             break;
  3601  0600  2E37               	goto	l140
  3602  0601                     l138:	
  3603                           ;OSCCON.c: 67:         case 6:
  3604                           
  3605                           
  3606                           ;OSCCON.c: 68:             OSCCONbits.IRCF2 = 0;
  3607  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3609  0603  130F               	bcf	15,6	;volatile
  3610                           
  3611                           ;OSCCON.c: 69:             OSCCONbits.IRCF1 = 0;
  3612  0604  128F               	bcf	15,5	;volatile
  3613                           
  3614                           ;OSCCON.c: 70:             OSCCONbits.IRCF0 = 1;
  3615  0605  160F               	bsf	15,4	;volatile
  3616                           
  3617                           ;OSCCON.c: 71:             OSCCONbits.OSTS = 0;
  3618  0606  118F               	bcf	15,3	;volatile
  3619                           
  3620                           ;OSCCON.c: 72:             OSCCONbits.HTS = 1;
  3621  0607  150F               	bsf	15,2	;volatile
  3622                           
  3623                           ;OSCCON.c: 73:             OSCCONbits.LTS = 0;
  3624  0608  108F               	bcf	15,1	;volatile
  3625                           
  3626                           ;OSCCON.c: 74:             OSCCONbits.SCS = 1;
  3627  0609  140F               	bsf	15,0	;volatile
  3628                           
  3629                           ;OSCCON.c: 75:             break;
  3630  060A  2E37               	goto	l140
  3631  060B                     l139:	
  3632                           ;OSCCON.c: 76:         case 7:
  3633                           
  3634                           
  3635                           ;OSCCON.c: 77:             OSCCONbits.IRCF2 = 0;
  3636  060B  1683               	bsf	3,5	;RP0=1, select bank1
  3637  060C  1303               	bcf	3,6	;RP1=0, select bank1
  3638  060D  130F               	bcf	15,6	;volatile
  3639                           
  3640                           ;OSCCON.c: 78:             OSCCONbits.IRCF1 = 0;
  3641  060E  128F               	bcf	15,5	;volatile
  3642                           
  3643                           ;OSCCON.c: 79:             OSCCONbits.IRCF0 = 0;
  3644  060F  120F               	bcf	15,4	;volatile
  3645                           
  3646                           ;OSCCON.c: 80:             OSCCONbits.OSTS = 0;
  3647  0610  118F               	bcf	15,3	;volatile
  3648                           
  3649                           ;OSCCON.c: 81:             OSCCONbits.HTS = 0;
  3650  0611  110F               	bcf	15,2	;volatile
  3651                           
  3652                           ;OSCCON.c: 82:             OSCCONbits.LTS = 1;
  3653  0612  148F               	bsf	15,1	;volatile
  3654                           
  3655                           ;OSCCON.c: 83:             OSCCONbits.SCS = 1;
  3656  0613  140F               	bsf	15,0	;volatile
  3657                           
  3658                           ;OSCCON.c: 84:             break;
  3659  0614  2E37               	goto	l140
  3660  0615                     l1816:	
  3661  0615  0874               	movf	oscInit@freq,w
  3662  0616  00F2               	movwf	??_oscInit
  3663  0617  01F3               	clrf	??_oscInit+1
  3664                           
  3665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3666                           ; Switch size 1, requested type "simple"
  3667                           ; Number of cases is 1, Range of values is 0 to 0
  3668                           ; switch strategies available:
  3669                           ; Name         Instructions Cycles
  3670                           ; simple_byte            4     3 (average)
  3671                           ; direct_byte           11     8 (fixed)
  3672                           ; jumptable            260     6 (fixed)
  3673                           ;	Chosen strategy is simple_byte
  3674  0618  0873               	movf	??_oscInit+1,w
  3675  0619  3A00               	xorlw	0	; case 0
  3676  061A  1903               	skipnz
  3677  061B  2E1D               	goto	l2712
  3678  061C  2E37               	goto	l140
  3679  061D                     l2712:	
  3680                           
  3681                           ; Switch size 1, requested type "simple"
  3682                           ; Number of cases is 8, Range of values is 0 to 7
  3683                           ; switch strategies available:
  3684                           ; Name         Instructions Cycles
  3685                           ; simple_byte           25    13 (average)
  3686                           ; direct_byte           32     8 (fixed)
  3687                           ; jumptable            260     6 (fixed)
  3688                           ;	Chosen strategy is simple_byte
  3689  061D  0872               	movf	??_oscInit,w
  3690  061E  3A00               	xorlw	0	; case 0
  3691  061F  1903               	skipnz
  3692  0620  2DC5               	goto	l131
  3693  0621  3A01               	xorlw	1	; case 1
  3694  0622  1903               	skipnz
  3695  0623  2DCF               	goto	l133
  3696  0624  3A03               	xorlw	3	; case 2
  3697  0625  1903               	skipnz
  3698  0626  2DD9               	goto	l134
  3699  0627  3A01               	xorlw	1	; case 3
  3700  0628  1903               	skipnz
  3701  0629  2DE3               	goto	l135
  3702  062A  3A07               	xorlw	7	; case 4
  3703  062B  1903               	skipnz
  3704  062C  2DED               	goto	l136
  3705  062D  3A01               	xorlw	1	; case 5
  3706  062E  1903               	skipnz
  3707  062F  2DF7               	goto	l137
  3708  0630  3A03               	xorlw	3	; case 6
  3709  0631  1903               	skipnz
  3710  0632  2E01               	goto	l138
  3711  0633  3A01               	xorlw	1	; case 7
  3712  0634  1903               	skipnz
  3713  0635  2E0B               	goto	l139
  3714  0636  2E37               	goto	l140
  3715  0637                     l140:	
  3716  0637  0008               	return
  3717  0638                     __end_of_oscInit:	
  3718                           
  3719                           	psect	text11
  3720  052F                     __ptext11:	
  3721 ;; *************** function _mpu6050_init *****************
  3722 ;; Defined at:
  3723 ;;		line 20 in file "MPU6050.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, pclath, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3737 ;;      Params:         0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0
  3739 ;;      Temps:          2       0       0       0       0
  3740 ;;      Totals:         2       0       0       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    4
  3744 ;; This function calls:
  3745 ;;		_i2c_addr_start
  3746 ;;		_i2c_masterStop
  3747 ;;		_i2c_masterWrite
  3748 ;; This function is called by:
  3749 ;;		_main
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _mpu6050_init
  3755  052F                     _mpu6050_init:	
  3756  052F                     l1882:	
  3757                           ;incstack = 0
  3758                           ; Regs used in _mpu6050_init: [wreg+status,2+status,0+pclath+cstack]
  3759                           
  3760                           
  3761                           ;MPU6050.c: 22:   _delay((unsigned long)((100)*(4000000/4000.0)));
  3762  052F  3082               	movlw	130
  3763  0530  00F5               	movwf	??_mpu6050_init+1
  3764  0531  30DD               	movlw	221
  3765  0532  00F4               	movwf	??_mpu6050_init
  3766  0533                     u1467:	
  3767  0533  0BF4               	decfsz	??_mpu6050_init,f
  3768  0534  2D33               	goto	u1467
  3769  0535  0BF5               	decfsz	??_mpu6050_init+1,f
  3770  0536  2D33               	goto	u1467
  3771  0537  2D38               	nop2
  3772  0538                     l1884:	
  3773                           
  3774                           ;MPU6050.c: 26:     i2c_addr_start(0xD0);
  3775  0538  30D0               	movlw	208
  3776  0539  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  3777  053E                     l1886:	
  3778                           
  3779                           ;MPU6050.c: 27:     i2c_masterWrite(0x19);
  3780  053E  3019               	movlw	25
  3781  053F  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3782  0544                     l1888:	
  3783                           
  3784                           ;MPU6050.c: 28:     i2c_masterWrite(0x07);
  3785  0544  3007               	movlw	7
  3786  0545  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3787  054A                     l1890:	
  3788                           
  3789                           ;MPU6050.c: 29:     i2c_masterStop();
  3790  054A  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  3791  054F                     l1892:	
  3792                           
  3793                           ;MPU6050.c: 32:     i2c_addr_start(0xD0);
  3794  054F  30D0               	movlw	208
  3795  0550  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  3796  0555                     l1894:	
  3797                           
  3798                           ;MPU6050.c: 33:     i2c_masterWrite(0x6B);
  3799  0555  306B               	movlw	107
  3800  0556  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3801  055B                     l1896:	
  3802                           
  3803                           ;MPU6050.c: 34:     i2c_masterWrite(0x00);
  3804  055B  3000               	movlw	0
  3805  055C  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3806  0561                     l1898:	
  3807                           
  3808                           ;MPU6050.c: 35:     i2c_masterStop();
  3809  0561  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  3810  0566                     l1900:	
  3811                           
  3812                           ;MPU6050.c: 38:     i2c_addr_start(0xD0);
  3813  0566  30D0               	movlw	208
  3814  0567  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  3815  056C                     l1902:	
  3816                           
  3817                           ;MPU6050.c: 39:     i2c_masterWrite(0x1A);
  3818  056C  301A               	movlw	26
  3819  056D  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3820  0572                     l1904:	
  3821                           
  3822                           ;MPU6050.c: 40:     i2c_masterWrite(0x00);
  3823  0572  3000               	movlw	0
  3824  0573  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3825  0578                     l1906:	
  3826                           
  3827                           ;MPU6050.c: 41:     i2c_masterStop();
  3828  0578  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  3829  057D                     l1908:	
  3830                           
  3831                           ;MPU6050.c: 44:     i2c_addr_start(0xD0);
  3832  057D  30D0               	movlw	208
  3833  057E  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  3834  0583                     l1910:	
  3835                           
  3836                           ;MPU6050.c: 45:     i2c_masterWrite(0x1C);
  3837  0583  301C               	movlw	28
  3838  0584  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3839  0589                     l1912:	
  3840                           
  3841                           ;MPU6050.c: 46:     i2c_masterWrite(0x00);
  3842  0589  3000               	movlw	0
  3843  058A  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3844  058F                     l1914:	
  3845                           
  3846                           ;MPU6050.c: 47:     i2c_masterStop();
  3847  058F  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  3848  0594                     l1916:	
  3849                           
  3850                           ;MPU6050.c: 50:     i2c_addr_start(0xD0);
  3851  0594  30D0               	movlw	208
  3852  0595  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  3853  059A                     l1918:	
  3854                           
  3855                           ;MPU6050.c: 51:     i2c_masterWrite(0x1B);
  3856  059A  301B               	movlw	27
  3857  059B  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3858  05A0                     l1920:	
  3859                           
  3860                           ;MPU6050.c: 52:     i2c_masterWrite(0x12);
  3861  05A0  3012               	movlw	18
  3862  05A1  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3863  05A6                     l1922:	
  3864                           
  3865                           ;MPU6050.c: 53:     i2c_masterStop();
  3866  05A6  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  3867  05AB                     l1924:	
  3868                           
  3869                           ;MPU6050.c: 56:     i2c_addr_start(0xD0);
  3870  05AB  30D0               	movlw	208
  3871  05AC  120A  158A  26DF  120A  118A  	fcall	_i2c_addr_start
  3872  05B1                     l1926:	
  3873                           
  3874                           ;MPU6050.c: 57:     i2c_masterWrite(0x38);
  3875  05B1  3038               	movlw	56
  3876  05B2  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3877  05B7                     l1928:	
  3878                           
  3879                           ;MPU6050.c: 58:     i2c_masterWrite(0x01);
  3880  05B7  3001               	movlw	1
  3881  05B8  120A  158A  26AB  120A  118A  	fcall	_i2c_masterWrite
  3882  05BD                     l1930:	
  3883                           
  3884                           ;MPU6050.c: 59:     i2c_masterStop();
  3885  05BD  120A  158A  26A2  120A  118A  	fcall	_i2c_masterStop
  3886  05C2                     l269:	
  3887  05C2  0008               	return
  3888  05C3                     __end_of_mpu6050_init:	
  3889                           
  3890                           	psect	text12
  3891  0EA2                     __ptext12:	
  3892 ;; *************** function _i2c_masterStop *****************
  3893 ;; Defined at:
  3894 ;;		line 41 in file "I2C.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;		None
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;		None
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0, pclath, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3908 ;;      Params:         0       0       0       0       0
  3909 ;;      Locals:         0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0
  3911 ;;      Totals:         0       0       0       0       0
  3912 ;;Total ram usage:        0 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    2
  3915 ;; This function calls:
  3916 ;;		_i2c_masterWait
  3917 ;; This function is called by:
  3918 ;;		_main
  3919 ;;		_mpu6050_init
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           
  3924                           ;psect for function _i2c_masterStop
  3925  0EA2                     _i2c_masterStop:	
  3926  0EA2                     l1674:	
  3927                           ;incstack = 0
  3928                           ; Regs used in _i2c_masterStop: [wreg+status,2+status,0+pclath+cstack]
  3929                           
  3930                           
  3931                           ;I2C.c: 42:     i2c_masterWait();
  3932  0EA2  120A  158A  26C2  120A  158A  	fcall	_i2c_masterWait
  3933  0EA7                     l1676:	
  3934                           
  3935                           ;I2C.c: 43:     SSPCON2bits.PEN = 1;
  3936  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  3937  0EA8  1303               	bcf	3,6	;RP1=0, select bank1
  3938  0EA9  1511               	bsf	17,2	;volatile
  3939  0EAA                     l246:	
  3940  0EAA  0008               	return
  3941  0EAB                     __end_of_i2c_masterStop:	
  3942                           
  3943                           	psect	text13
  3944  0EDF                     __ptext13:	
  3945 ;; *************** function _i2c_addr_start *****************
  3946 ;; Defined at:
  3947 ;;		line 30 in file "I2C.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  addr            1    wreg     unsigned char 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  addr            1    3[COMMON] unsigned char 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0, pclath, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       0       0       0       0
  3962 ;;      Locals:         1       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0
  3964 ;;      Totals:         1       0       0       0       0
  3965 ;;Total ram usage:        1 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    3
  3968 ;; This function calls:
  3969 ;;		_i2c_masterWait
  3970 ;;		_i2c_masterWrite
  3971 ;; This function is called by:
  3972 ;;		_main
  3973 ;;		_mpu6050_init
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function _i2c_addr_start
  3979  0EDF                     _i2c_addr_start:	
  3980                           
  3981                           ;incstack = 0
  3982                           ; Regs used in _i2c_addr_start: [wreg+status,2+status,0+pclath+cstack]
  3983                           ;i2c_addr_start@addr stored from wreg
  3984  0EDF  00F3               	movwf	i2c_addr_start@addr
  3985  0EE0                     l1670:	
  3986                           
  3987                           ;I2C.c: 31:     i2c_masterWait();
  3988  0EE0  120A  158A  26C2  120A  158A  	fcall	_i2c_masterWait
  3989  0EE5                     l1672:	
  3990                           
  3991                           ;I2C.c: 32:     SSPCON2bits.SEN = 1;
  3992  0EE5  1683               	bsf	3,5	;RP0=1, select bank1
  3993  0EE6  1303               	bcf	3,6	;RP1=0, select bank1
  3994  0EE7  1411               	bsf	17,0	;volatile
  3995                           
  3996                           ;I2C.c: 33:     i2c_masterWrite(addr);
  3997  0EE8  0873               	movf	i2c_addr_start@addr,w
  3998  0EE9  120A  158A  26AB  120A  158A  	fcall	_i2c_masterWrite
  3999  0EEE                     l240:	
  4000  0EEE  0008               	return
  4001  0EEF                     __end_of_i2c_addr_start:	
  4002                           
  4003                           	psect	text14
  4004  0EAB                     __ptext14:	
  4005 ;; *************** function _i2c_masterWrite *****************
  4006 ;; Defined at:
  4007 ;;		line 54 in file "I2C.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  data            1    wreg     unsigned char 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  data            1    2[COMMON] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0, pclath, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4021 ;;      Params:         0       0       0       0       0
  4022 ;;      Locals:         1       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0
  4024 ;;      Totals:         1       0       0       0       0
  4025 ;;Total ram usage:        1 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    2
  4028 ;; This function calls:
  4029 ;;		_i2c_masterWait
  4030 ;; This function is called by:
  4031 ;;		_main
  4032 ;;		_i2c_addr_start
  4033 ;;		_mpu6050_init
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function _i2c_masterWrite
  4039  0EAB                     _i2c_masterWrite:	
  4040                           
  4041                           ;incstack = 0
  4042                           ; Regs used in _i2c_masterWrite: [wreg+status,2+status,0+pclath+cstack]
  4043                           ;i2c_masterWrite@data stored from wreg
  4044  0EAB  00F2               	movwf	i2c_masterWrite@data
  4045  0EAC                     l1656:	
  4046                           
  4047                           ;I2C.c: 55:     i2c_masterWait();
  4048  0EAC  120A  158A  26C2  120A  158A  	fcall	_i2c_masterWait
  4049  0EB1                     l1658:	
  4050                           
  4051                           ;I2C.c: 56:     SSPBUF = data;
  4052  0EB1  0872               	movf	i2c_masterWrite@data,w
  4053  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  4054  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  4055  0EB4  0093               	movwf	19	;volatile
  4056  0EB5                     l249:	
  4057  0EB5  0008               	return
  4058  0EB6                     __end_of_i2c_masterWrite:	
  4059                           
  4060                           	psect	text15
  4061  07E4                     __ptext15:	
  4062 ;; *************** function _lcd8_setCursor *****************
  4063 ;; Defined at:
  4064 ;;		line 62 in file "LCD.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  fila            1    wreg     unsigned char 
  4067 ;;  columna         1    5[COMMON] unsigned char 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  fila            1    6[COMMON] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         1       0       0       0       0
  4080 ;;      Locals:         1       0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0
  4082 ;;      Totals:         2       0       0       0       0
  4083 ;;Total ram usage:        2 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    3
  4086 ;; This function calls:
  4087 ;;		_lcd8_cmd
  4088 ;; This function is called by:
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function _lcd8_setCursor
  4095  07E4                     _lcd8_setCursor:	
  4096                           
  4097                           ;incstack = 0
  4098                           ; Regs used in _lcd8_setCursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4099                           ;lcd8_setCursor@fila stored from wreg
  4100  07E4  00F6               	movwf	lcd8_setCursor@fila
  4101  07E5                     l2052:	
  4102                           
  4103                           ;LCD.c: 63:     if (fila == 1){
  4104  07E5  0376               	decf	lcd8_setCursor@fila,w
  4105  07E6  1D03               	btfss	3,2
  4106  07E7  2FE9               	goto	u981
  4107  07E8  2FEA               	goto	u980
  4108  07E9                     u981:	
  4109  07E9  2FF2               	goto	l2056
  4110  07EA                     u980:	
  4111  07EA                     l2054:	
  4112                           
  4113                           ;LCD.c: 64:         lcd8_cmd(0x80 + columna);
  4114  07EA  0875               	movf	lcd8_setCursor@columna,w
  4115  07EB  3E80               	addlw	128
  4116  07EC  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4117                           
  4118                           ;LCD.c: 65:     }
  4119  07F1  2FFF               	goto	l174
  4120  07F2                     l2056:	
  4121  07F2  3002               	movlw	2
  4122  07F3  0676               	xorwf	lcd8_setCursor@fila,w
  4123  07F4  1D03               	btfss	3,2
  4124  07F5  2FF7               	goto	u991
  4125  07F6  2FF8               	goto	u990
  4126  07F7                     u991:	
  4127  07F7  2FFF               	goto	l174
  4128  07F8                     u990:	
  4129  07F8                     l2058:	
  4130                           
  4131                           ;LCD.c: 67:         lcd8_cmd(0xC0 + columna);
  4132  07F8  0875               	movf	lcd8_setCursor@columna,w
  4133  07F9  3EC0               	addlw	192
  4134  07FA  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4135  07FF                     l174:	
  4136  07FF  0008               	return
  4137  0800                     __end_of_lcd8_setCursor:	
  4138                           
  4139                           	psect	text16
  4140  06A0                     __ptext16:	
  4141 ;; *************** function _lcd8_init *****************
  4142 ;; Defined at:
  4143 ;;		line 18 in file "LCD.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0
  4159 ;;      Temps:          2       0       0       0       0
  4160 ;;      Totals:         2       0       0       0       0
  4161 ;;Total ram usage:        2 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    3
  4164 ;; This function calls:
  4165 ;;		_lcd8_cmd
  4166 ;; This function is called by:
  4167 ;;		_main
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           
  4172                           ;psect for function _lcd8_init
  4173  06A0                     _lcd8_init:	
  4174  06A0                     l1932:	
  4175                           ;incstack = 0
  4176                           ; Regs used in _lcd8_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4177                           
  4178                           
  4179                           ;LCD.c: 19:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4180  06A0  301A               	movlw	26
  4181  06A1  00F6               	movwf	??_lcd8_init+1
  4182  06A2  30F8               	movlw	248
  4183  06A3  00F5               	movwf	??_lcd8_init
  4184  06A4                     u1477:	
  4185  06A4  0BF5               	decfsz	??_lcd8_init,f
  4186  06A5  2EA4               	goto	u1477
  4187  06A6  0BF6               	decfsz	??_lcd8_init+1,f
  4188  06A7  2EA4               	goto	u1477
  4189  06A8  0000               	nop
  4190  06A9                     l1934:	
  4191                           
  4192                           ;LCD.c: 20:     lcd8_cmd(0x30);
  4193  06A9  3030               	movlw	48
  4194  06AA  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4195  06AF                     l1936:	
  4196                           
  4197                           ;LCD.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4198  06AF  3007               	movlw	7
  4199  06B0  00F6               	movwf	??_lcd8_init+1
  4200  06B1  307D               	movlw	125
  4201  06B2  00F5               	movwf	??_lcd8_init
  4202  06B3                     u1487:	
  4203  06B3  0BF5               	decfsz	??_lcd8_init,f
  4204  06B4  2EB3               	goto	u1487
  4205  06B5  0BF6               	decfsz	??_lcd8_init+1,f
  4206  06B6  2EB3               	goto	u1487
  4207                           
  4208                           ;LCD.c: 22:     lcd8_cmd(0x30);
  4209  06B7  3030               	movlw	48
  4210  06B8  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4211  06BD                     l1938:	
  4212                           
  4213                           ;LCD.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4214  06BD  30C7               	movlw	199
  4215  06BE  00F5               	movwf	??_lcd8_init
  4216  06BF                     u1497:	
  4217  06BF  2EC0               	nop2
  4218  06C0  0BF5               	decfsz	??_lcd8_init,f
  4219  06C1  2EBF               	goto	u1497
  4220  06C2  2EC3               	nop2
  4221  06C3  2EC4               	nop2
  4222  06C4                     l1940:	
  4223                           
  4224                           ;LCD.c: 24:     lcd8_cmd(0x30);
  4225  06C4  3030               	movlw	48
  4226  06C5  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4227                           
  4228                           ;LCD.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4229  06CA  30C7               	movlw	199
  4230  06CB  00F5               	movwf	??_lcd8_init
  4231  06CC                     u1507:	
  4232  06CC  2ECD               	nop2
  4233  06CD  0BF5               	decfsz	??_lcd8_init,f
  4234  06CE  2ECC               	goto	u1507
  4235  06CF  2ED0               	nop2
  4236  06D0  2ED1               	nop2
  4237  06D1                     l1942:	
  4238                           
  4239                           ;LCD.c: 26:     lcd8_cmd(0x38);
  4240  06D1  3038               	movlw	56
  4241  06D2  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4242  06D7                     l1944:	
  4243                           
  4244                           ;LCD.c: 27:     lcd8_cmd(0x10);
  4245  06D7  3010               	movlw	16
  4246  06D8  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4247  06DD                     l1946:	
  4248                           
  4249                           ;LCD.c: 28:     lcd8_cmd(0x01);
  4250  06DD  3001               	movlw	1
  4251  06DE  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4252  06E3                     l1948:	
  4253                           
  4254                           ;LCD.c: 29:     lcd8_cmd(0x06);
  4255  06E3  3006               	movlw	6
  4256  06E4  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4257  06E9                     l1950:	
  4258                           
  4259                           ;LCD.c: 30:     lcd8_cmd(0x0C);
  4260  06E9  300C               	movlw	12
  4261  06EA  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4262  06EF                     l1952:	
  4263                           
  4264                           ;LCD.c: 31:     lcd8_cmd(0x80);
  4265  06EF  3080               	movlw	128
  4266  06F0  120A  158A  26EF  120A  118A  	fcall	_lcd8_cmd
  4267  06F5                     l153:	
  4268  06F5  0008               	return
  4269  06F6                     __end_of_lcd8_init:	
  4270                           
  4271                           	psect	text17
  4272  0EEF                     __ptext17:	
  4273 ;; *************** function _lcd8_cmd *****************
  4274 ;; Defined at:
  4275 ;;		line 34 in file "LCD.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  cmd             1    wreg     unsigned char 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  cmd             1    4[COMMON] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4289 ;;      Params:         0       0       0       0       0
  4290 ;;      Locals:         1       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0
  4292 ;;      Totals:         1       0       0       0       0
  4293 ;;Total ram usage:        1 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    2
  4296 ;; This function calls:
  4297 ;;		_delay_1ms
  4298 ;; This function is called by:
  4299 ;;		_lcd8_init
  4300 ;;		_lcd8_setCursor
  4301 ;;		_lcd8_clearDisplay
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           
  4306                           ;psect for function _lcd8_cmd
  4307  0EEF                     _lcd8_cmd:	
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in _lcd8_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4311                           ;lcd8_cmd@cmd stored from wreg
  4312  0EEF  00F4               	movwf	lcd8_cmd@cmd
  4313  0EF0                     l1678:	
  4314                           
  4315                           ;LCD.c: 35:     PORTA = cmd;
  4316  0EF0  0874               	movf	lcd8_cmd@cmd,w
  4317  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  4318  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  4319  0EF3  0085               	movwf	5	;volatile
  4320  0EF4                     l1680:	
  4321                           
  4322                           ;LCD.c: 36:     PORTEbits.RE0 = 0;
  4323  0EF4  1009               	bcf	9,0	;volatile
  4324  0EF5                     l1682:	
  4325                           
  4326                           ;LCD.c: 37:     PORTEbits.RE1 = 0;
  4327  0EF5  1089               	bcf	9,1	;volatile
  4328  0EF6                     l1684:	
  4329                           
  4330                           ;LCD.c: 38:     PORTEbits.RE2 = 1;
  4331  0EF6  1509               	bsf	9,2	;volatile
  4332  0EF7                     l1686:	
  4333                           
  4334                           ;LCD.c: 39:     delay_1ms();
  4335  0EF7  120A  158A  2726  120A  158A  	fcall	_delay_1ms
  4336  0EFC                     l1688:	
  4337                           
  4338                           ;LCD.c: 40:     PORTEbits.RE2 = 0;
  4339  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  4341  0EFE  1109               	bcf	9,2	;volatile
  4342  0EFF                     l156:	
  4343  0EFF  0008               	return
  4344  0F00                     __end_of_lcd8_cmd:	
  4345                           
  4346                           	psect	text18
  4347  0FA7                     __ptext18:	
  4348 ;; *************** function _lcd8_dispString *****************
  4349 ;; Defined at:
  4350 ;;		line 52 in file "LCD.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  value           2    6[COMMON] PTR unsigned char 
  4353 ;;		 -> STR_9(4), main@A(10), STR_7(4), main@G(10), 
  4354 ;;		 -> STR_5(3), main@F(5), STR_3(3), STR_2(3), 
  4355 ;;		 -> main@D(5), 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         2       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0
  4369 ;;      Temps:          2       0       0       0       0
  4370 ;;      Totals:         4       0       0       0       0
  4371 ;;Total ram usage:        4 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    3
  4374 ;; This function calls:
  4375 ;;		_lcd8_write
  4376 ;; This function is called by:
  4377 ;;		_main
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           
  4382                           ;psect for function _lcd8_dispString
  4383  0FA7                     _lcd8_dispString:	
  4384  0FA7                     l2060:	
  4385                           ;incstack = 0
  4386                           ; Regs used in _lcd8_dispString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4387                           
  4388                           
  4389                           ;LCD.c: 53:     while(*value){
  4390  0FA7  2FC2               	goto	l2066
  4391  0FA8                     l2062:	
  4392                           
  4393                           ;LCD.c: 54:         lcd8_write(*value++);
  4394  0FA8  0877               	movf	lcd8_dispString@value+1,w
  4395  0FA9  00FF               	movwf	btemp+1
  4396  0FAA  0876               	movf	lcd8_dispString@value,w
  4397  0FAB  0084               	movwf	4
  4398  0FAC  120A  158A  2000  120A  158A  	fcall	stringtab
  4399  0FB1  00F8               	movwf	??_lcd8_dispString
  4400  0FB2  01F9               	clrf	??_lcd8_dispString+1
  4401  0FB3  0878               	movf	??_lcd8_dispString,w
  4402  0FB4  00F4               	movwf	lcd8_write@dat
  4403  0FB5  0879               	movf	??_lcd8_dispString+1,w
  4404  0FB6  00F5               	movwf	lcd8_write@dat+1
  4405  0FB7  120A  158A  26CF  120A  158A  	fcall	_lcd8_write
  4406  0FBC                     l2064:	
  4407  0FBC  3001               	movlw	1
  4408  0FBD  07F6               	addwf	lcd8_dispString@value,f
  4409  0FBE  1803               	skipnc
  4410  0FBF  0AF7               	incf	lcd8_dispString@value+1,f
  4411  0FC0  3000               	movlw	0
  4412  0FC1  07F7               	addwf	lcd8_dispString@value+1,f
  4413  0FC2                     l2066:	
  4414                           
  4415                           ;LCD.c: 53:     while(*value){
  4416  0FC2  0877               	movf	lcd8_dispString@value+1,w
  4417  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  4418  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  4419  0FC5  00FF               	movwf	btemp+1
  4420  0FC6  0876               	movf	lcd8_dispString@value,w
  4421  0FC7  0084               	movwf	4
  4422  0FC8  120A  158A  2000  120A  158A  	fcall	stringtab
  4423  0FCD  3A00               	xorlw	0
  4424  0FCE  1D03               	skipz
  4425  0FCF  2FD1               	goto	u1001
  4426  0FD0  2FD2               	goto	u1000
  4427  0FD1                     u1001:	
  4428  0FD1  2FA8               	goto	l2062
  4429  0FD2                     u1000:	
  4430  0FD2                     l165:	
  4431  0FD2  0008               	return
  4432  0FD3                     __end_of_lcd8_dispString:	
  4433                           
  4434                           	psect	text19
  4435  0ECF                     __ptext19:	
  4436 ;; *************** function _lcd8_write *****************
  4437 ;; Defined at:
  4438 ;;		line 43 in file "LCD.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  dat             2    4[COMMON] unsigned int 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4452 ;;      Params:         2       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0
  4455 ;;      Totals:         2       0       0       0       0
  4456 ;;Total ram usage:        2 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    2
  4459 ;; This function calls:
  4460 ;;		_delay_1ms
  4461 ;; This function is called by:
  4462 ;;		_lcd8_dispString
  4463 ;;		_lcd8_dispChar
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           
  4468                           ;psect for function _lcd8_write
  4469  0ECF                     _lcd8_write:	
  4470  0ECF                     l1690:	
  4471                           ;incstack = 0
  4472                           ; Regs used in _lcd8_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4473                           
  4474                           
  4475                           ;LCD.c: 44:     PORTA = dat;
  4476  0ECF  0874               	movf	lcd8_write@dat,w
  4477  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  4478  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  4479  0ED2  0085               	movwf	5	;volatile
  4480  0ED3                     l1692:	
  4481                           
  4482                           ;LCD.c: 45:     PORTEbits.RE0 = 1;
  4483  0ED3  1409               	bsf	9,0	;volatile
  4484  0ED4                     l1694:	
  4485                           
  4486                           ;LCD.c: 46:     PORTEbits.RE1 = 0;
  4487  0ED4  1089               	bcf	9,1	;volatile
  4488  0ED5                     l1696:	
  4489                           
  4490                           ;LCD.c: 47:     PORTEbits.RE2 = 1;
  4491  0ED5  1509               	bsf	9,2	;volatile
  4492  0ED6                     l1698:	
  4493                           
  4494                           ;LCD.c: 48:     delay_1ms();
  4495  0ED6  120A  158A  2726  120A  158A  	fcall	_delay_1ms
  4496  0EDB                     l1700:	
  4497                           
  4498                           ;LCD.c: 49:     PORTEbits.RE2 = 0;
  4499  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0EDD  1109               	bcf	9,2	;volatile
  4502  0EDE                     l159:	
  4503  0EDE  0008               	return
  4504  0EDF                     __end_of_lcd8_write:	
  4505                           
  4506                           	psect	text20
  4507  0F26                     __ptext20:	
  4508 ;; *************** function _delay_1ms *****************
  4509 ;; Defined at:
  4510 ;;		line 75 in file "LCD.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  i               2    2[COMMON] int 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, btemp+1
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4524 ;;      Params:         0       0       0       0       0
  4525 ;;      Locals:         2       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0
  4527 ;;      Totals:         2       0       0       0       0
  4528 ;;Total ram usage:        2 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    1
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_main
  4535 ;;		_lcd8_cmd
  4536 ;;		_lcd8_write
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _delay_1ms
  4542  0F26                     _delay_1ms:	
  4543  0F26                     l1660:	
  4544                           ;incstack = 0
  4545                           ; Regs used in _delay_1ms: [wreg+status,2+btemp+1]
  4546                           
  4547                           
  4548                           ;LCD.c: 76:     for (int i = 0; i < 50; i++);
  4549  0F26  01F2               	clrf	delay_1ms@i
  4550  0F27  01F3               	clrf	delay_1ms@i+1
  4551  0F28                     l1666:	
  4552  0F28  3001               	movlw	1
  4553  0F29  07F2               	addwf	delay_1ms@i,f
  4554  0F2A  1803               	skipnc
  4555  0F2B  0AF3               	incf	delay_1ms@i+1,f
  4556  0F2C  3000               	movlw	0
  4557  0F2D  07F3               	addwf	delay_1ms@i+1,f
  4558  0F2E                     l1668:	
  4559  0F2E  0873               	movf	delay_1ms@i+1,w
  4560  0F2F  3A80               	xorlw	128
  4561  0F30  00FF               	movwf	btemp+1
  4562  0F31  3080               	movlw	128
  4563  0F32  027F               	subwf	btemp+1,w
  4564  0F33  1D03               	skipz
  4565  0F34  2F37               	goto	u585
  4566  0F35  3032               	movlw	50
  4567  0F36  0272               	subwf	delay_1ms@i,w
  4568  0F37                     u585:	
  4569  0F37  1C03               	skipc
  4570  0F38  2F3A               	goto	u581
  4571  0F39  2F3B               	goto	u580
  4572  0F3A                     u581:	
  4573  0F3A  2F28               	goto	l1666
  4574  0F3B                     u580:	
  4575  0F3B                     l182:	
  4576  0F3B  0008               	return
  4577  0F3C                     __end_of_delay_1ms:	
  4578                           
  4579                           	psect	text21
  4580  0776                     __ptext21:	
  4581 ;; *************** function _i2c_master_init *****************
  4582 ;; Defined at:
  4583 ;;		line 12 in file "I2C.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  c               4    5[BANK0 ] unsigned long 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4597 ;;      Params:         0       4       0       0       0
  4598 ;;      Locals:         0       0       0       0       0
  4599 ;;      Temps:          0       4       0       0       0
  4600 ;;      Totals:         0       8       0       0       0
  4601 ;;Total ram usage:        8 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    2
  4604 ;; This function calls:
  4605 ;;		___lldiv
  4606 ;; This function is called by:
  4607 ;;		_main
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _i2c_master_init
  4613  0776                     _i2c_master_init:	
  4614  0776                     l1870:	
  4615                           ;incstack = 0
  4616                           ; Regs used in _i2c_master_init: [wreg+status,2+status,0+pclath+cstack]
  4617                           
  4618                           
  4619                           ;I2C.c: 13:     SSPCON = 0b00101000;
  4620  0776  3028               	movlw	40
  4621  0777  1283               	bcf	3,5	;RP0=0, select bank0
  4622  0778  1303               	bcf	3,6	;RP1=0, select bank0
  4623  0779  0094               	movwf	20	;volatile
  4624  077A                     l1872:	
  4625                           
  4626                           ;I2C.c: 14:     SSPCON2 = 0;
  4627  077A  1683               	bsf	3,5	;RP0=1, select bank1
  4628  077B  1303               	bcf	3,6	;RP1=0, select bank1
  4629  077C  0191               	clrf	17	;volatile
  4630  077D                     l1874:	
  4631                           
  4632                           ;I2C.c: 15:     SSPADD = (4000000/(4*c))-1;
  4633  077D  1283               	bcf	3,5	;RP0=0, select bank0
  4634  077E  1303               	bcf	3,6	;RP1=0, select bank0
  4635  077F  0825               	movf	i2c_master_init@c,w
  4636  0780  00A9               	movwf	??_i2c_master_init
  4637  0781  0826               	movf	i2c_master_init@c+1,w
  4638  0782  00AA               	movwf	??_i2c_master_init+1
  4639  0783  0827               	movf	i2c_master_init@c+2,w
  4640  0784  00AB               	movwf	??_i2c_master_init+2
  4641  0785  0828               	movf	i2c_master_init@c+3,w
  4642  0786  00AC               	movwf	??_i2c_master_init+3
  4643  0787  3002               	movlw	2
  4644  0788                     u855:	
  4645  0788  1003               	clrc
  4646  0789  0DA9               	rlf	??_i2c_master_init,f
  4647  078A  0DAA               	rlf	??_i2c_master_init+1,f
  4648  078B  0DAB               	rlf	??_i2c_master_init+2,f
  4649  078C  0DAC               	rlf	??_i2c_master_init+3,f
  4650  078D                     u850:	
  4651  078D  3EFF               	addlw	-1
  4652  078E  1D03               	skipz
  4653  078F  2F88               	goto	u855
  4654  0790  082C               	movf	??_i2c_master_init+3,w
  4655  0791  00F5               	movwf	___lldiv@divisor+3
  4656  0792  082B               	movf	??_i2c_master_init+2,w
  4657  0793  00F4               	movwf	___lldiv@divisor+2
  4658  0794  082A               	movf	??_i2c_master_init+1,w
  4659  0795  00F3               	movwf	___lldiv@divisor+1
  4660  0796  0829               	movf	??_i2c_master_init,w
  4661  0797  00F2               	movwf	___lldiv@divisor
  4662  0798  3000               	movlw	0
  4663  0799  00F9               	movwf	___lldiv@dividend+3
  4664  079A  303D               	movlw	61
  4665  079B  00F8               	movwf	___lldiv@dividend+2
  4666  079C  3009               	movlw	9
  4667  079D  00F7               	movwf	___lldiv@dividend+1
  4668  079E  3000               	movlw	0
  4669  079F  00F6               	movwf	___lldiv@dividend
  4670  07A0  120A  118A  2638  120A  118A  	fcall	___lldiv
  4671  07A5  0872               	movf	?___lldiv,w
  4672  07A6  3EFF               	addlw	255
  4673  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  4674  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  4675  07A9  0093               	movwf	19	;volatile
  4676  07AA                     l1876:	
  4677                           
  4678                           ;I2C.c: 16:     SSPSTAT = 0;
  4679  07AA  0194               	clrf	20	;volatile
  4680  07AB                     l1878:	
  4681                           
  4682                           ;I2C.c: 17:     TRISCbits.TRISC3 = 1;
  4683  07AB  1587               	bsf	7,3	;volatile
  4684  07AC                     l1880:	
  4685                           
  4686                           ;I2C.c: 18:     TRISCbits.TRISC4 = 1;
  4687  07AC  1607               	bsf	7,4	;volatile
  4688  07AD                     l228:	
  4689  07AD  0008               	return
  4690  07AE                     __end_of_i2c_master_init:	
  4691                           
  4692                           	psect	text22
  4693  0638                     __ptext22:	
  4694 ;; *************** function ___lldiv *****************
  4695 ;; Defined at:
  4696 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  divisor         4    2[COMMON] unsigned long 
  4699 ;;  dividend        4    6[COMMON] unsigned long 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  quotient        4    0[BANK0 ] unsigned long 
  4702 ;;  counter         1    4[BANK0 ] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  4    2[COMMON] unsigned long 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4712 ;;      Params:         8       0       0       0       0
  4713 ;;      Locals:         0       5       0       0       0
  4714 ;;      Temps:          1       0       0       0       0
  4715 ;;      Totals:         9       5       0       0       0
  4716 ;;Total ram usage:       14 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    1
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_i2c_master_init
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           
  4727                           ;psect for function ___lldiv
  4728  0638                     ___lldiv:	
  4729  0638                     l1728:	
  4730                           ;incstack = 0
  4731                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4732                           
  4733  0638  3000               	movlw	0
  4734  0639  1283               	bcf	3,5	;RP0=0, select bank0
  4735  063A  1303               	bcf	3,6	;RP1=0, select bank0
  4736  063B  00A3               	movwf	___lldiv@quotient+3
  4737  063C  3000               	movlw	0
  4738  063D  00A2               	movwf	___lldiv@quotient+2
  4739  063E  3000               	movlw	0
  4740  063F  00A1               	movwf	___lldiv@quotient+1
  4741  0640  3000               	movlw	0
  4742  0641  00A0               	movwf	___lldiv@quotient
  4743  0642  0875               	movf	___lldiv@divisor+3,w
  4744  0643  0474               	iorwf	___lldiv@divisor+2,w
  4745  0644  0473               	iorwf	___lldiv@divisor+1,w
  4746  0645  0472               	iorwf	___lldiv@divisor,w
  4747  0646  1903               	skipnz
  4748  0647  2E49               	goto	u651
  4749  0648  2E4A               	goto	u650
  4750  0649                     u651:	
  4751  0649  2E97               	goto	l1748
  4752  064A                     u650:	
  4753  064A                     l1730:	
  4754  064A  01A4               	clrf	___lldiv@counter
  4755  064B  0AA4               	incf	___lldiv@counter,f
  4756  064C  2E5A               	goto	l1734
  4757  064D                     l1732:	
  4758  064D  3001               	movlw	1
  4759  064E  00FA               	movwf	??___lldiv
  4760  064F                     u665:	
  4761  064F  1003               	clrc
  4762  0650  0DF2               	rlf	___lldiv@divisor,f
  4763  0651  0DF3               	rlf	___lldiv@divisor+1,f
  4764  0652  0DF4               	rlf	___lldiv@divisor+2,f
  4765  0653  0DF5               	rlf	___lldiv@divisor+3,f
  4766  0654  0BFA               	decfsz	??___lldiv,f
  4767  0655  2E4F               	goto	u665
  4768  0656  3001               	movlw	1
  4769  0657  00FA               	movwf	??___lldiv
  4770  0658  087A               	movf	??___lldiv,w
  4771  0659  07A4               	addwf	___lldiv@counter,f
  4772  065A                     l1734:	
  4773  065A  1FF5               	btfss	___lldiv@divisor+3,7
  4774  065B  2E5D               	goto	u671
  4775  065C  2E5E               	goto	u670
  4776  065D                     u671:	
  4777  065D  2E4D               	goto	l1732
  4778  065E                     u670:	
  4779  065E                     l1736:	
  4780  065E  3001               	movlw	1
  4781  065F  00FA               	movwf	??___lldiv
  4782  0660                     u685:	
  4783  0660  1003               	clrc
  4784  0661  0DA0               	rlf	___lldiv@quotient,f
  4785  0662  0DA1               	rlf	___lldiv@quotient+1,f
  4786  0663  0DA2               	rlf	___lldiv@quotient+2,f
  4787  0664  0DA3               	rlf	___lldiv@quotient+3,f
  4788  0665  0BFA               	decfsz	??___lldiv,f
  4789  0666  2E60               	goto	u685
  4790  0667                     l1738:	
  4791  0667  0875               	movf	___lldiv@divisor+3,w
  4792  0668  0279               	subwf	___lldiv@dividend+3,w
  4793  0669  1D03               	skipz
  4794  066A  2E75               	goto	u695
  4795  066B  0874               	movf	___lldiv@divisor+2,w
  4796  066C  0278               	subwf	___lldiv@dividend+2,w
  4797  066D  1D03               	skipz
  4798  066E  2E75               	goto	u695
  4799  066F  0873               	movf	___lldiv@divisor+1,w
  4800  0670  0277               	subwf	___lldiv@dividend+1,w
  4801  0671  1D03               	skipz
  4802  0672  2E75               	goto	u695
  4803  0673  0872               	movf	___lldiv@divisor,w
  4804  0674  0276               	subwf	___lldiv@dividend,w
  4805  0675                     u695:	
  4806  0675  1C03               	skipc
  4807  0676  2E78               	goto	u691
  4808  0677  2E79               	goto	u690
  4809  0678                     u691:	
  4810  0678  2E88               	goto	l1744
  4811  0679                     u690:	
  4812  0679                     l1740:	
  4813  0679  0872               	movf	___lldiv@divisor,w
  4814  067A  02F6               	subwf	___lldiv@dividend,f
  4815  067B  0873               	movf	___lldiv@divisor+1,w
  4816  067C  1C03               	skipc
  4817  067D  0F73               	incfsz	___lldiv@divisor+1,w
  4818  067E  02F7               	subwf	___lldiv@dividend+1,f
  4819  067F  0874               	movf	___lldiv@divisor+2,w
  4820  0680  1C03               	skipc
  4821  0681  0F74               	incfsz	___lldiv@divisor+2,w
  4822  0682  02F8               	subwf	___lldiv@dividend+2,f
  4823  0683  0875               	movf	___lldiv@divisor+3,w
  4824  0684  1C03               	skipc
  4825  0685  0F75               	incfsz	___lldiv@divisor+3,w
  4826  0686  02F9               	subwf	___lldiv@dividend+3,f
  4827  0687                     l1742:	
  4828  0687  1420               	bsf	___lldiv@quotient,0
  4829  0688                     l1744:	
  4830  0688  3001               	movlw	1
  4831  0689                     u705:	
  4832  0689  1003               	clrc
  4833  068A  0CF5               	rrf	___lldiv@divisor+3,f
  4834  068B  0CF4               	rrf	___lldiv@divisor+2,f
  4835  068C  0CF3               	rrf	___lldiv@divisor+1,f
  4836  068D  0CF2               	rrf	___lldiv@divisor,f
  4837  068E  3EFF               	addlw	-1
  4838  068F  1D03               	skipz
  4839  0690  2E89               	goto	u705
  4840  0691                     l1746:	
  4841  0691  3001               	movlw	1
  4842  0692  02A4               	subwf	___lldiv@counter,f
  4843  0693  1D03               	btfss	3,2
  4844  0694  2E96               	goto	u711
  4845  0695  2E97               	goto	u710
  4846  0696                     u711:	
  4847  0696  2E5E               	goto	l1736
  4848  0697                     u710:	
  4849  0697                     l1748:	
  4850  0697  0823               	movf	___lldiv@quotient+3,w
  4851  0698  00F5               	movwf	?___lldiv+3
  4852  0699  0822               	movf	___lldiv@quotient+2,w
  4853  069A  00F4               	movwf	?___lldiv+2
  4854  069B  0821               	movf	___lldiv@quotient+1,w
  4855  069C  00F3               	movwf	?___lldiv+1
  4856  069D  0820               	movf	___lldiv@quotient,w
  4857  069E  00F2               	movwf	?___lldiv
  4858  069F                     l471:	
  4859  069F  0008               	return
  4860  06A0                     __end_of___lldiv:	
  4861                           
  4862                           	psect	text23
  4863  07AE                     __ptext23:	
  4864 ;; *************** function _i2c_masterRead *****************
  4865 ;; Defined at:
  4866 ;;		line 82 in file "I2C.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  a               2    2[COMMON] unsigned short 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  temp            2    6[COMMON] unsigned short 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  2    2[COMMON] unsigned short 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4880 ;;      Params:         2       0       0       0       0
  4881 ;;      Locals:         2       0       0       0       0
  4882 ;;      Temps:          2       0       0       0       0
  4883 ;;      Totals:         6       0       0       0       0
  4884 ;;Total ram usage:        6 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    2
  4887 ;; This function calls:
  4888 ;;		_i2c_masterWait
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           
  4895                           ;psect for function _i2c_masterRead
  4896  07AE                     _i2c_masterRead:	
  4897  07AE                     l1954:	
  4898                           ;incstack = 0
  4899                           ; Regs used in _i2c_masterRead: [wreg+status,2+status,0+pclath+cstack]
  4900                           
  4901                           
  4902                           ;I2C.c: 83:     unsigned short temp;;I2C.c: 84:     i2c_masterWait();
  4903  07AE  120A  158A  26C2  120A  118A  	fcall	_i2c_masterWait
  4904  07B3                     l1956:	
  4905                           
  4906                           ;I2C.c: 85:     SSPCON2bits.RCEN = 1;
  4907  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  4908  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  4909  07B5  1591               	bsf	17,3	;volatile
  4910                           
  4911                           ;I2C.c: 86:     i2c_masterWait();
  4912  07B6  120A  158A  26C2  120A  118A  	fcall	_i2c_masterWait
  4913  07BB                     l1958:	
  4914                           
  4915                           ;I2C.c: 87:     temp = SSPBUF;
  4916  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  4917  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  4918  07BD  0813               	movf	19,w	;volatile
  4919  07BE  00F4               	movwf	??_i2c_masterRead
  4920  07BF  01F5               	clrf	??_i2c_masterRead+1
  4921  07C0  0874               	movf	??_i2c_masterRead,w
  4922  07C1  00F6               	movwf	i2c_masterRead@temp
  4923  07C2  0875               	movf	??_i2c_masterRead+1,w
  4924  07C3  00F7               	movwf	i2c_masterRead@temp+1
  4925  07C4                     l1960:	
  4926                           
  4927                           ;I2C.c: 88:     i2c_masterWait();
  4928  07C4  120A  158A  26C2  120A  118A  	fcall	_i2c_masterWait
  4929  07C9                     l1962:	
  4930                           
  4931                           ;I2C.c: 89:     if (a == 0){
  4932  07C9  0872               	movf	i2c_masterRead@a,w
  4933  07CA  0473               	iorwf	i2c_masterRead@a+1,w
  4934  07CB  1D03               	btfss	3,2
  4935  07CC  2FCE               	goto	u861
  4936  07CD  2FCF               	goto	u860
  4937  07CE                     u861:	
  4938  07CE  2FD3               	goto	l1966
  4939  07CF                     u860:	
  4940  07CF                     l1964:	
  4941                           
  4942                           ;I2C.c: 90:         SSPCON2bits.ACKDT = 1;
  4943  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  4944  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  4945  07D1  1691               	bsf	17,5	;volatile
  4946                           
  4947                           ;I2C.c: 91:     }
  4948  07D2  2FDC               	goto	l253
  4949  07D3                     l1966:	
  4950  07D3  0372               	decf	i2c_masterRead@a,w
  4951  07D4  0473               	iorwf	i2c_masterRead@a+1,w
  4952  07D5  1D03               	btfss	3,2
  4953  07D6  2FD8               	goto	u871
  4954  07D7  2FD9               	goto	u870
  4955  07D8                     u871:	
  4956  07D8  2FDC               	goto	l253
  4957  07D9                     u870:	
  4958  07D9                     l1968:	
  4959                           
  4960                           ;I2C.c: 93:         SSPCON2bits.ACKDT = 0;
  4961  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  4962  07DA  1303               	bcf	3,6	;RP1=0, select bank1
  4963  07DB  1291               	bcf	17,5	;volatile
  4964  07DC                     l253:	
  4965                           
  4966                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
  4967  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  4968  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  4969  07DE  1611               	bsf	17,4	;volatile
  4970  07DF                     l1970:	
  4971                           
  4972                           ;I2C.c: 96:     return temp;
  4973  07DF  0877               	movf	i2c_masterRead@temp+1,w
  4974  07E0  00F3               	movwf	?_i2c_masterRead+1
  4975  07E1  0876               	movf	i2c_masterRead@temp,w
  4976  07E2  00F2               	movwf	?_i2c_masterRead
  4977  07E3                     l255:	
  4978  07E3  0008               	return
  4979  07E4                     __end_of_i2c_masterRead:	
  4980                           
  4981                           	psect	text24
  4982  0EC2                     __ptext24:	
  4983 ;; *************** function _i2c_masterWait *****************
  4984 ;; Defined at:
  4985 ;;		line 21 in file "I2C.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, status,2
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4999 ;;      Params:         0       0       0       0       0
  5000 ;;      Locals:         0       0       0       0       0
  5001 ;;      Temps:          0       0       0       0       0
  5002 ;;      Totals:         0       0       0       0       0
  5003 ;;Total ram usage:        0 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    1
  5006 ;; This function calls:
  5007 ;;		Nothing
  5008 ;; This function is called by:
  5009 ;;		_i2c_addr_start
  5010 ;;		_i2c_masterStop
  5011 ;;		_i2c_masterWrite
  5012 ;;		_i2c_masterRead
  5013 ;;		_i2c_masterStart
  5014 ;;		_i2c_master_RStart
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           
  5019                           ;psect for function _i2c_masterWait
  5020  0EC2                     _i2c_masterWait:	
  5021  0EC2                     l1652:	
  5022                           ;incstack = 0
  5023                           ; Regs used in _i2c_masterWait: [wreg+status,2]
  5024                           
  5025  0EC2                     l231:	
  5026                           ;I2C.c: 22:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5027                           
  5028  0EC2  1683               	bsf	3,5	;RP0=1, select bank1
  5029  0EC3  1303               	bcf	3,6	;RP1=0, select bank1
  5030  0EC4  1914               	btfsc	20,2	;volatile
  5031  0EC5  2EC7               	goto	u561
  5032  0EC6  2EC8               	goto	u560
  5033  0EC7                     u561:	
  5034  0EC7  2EC2               	goto	l231
  5035  0EC8                     u560:	
  5036  0EC8                     l1654:	
  5037  0EC8  0811               	movf	17,w	;volatile
  5038  0EC9  391F               	andlw	31
  5039  0ECA  1D03               	btfss	3,2
  5040  0ECB  2ECD               	goto	u571
  5041  0ECC  2ECE               	goto	u570
  5042  0ECD                     u571:	
  5043  0ECD  2EC2               	goto	l231
  5044  0ECE                     u570:	
  5045  0ECE                     l234:	
  5046  0ECE  0008               	return
  5047  0ECF                     __end_of_i2c_masterWait:	
  5048                           
  5049                           	psect	text25
  5050  0496                     __ptext25:	
  5051 ;; *************** function _analogInSel *****************
  5052 ;; Defined at:
  5053 ;;		line 32 in file "ADC.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  analogIn        1    wreg     unsigned char 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  analogIn        1    4[COMMON] unsigned char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      unsigned char 
  5060 ;; Registers used:
  5061 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5067 ;;      Params:         0       0       0       0       0
  5068 ;;      Locals:         1       0       0       0       0
  5069 ;;      Temps:          2       0       0       0       0
  5070 ;;      Totals:         3       0       0       0       0
  5071 ;;Total ram usage:        3 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    1
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_main
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           
  5082                           ;psect for function _analogInSel
  5083  0496                     _analogInSel:	
  5084                           
  5085                           ;incstack = 0
  5086                           ; Regs used in _analogInSel: [wreg-fsr0h+status,2+status,0]
  5087                           ;analogInSel@analogIn stored from wreg
  5088  0496  00F4               	movwf	analogInSel@analogIn
  5089  0497                     l1850:	
  5090                           
  5091                           ;ADC.c: 33:     switch(analogIn){
  5092  0497  2CFA               	goto	l1854
  5093  0498                     l291:	
  5094                           ;ADC.c: 34:         case 0:
  5095                           
  5096                           
  5097                           ;ADC.c: 35:             ADCON0bits.CHS3 = 0;
  5098  0498  1283               	bcf	3,5	;RP0=0, select bank0
  5099  0499  1303               	bcf	3,6	;RP1=0, select bank0
  5100  049A  129F               	bcf	31,5	;volatile
  5101                           
  5102                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  5103  049B  121F               	bcf	31,4	;volatile
  5104                           
  5105                           ;ADC.c: 37:             ADCON0bits.CHS1 = 0;
  5106  049C  119F               	bcf	31,3	;volatile
  5107                           
  5108                           ;ADC.c: 38:             ADCON0bits.CHS0 = 0;
  5109  049D  111F               	bcf	31,2	;volatile
  5110                           
  5111                           ;ADC.c: 39:             break;
  5112  049E  2D2E               	goto	l306
  5113  049F                     l293:	
  5114                           ;ADC.c: 40:         case 1:
  5115                           
  5116                           
  5117                           ;ADC.c: 41:             ADCON0bits.CHS3 = 0;
  5118  049F  1283               	bcf	3,5	;RP0=0, select bank0
  5119  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  5120  04A1  129F               	bcf	31,5	;volatile
  5121                           
  5122                           ;ADC.c: 42:             ADCON0bits.CHS2 = 0;
  5123  04A2  121F               	bcf	31,4	;volatile
  5124                           
  5125                           ;ADC.c: 43:             ADCON0bits.CHS1 = 0;
  5126  04A3  119F               	bcf	31,3	;volatile
  5127                           
  5128                           ;ADC.c: 44:             ADCON0bits.CHS0 = 1;
  5129  04A4  151F               	bsf	31,2	;volatile
  5130                           
  5131                           ;ADC.c: 45:             break;
  5132  04A5  2D2E               	goto	l306
  5133  04A6                     l294:	
  5134                           ;ADC.c: 46:         case 2:
  5135                           
  5136                           
  5137                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  5138  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  5139  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  5140  04A8  129F               	bcf	31,5	;volatile
  5141                           
  5142                           ;ADC.c: 48:             ADCON0bits.CHS2 = 0;
  5143  04A9  121F               	bcf	31,4	;volatile
  5144                           
  5145                           ;ADC.c: 49:             ADCON0bits.CHS1 = 1;
  5146  04AA  159F               	bsf	31,3	;volatile
  5147                           
  5148                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
  5149  04AB  111F               	bcf	31,2	;volatile
  5150                           
  5151                           ;ADC.c: 51:             break;
  5152  04AC  2D2E               	goto	l306
  5153  04AD                     l295:	
  5154                           ;ADC.c: 52:         case 3:
  5155                           
  5156                           
  5157                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
  5158  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  5159  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  5160  04AF  129F               	bcf	31,5	;volatile
  5161                           
  5162                           ;ADC.c: 54:             ADCON0bits.CHS2 = 0;
  5163  04B0  121F               	bcf	31,4	;volatile
  5164                           
  5165                           ;ADC.c: 55:             ADCON0bits.CHS1 = 1;
  5166  04B1  159F               	bsf	31,3	;volatile
  5167                           
  5168                           ;ADC.c: 56:             ADCON0bits.CHS0 = 1;
  5169  04B2  151F               	bsf	31,2	;volatile
  5170                           
  5171                           ;ADC.c: 57:             break;
  5172  04B3  2D2E               	goto	l306
  5173  04B4                     l296:	
  5174                           ;ADC.c: 58:         case 4:
  5175                           
  5176                           
  5177                           ;ADC.c: 59:             ADCON0bits.CHS3 = 0;
  5178  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  5179  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  5180  04B6  129F               	bcf	31,5	;volatile
  5181                           
  5182                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  5183  04B7  161F               	bsf	31,4	;volatile
  5184                           
  5185                           ;ADC.c: 61:             ADCON0bits.CHS1 = 0;
  5186  04B8  119F               	bcf	31,3	;volatile
  5187                           
  5188                           ;ADC.c: 62:             ADCON0bits.CHS0 = 0;
  5189  04B9  111F               	bcf	31,2	;volatile
  5190                           
  5191                           ;ADC.c: 63:             break;
  5192  04BA  2D2E               	goto	l306
  5193  04BB                     l297:	
  5194                           ;ADC.c: 64:         case 5:
  5195                           
  5196                           
  5197                           ;ADC.c: 65:             ADCON0bits.CHS3 = 0;
  5198  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  5199  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  5200  04BD  129F               	bcf	31,5	;volatile
  5201                           
  5202                           ;ADC.c: 66:             ADCON0bits.CHS2 = 1;
  5203  04BE  161F               	bsf	31,4	;volatile
  5204                           
  5205                           ;ADC.c: 67:             ADCON0bits.CHS1 = 0;
  5206  04BF  119F               	bcf	31,3	;volatile
  5207                           
  5208                           ;ADC.c: 68:             ADCON0bits.CHS0 = 1;
  5209  04C0  151F               	bsf	31,2	;volatile
  5210                           
  5211                           ;ADC.c: 69:             break;
  5212  04C1  2D2E               	goto	l306
  5213  04C2                     l298:	
  5214                           ;ADC.c: 70:         case 6:
  5215                           
  5216                           
  5217                           ;ADC.c: 71:             ADCON0bits.CHS3 = 0;
  5218  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  5219  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  5220  04C4  129F               	bcf	31,5	;volatile
  5221                           
  5222                           ;ADC.c: 72:             ADCON0bits.CHS2 = 1;
  5223  04C5  161F               	bsf	31,4	;volatile
  5224                           
  5225                           ;ADC.c: 73:             ADCON0bits.CHS1 = 1;
  5226  04C6  159F               	bsf	31,3	;volatile
  5227                           
  5228                           ;ADC.c: 74:             ADCON0bits.CHS0 = 0;
  5229  04C7  111F               	bcf	31,2	;volatile
  5230                           
  5231                           ;ADC.c: 75:             break;
  5232  04C8  2D2E               	goto	l306
  5233  04C9                     l299:	
  5234                           ;ADC.c: 76:         case 7:
  5235                           
  5236                           
  5237                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;
  5238  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  5239  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  5240  04CB  129F               	bcf	31,5	;volatile
  5241                           
  5242                           ;ADC.c: 78:             ADCON0bits.CHS2 = 1;
  5243  04CC  161F               	bsf	31,4	;volatile
  5244                           
  5245                           ;ADC.c: 79:             ADCON0bits.CHS1 = 1;
  5246  04CD  159F               	bsf	31,3	;volatile
  5247                           
  5248                           ;ADC.c: 80:             ADCON0bits.CHS0 = 1;
  5249  04CE  151F               	bsf	31,2	;volatile
  5250                           
  5251                           ;ADC.c: 81:             break;
  5252  04CF  2D2E               	goto	l306
  5253  04D0                     l300:	
  5254                           ;ADC.c: 82:         case 8:
  5255                           
  5256                           
  5257                           ;ADC.c: 83:             ADCON0bits.CHS3 = 1;
  5258  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  5259  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  5260  04D2  169F               	bsf	31,5	;volatile
  5261                           
  5262                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  5263  04D3  121F               	bcf	31,4	;volatile
  5264                           
  5265                           ;ADC.c: 85:             ADCON0bits.CHS1 = 0;
  5266  04D4  119F               	bcf	31,3	;volatile
  5267                           
  5268                           ;ADC.c: 86:             ADCON0bits.CHS0 = 0;
  5269  04D5  111F               	bcf	31,2	;volatile
  5270                           
  5271                           ;ADC.c: 87:             break;
  5272  04D6  2D2E               	goto	l306
  5273  04D7                     l301:	
  5274                           ;ADC.c: 88:         case 9:
  5275                           
  5276                           
  5277                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  5278  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  5279  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  5280  04D9  169F               	bsf	31,5	;volatile
  5281                           
  5282                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  5283  04DA  121F               	bcf	31,4	;volatile
  5284                           
  5285                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;
  5286  04DB  119F               	bcf	31,3	;volatile
  5287                           
  5288                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  5289  04DC  151F               	bsf	31,2	;volatile
  5290                           
  5291                           ;ADC.c: 93:             break;
  5292  04DD  2D2E               	goto	l306
  5293  04DE                     l302:	
  5294                           ;ADC.c: 94:         case 10:
  5295                           
  5296                           
  5297                           ;ADC.c: 95:             ADCON0bits.CHS3 = 1;
  5298  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  5299  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  5300  04E0  169F               	bsf	31,5	;volatile
  5301                           
  5302                           ;ADC.c: 96:             ADCON0bits.CHS2 = 0;
  5303  04E1  121F               	bcf	31,4	;volatile
  5304                           
  5305                           ;ADC.c: 97:             ADCON0bits.CHS1 = 1;
  5306  04E2  159F               	bsf	31,3	;volatile
  5307                           
  5308                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  5309  04E3  111F               	bcf	31,2	;volatile
  5310                           
  5311                           ;ADC.c: 99:             break;
  5312  04E4  2D2E               	goto	l306
  5313  04E5                     l303:	
  5314                           ;ADC.c: 100:         case 11:
  5315                           
  5316                           
  5317                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  5318  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  5319  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  5320  04E7  169F               	bsf	31,5	;volatile
  5321                           
  5322                           ;ADC.c: 102:             ADCON0bits.CHS2 = 0;
  5323  04E8  121F               	bcf	31,4	;volatile
  5324                           
  5325                           ;ADC.c: 103:             ADCON0bits.CHS1 = 1;
  5326  04E9  159F               	bsf	31,3	;volatile
  5327                           
  5328                           ;ADC.c: 104:             ADCON0bits.CHS0 = 1;
  5329  04EA  151F               	bsf	31,2	;volatile
  5330                           
  5331                           ;ADC.c: 105:             break;
  5332  04EB  2D2E               	goto	l306
  5333  04EC                     l304:	
  5334                           ;ADC.c: 106:         case 12:
  5335                           
  5336                           
  5337                           ;ADC.c: 107:             ADCON0bits.CHS3 = 1;
  5338  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  5339  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  5340  04EE  169F               	bsf	31,5	;volatile
  5341                           
  5342                           ;ADC.c: 108:             ADCON0bits.CHS2 = 1;
  5343  04EF  161F               	bsf	31,4	;volatile
  5344                           
  5345                           ;ADC.c: 109:             ADCON0bits.CHS1 = 0;
  5346  04F0  119F               	bcf	31,3	;volatile
  5347                           
  5348                           ;ADC.c: 110:             ADCON0bits.CHS0 = 0;
  5349  04F1  111F               	bcf	31,2	;volatile
  5350                           
  5351                           ;ADC.c: 111:             break;
  5352  04F2  2D2E               	goto	l306
  5353  04F3                     l305:	
  5354                           ;ADC.c: 112:         case 13:
  5355                           
  5356                           
  5357                           ;ADC.c: 113:             ADCON0bits.CHS3 = 1;
  5358  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  5359  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  5360  04F5  169F               	bsf	31,5	;volatile
  5361                           
  5362                           ;ADC.c: 114:             ADCON0bits.CHS2 = 1;
  5363  04F6  161F               	bsf	31,4	;volatile
  5364                           
  5365                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;
  5366  04F7  119F               	bcf	31,3	;volatile
  5367                           
  5368                           ;ADC.c: 116:             ADCON0bits.CHS0 = 1;
  5369  04F8  151F               	bsf	31,2	;volatile
  5370                           
  5371                           ;ADC.c: 117:             break;
  5372  04F9  2D2E               	goto	l306
  5373  04FA                     l1854:	
  5374  04FA  0874               	movf	analogInSel@analogIn,w
  5375  04FB  00F2               	movwf	??_analogInSel
  5376  04FC  01F3               	clrf	??_analogInSel+1
  5377                           
  5378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5379                           ; Switch size 1, requested type "simple"
  5380                           ; Number of cases is 1, Range of values is 0 to 0
  5381                           ; switch strategies available:
  5382                           ; Name         Instructions Cycles
  5383                           ; simple_byte            4     3 (average)
  5384                           ; direct_byte           11     8 (fixed)
  5385                           ; jumptable            260     6 (fixed)
  5386                           ;	Chosen strategy is simple_byte
  5387  04FD  0873               	movf	??_analogInSel+1,w
  5388  04FE  3A00               	xorlw	0	; case 0
  5389  04FF  1903               	skipnz
  5390  0500  2D02               	goto	l2714
  5391  0501  2D2E               	goto	l306
  5392  0502                     l2714:	
  5393                           
  5394                           ; Switch size 1, requested type "simple"
  5395                           ; Number of cases is 14, Range of values is 0 to 13
  5396                           ; switch strategies available:
  5397                           ; Name         Instructions Cycles
  5398                           ; simple_byte           43    22 (average)
  5399                           ; direct_byte           50     8 (fixed)
  5400                           ; jumptable            260     6 (fixed)
  5401                           ;	Chosen strategy is simple_byte
  5402  0502  0872               	movf	??_analogInSel,w
  5403  0503  3A00               	xorlw	0	; case 0
  5404  0504  1903               	skipnz
  5405  0505  2C98               	goto	l291
  5406  0506  3A01               	xorlw	1	; case 1
  5407  0507  1903               	skipnz
  5408  0508  2C9F               	goto	l293
  5409  0509  3A03               	xorlw	3	; case 2
  5410  050A  1903               	skipnz
  5411  050B  2CA6               	goto	l294
  5412  050C  3A01               	xorlw	1	; case 3
  5413  050D  1903               	skipnz
  5414  050E  2CAD               	goto	l295
  5415  050F  3A07               	xorlw	7	; case 4
  5416  0510  1903               	skipnz
  5417  0511  2CB4               	goto	l296
  5418  0512  3A01               	xorlw	1	; case 5
  5419  0513  1903               	skipnz
  5420  0514  2CBB               	goto	l297
  5421  0515  3A03               	xorlw	3	; case 6
  5422  0516  1903               	skipnz
  5423  0517  2CC2               	goto	l298
  5424  0518  3A01               	xorlw	1	; case 7
  5425  0519  1903               	skipnz
  5426  051A  2CC9               	goto	l299
  5427  051B  3A0F               	xorlw	15	; case 8
  5428  051C  1903               	skipnz
  5429  051D  2CD0               	goto	l300
  5430  051E  3A01               	xorlw	1	; case 9
  5431  051F  1903               	skipnz
  5432  0520  2CD7               	goto	l301
  5433  0521  3A03               	xorlw	3	; case 10
  5434  0522  1903               	skipnz
  5435  0523  2CDE               	goto	l302
  5436  0524  3A01               	xorlw	1	; case 11
  5437  0525  1903               	skipnz
  5438  0526  2CE5               	goto	l303
  5439  0527  3A07               	xorlw	7	; case 12
  5440  0528  1903               	skipnz
  5441  0529  2CEC               	goto	l304
  5442  052A  3A01               	xorlw	1	; case 13
  5443  052B  1903               	skipnz
  5444  052C  2CF3               	goto	l305
  5445  052D  2D2E               	goto	l306
  5446  052E                     l306:	
  5447  052E  0008               	return
  5448  052F                     __end_of_analogInSel:	
  5449                           
  5450                           	psect	text26
  5451  0E99                     __ptext26:	
  5452 ;; *************** function _adcSetup *****************
  5453 ;; Defined at:
  5454 ;;		line 12 in file "ADC.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		None
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5468 ;;      Params:         0       0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0
  5471 ;;      Totals:         0       0       0       0       0
  5472 ;;Total ram usage:        0 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    1
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_main
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function _adcSetup
  5484  0E99                     _adcSetup:	
  5485  0E99                     l1838:	
  5486                           ;incstack = 0
  5487                           ; Regs used in _adcSetup: []
  5488                           
  5489                           
  5490                           ;ADC.c: 13:     ADCON0bits.ADON = 1;
  5491  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  5492  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  5493  0E9B  141F               	bsf	31,0	;volatile
  5494                           
  5495                           ;ADC.c: 14:     ADCON1bits.ADFM = 0;
  5496  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  5497  0E9D  1303               	bcf	3,6	;RP1=0, select bank1
  5498  0E9E  139F               	bcf	31,7	;volatile
  5499                           
  5500                           ;ADC.c: 15:     ADCON1bits.VCFG1 = 0;
  5501  0E9F  129F               	bcf	31,5	;volatile
  5502                           
  5503                           ;ADC.c: 16:     ADCON1bits.VCFG0 = 0;
  5504  0EA0  121F               	bcf	31,4	;volatile
  5505  0EA1                     l280:	
  5506  0EA1  0008               	return
  5507  0EA2                     __end_of_adcSetup:	
  5508                           
  5509                           	psect	text27
  5510  0F3C                     __ptext27:	
  5511 ;; *************** function _adcInterrupt *****************
  5512 ;; Defined at:
  5513 ;;		line 19 in file "ADC.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  en              1    wreg     unsigned char 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  en              1    4[COMMON] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5527 ;;      Params:         0       0       0       0       0
  5528 ;;      Locals:         1       0       0       0       0
  5529 ;;      Temps:          2       0       0       0       0
  5530 ;;      Totals:         3       0       0       0       0
  5531 ;;Total ram usage:        3 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_main
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function _adcInterrupt
  5543  0F3C                     _adcInterrupt:	
  5544                           
  5545                           ;incstack = 0
  5546                           ; Regs used in _adcInterrupt: [wreg-fsr0h+status,2+status,0]
  5547                           ;adcInterrupt@en stored from wreg
  5548  0F3C  00F4               	movwf	adcInterrupt@en
  5549  0F3D                     l1860:	
  5550                           
  5551                           ;ADC.c: 20:     switch(en){
  5552  0F3D  2F4C               	goto	l1864
  5553  0F3E                     l284:	
  5554                           ;ADC.c: 21:         case 0:
  5555                           
  5556                           
  5557                           ;ADC.c: 22:             PIE1bits.ADIE = 0;
  5558  0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  5559  0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  5560  0F40  130C               	bcf	12,6	;volatile
  5561                           
  5562                           ;ADC.c: 23:             PIR1bits.ADIF = 0;
  5563  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  5564  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  5565  0F43  130C               	bcf	12,6	;volatile
  5566                           
  5567                           ;ADC.c: 24:             break;
  5568  0F44  2F5C               	goto	l287
  5569  0F45                     l286:	
  5570                           ;ADC.c: 25:         case 1:
  5571                           
  5572                           
  5573                           ;ADC.c: 26:             PIE1bits.ADIE = 1;
  5574  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  5575  0F46  1303               	bcf	3,6	;RP1=0, select bank1
  5576  0F47  170C               	bsf	12,6	;volatile
  5577                           
  5578                           ;ADC.c: 27:             PIR1bits.ADIF = 0;
  5579  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  5580  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  5581  0F4A  130C               	bcf	12,6	;volatile
  5582                           
  5583                           ;ADC.c: 28:             break;
  5584  0F4B  2F5C               	goto	l287
  5585  0F4C                     l1864:	
  5586  0F4C  0874               	movf	adcInterrupt@en,w
  5587  0F4D  00F2               	movwf	??_adcInterrupt
  5588  0F4E  01F3               	clrf	??_adcInterrupt+1
  5589                           
  5590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5591                           ; Switch size 1, requested type "simple"
  5592                           ; Number of cases is 1, Range of values is 0 to 0
  5593                           ; switch strategies available:
  5594                           ; Name         Instructions Cycles
  5595                           ; simple_byte            4     3 (average)
  5596                           ; direct_byte           11     8 (fixed)
  5597                           ; jumptable            260     6 (fixed)
  5598                           ;	Chosen strategy is simple_byte
  5599  0F4F  0873               	movf	??_adcInterrupt+1,w
  5600  0F50  3A00               	xorlw	0	; case 0
  5601  0F51  1903               	skipnz
  5602  0F52  2F54               	goto	l2716
  5603  0F53  2F5C               	goto	l287
  5604  0F54                     l2716:	
  5605                           
  5606                           ; Switch size 1, requested type "simple"
  5607                           ; Number of cases is 2, Range of values is 0 to 1
  5608                           ; switch strategies available:
  5609                           ; Name         Instructions Cycles
  5610                           ; simple_byte            7     4 (average)
  5611                           ; direct_byte           14     8 (fixed)
  5612                           ; jumptable            260     6 (fixed)
  5613                           ;	Chosen strategy is simple_byte
  5614  0F54  0872               	movf	??_adcInterrupt,w
  5615  0F55  3A00               	xorlw	0	; case 0
  5616  0F56  1903               	skipnz
  5617  0F57  2F3E               	goto	l284
  5618  0F58  3A01               	xorlw	1	; case 1
  5619  0F59  1903               	skipnz
  5620  0F5A  2F45               	goto	l286
  5621  0F5B  2F5C               	goto	l287
  5622  0F5C                     l287:	
  5623  0F5C  0008               	return
  5624  0F5D                     __end_of_adcInterrupt:	
  5625                           
  5626                           	psect	text28
  5627  0F5D                     __ptext28:	
  5628 ;; *************** function _adcFoscSel *****************
  5629 ;; Defined at:
  5630 ;;		line 122 in file "ADC.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  fosc            1    wreg     unsigned char 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  fosc            1    4[COMMON] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      unsigned char 
  5637 ;; Registers used:
  5638 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5644 ;;      Params:         0       0       0       0       0
  5645 ;;      Locals:         1       0       0       0       0
  5646 ;;      Temps:          2       0       0       0       0
  5647 ;;      Totals:         3       0       0       0       0
  5648 ;;Total ram usage:        3 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    1
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_main
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           
  5659                           ;psect for function _adcFoscSel
  5660  0F5D                     _adcFoscSel:	
  5661                           
  5662                           ;incstack = 0
  5663                           ; Regs used in _adcFoscSel: [wreg-fsr0h+status,2+status,0]
  5664                           ;adcFoscSel@fosc stored from wreg
  5665  0F5D  00F4               	movwf	adcFoscSel@fosc
  5666  0F5E                     l1840:	
  5667                           
  5668                           ;ADC.c: 123:     switch(fosc){
  5669  0F5E  2F6E               	goto	l1844
  5670  0F5F                     l310:	
  5671                           ;ADC.c: 124:         case 0:
  5672                           
  5673                           
  5674                           ;ADC.c: 125:             ADCON0bits.ADCS1 = 0;
  5675  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  5676  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  5677  0F61  139F               	bcf	31,7	;volatile
  5678                           
  5679                           ;ADC.c: 126:             ADCON0bits.ADCS0 = 0;
  5680  0F62  131F               	bcf	31,6	;volatile
  5681                           
  5682                           ;ADC.c: 127:             break;
  5683  0F63  2F81               	goto	l314
  5684  0F64                     l312:	
  5685                           ;ADC.c: 128:         case 1:
  5686                           
  5687                           
  5688                           ;ADC.c: 129:             ADCON0bits.ADCS1 = 0;
  5689  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  5690  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  5691  0F66  139F               	bcf	31,7	;volatile
  5692                           
  5693                           ;ADC.c: 130:             ADCON0bits.ADCS0 = 1;
  5694  0F67  171F               	bsf	31,6	;volatile
  5695                           
  5696                           ;ADC.c: 131:             break;
  5697  0F68  2F81               	goto	l314
  5698  0F69                     l313:	
  5699                           ;ADC.c: 132:         case 3:
  5700                           
  5701                           
  5702                           ;ADC.c: 133:             ADCON0bits.ADCS1 = 1;
  5703  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  5704  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  5705  0F6B  179F               	bsf	31,7	;volatile
  5706                           
  5707                           ;ADC.c: 134:             ADCON0bits.ADCS0 = 0;
  5708  0F6C  131F               	bcf	31,6	;volatile
  5709                           
  5710                           ;ADC.c: 135:             break;
  5711  0F6D  2F81               	goto	l314
  5712  0F6E                     l1844:	
  5713  0F6E  0874               	movf	adcFoscSel@fosc,w
  5714  0F6F  00F2               	movwf	??_adcFoscSel
  5715  0F70  01F3               	clrf	??_adcFoscSel+1
  5716                           
  5717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5718                           ; Switch size 1, requested type "simple"
  5719                           ; Number of cases is 1, Range of values is 0 to 0
  5720                           ; switch strategies available:
  5721                           ; Name         Instructions Cycles
  5722                           ; simple_byte            4     3 (average)
  5723                           ; direct_byte           11     8 (fixed)
  5724                           ; jumptable            260     6 (fixed)
  5725                           ;	Chosen strategy is simple_byte
  5726  0F71  0873               	movf	??_adcFoscSel+1,w
  5727  0F72  3A00               	xorlw	0	; case 0
  5728  0F73  1903               	skipnz
  5729  0F74  2F76               	goto	l2718
  5730  0F75  2F81               	goto	l314
  5731  0F76                     l2718:	
  5732                           
  5733                           ; Switch size 1, requested type "simple"
  5734                           ; Number of cases is 3, Range of values is 0 to 3
  5735                           ; switch strategies available:
  5736                           ; Name         Instructions Cycles
  5737                           ; simple_byte           10     6 (average)
  5738                           ; direct_byte           20     8 (fixed)
  5739                           ; jumptable            260     6 (fixed)
  5740                           ;	Chosen strategy is simple_byte
  5741  0F76  0872               	movf	??_adcFoscSel,w
  5742  0F77  3A00               	xorlw	0	; case 0
  5743  0F78  1903               	skipnz
  5744  0F79  2F5F               	goto	l310
  5745  0F7A  3A01               	xorlw	1	; case 1
  5746  0F7B  1903               	skipnz
  5747  0F7C  2F64               	goto	l312
  5748  0F7D  3A02               	xorlw	2	; case 3
  5749  0F7E  1903               	skipnz
  5750  0F7F  2F69               	goto	l313
  5751  0F80  2F81               	goto	l314
  5752  0F81                     l314:	
  5753  0F81  0008               	return
  5754  0F82                     __end_of_adcFoscSel:	
  5755                           
  5756                           	psect	text29
  5757  0E8A                     __ptext29:	
  5758 ;; *************** function _isr *****************
  5759 ;; Defined at:
  5760 ;;		line 53 in file "master.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;		None
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  1    wreg      void 
  5767 ;; Registers used:
  5768 ;;		None
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5774 ;;      Params:         0       0       0       0       0
  5775 ;;      Locals:         0       0       0       0       0
  5776 ;;      Temps:          2       0       0       0       0
  5777 ;;      Totals:         2       0       0       0       0
  5778 ;;Total ram usage:        2 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		Interrupt level 1
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           
  5788                           ;psect for function _isr
  5789  0E8A                     _isr:	
  5790  0E8A                     i1l101:	
  5791  0E8A  0871               	movf	??_isr+1,w
  5792  0E8B  008A               	movwf	10
  5793  0E8C  0E70               	swapf	??_isr^(0+4294967168),w
  5794  0E8D  0083               	movwf	3
  5795  0E8E  0EFE               	swapf	btemp,f
  5796  0E8F  0E7E               	swapf	btemp,w
  5797  0E90  0009               	retfie
  5798  0E91                     __end_of_isr:	
  5799  007E                     btemp	set	126	;btemp
  5800  007E                     wtemp0	set	126
  5801                           
  5802                           	psect	intentry
  5803  0004                     __pintentry:	
  5804                           ;incstack = 0
  5805                           ; Regs used in _isr: []
  5806                           
  5807  0004                     interrupt_function:	
  5808  007E                     saved_w	set	btemp
  5809  0004  00FE               	movwf	btemp
  5810  0005  0E03               	swapf	3,w
  5811  0006  00F0               	movwf	??_isr
  5812  0007  080A               	movf	10,w
  5813  0008  00F1               	movwf	??_isr+1
  5814  0009  120A  158A  2E8A   	ljmp	_isr


Data Sizes:
    Strings     21
    Constant    10
    Data        1
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     55      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[4]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@A(BANK0[10]), main@G(BANK0[10]), main@F(BANK0[5]), main@D(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd8_dispString@value	PTR unsigned char  size(2) Largest target is 10
		 -> STR_9(CODE[4]), main@A(BANK0[10]), STR_7(CODE[4]), main@G(BANK0[10]), 
		 -> STR_5(CODE[3]), main@F(BANK0[5]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> main@D(BANK0[5]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _mpu6050_init->_i2c_addr_start
    _i2c_addr_start->_i2c_masterWrite
    _lcd8_setCursor->_lcd8_cmd
    _lcd8_init->_lcd8_cmd
    _lcd8_cmd->_delay_1ms
    _lcd8_dispString->_lcd8_write
    _lcd8_write->_delay_1ms
    _i2c_master_init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _i2c_master_init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0    6464
                                             20 BANK0     35    35      0
                            ___lwdiv
                         _adcFoscSel
                       _adcInterrupt
                           _adcSetup
                        _analogInSel
                          _delay_1ms
                     _i2c_addr_start
                     _i2c_masterRead
                     _i2c_masterStop
                    _i2c_masterWrite
                    _i2c_master_init
                    _lcd8_dispString
                          _lcd8_init
                     _lcd8_setCursor
                       _mpu6050_init
                            _oscInit
                              _setup
                            _sprintf
                          _tmr1_Init
                     _tmr1_Interrupt
                     _tmr1_Prescaler
 ---------------------------------------------------------------------------------
 (1) _tmr1_Prescaler                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _tmr1_Interrupt                                       1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _tmr1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2594
                                              5 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             10 COMMON     1     1      0
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscInit                                              3     3      0      28
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _mpu6050_init                                         2     2      0      66
                                              4 COMMON     2     2      0
                     _i2c_addr_start
                     _i2c_masterStop
                    _i2c_masterWrite
 ---------------------------------------------------------------------------------
 (2) _i2c_masterStop                                       0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_addr_start                                       1     1      0      44
                                              3 COMMON     1     1      0
                     _i2c_masterWait
                    _i2c_masterWrite
 ---------------------------------------------------------------------------------
 (2) _i2c_masterWrite                                      1     1      0      22
                                              2 COMMON     1     1      0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (1) _lcd8_setCursor                                       2     1      1     840
                                              5 COMMON     2     1      1
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd8_init                                            2     2      0      68
                                              5 COMMON     2     2      0
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd8_cmd                                             1     1      0      68
                                              4 COMMON     1     1      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _lcd8_dispString                                      4     2      2     949
                                              6 COMMON     4     2      2
                         _lcd8_write
 ---------------------------------------------------------------------------------
 (2) _lcd8_write                                           2     0      2     220
                                              4 COMMON     2     0      2
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (3) _delay_1ms                                            2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _i2c_masterRead                                       6     4      2     371
                                              2 COMMON     6     4      2
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (3) _i2c_masterWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analogInSel                                          3     3      0      28
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInterrupt                                         3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcFoscSel                                           3     3      0      28
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   _adcFoscSel
   _adcInterrupt
   _adcSetup
   _analogInSel
   _delay_1ms
   _i2c_addr_start
     _i2c_masterWait
     _i2c_masterWrite
       _i2c_masterWait
   _i2c_masterRead
     _i2c_masterWait
   _i2c_masterStop
     _i2c_masterWait
   _i2c_masterWrite
     _i2c_masterWait
   _i2c_master_init
     ___lldiv
   _lcd8_dispString
     _lcd8_write
       _delay_1ms
   _lcd8_init
     _lcd8_cmd
       _delay_1ms
   _lcd8_setCursor
     _lcd8_cmd
       _delay_1ms
   _mpu6050_init
     _i2c_addr_start
       _i2c_masterWait
       _i2c_masterWrite
         _i2c_masterWait
     _i2c_masterStop
       _i2c_masterWait
     _i2c_masterWrite
       _i2c_masterWait
   _oscInit
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _tmr1_Init
   _tmr1_Interrupt
   _tmr1_Prescaler

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     37      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5A      12        0.0%
ABS                  0      0      5A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 30 10:21:18 2020

           ?_mpu6050_init 0070                         _T 005D                         _i 007B  
                       pc 0002        i2c_addr_start@addr 0073               __CFG_CP$OFF 0000  
                      _Ax 0063                        _Ay 0061                        _Az 005F  
                      _Gx 005B                        _Gy 0059                        _Gz 0057  
                      fsr 0004       ___wmul@multiplicand 0074                       l111 0135  
                     l200 0FFF                       l113 0139                       l114 013A  
                     l131 05C5                       l203 0EC1                       l300 04D0  
                     l140 0637                       l116 013E                       l301 04D7  
                     l133 05CF                       l125 0F25                       l117 0192  
                     l310 0F5F                       l302 04DE                       l134 05D9  
                     l118 01C3                       l303 04E5                       l231 0EC2  
                     l135 05E3                       l312 0F64                       l304 04EC  
                     l240 0EEE                       l136 05ED                       l313 0F69  
                     l305 04F3                       l153 06F5                       l137 05F7  
                     l314 0F81                       l306 052E                       l234 0ECE  
                     l138 0601                       l139 060B                       l228 07AD  
                     l156 0EFF                       l253 07DC                       l165 0FD2  
                     l182 0F3B                       l174 07FF                       l246 0EAA  
                     l255 07E3                       l159 0EDE                       l431 0495  
                     l191 0E89                       l280 0EA1                       l249 0EB5  
                     l291 0498                       l435 0F8E                       l195 0FD5  
                     l284 0F3E                       l293 049F                       l269 05C2  
                     l437 0FA6                       l197 0FDA                       l286 0F45  
                     l294 04A6                       l198 0FDF                       l287 0F5C  
                     l295 04AD                       l471 069F                       l199 0FE4  
                     l296 04B4                       l297 04BB                       l298 04C2  
                     l299 04C9                       l707 0739                       l717 0775  
                     l882 0F11                       u600 0F0E                       u601 0F0D  
                     u610 0F88              __CFG_CPD$OFF 0000                       u611 0F87  
                     u710 0697                       u711 0696                       u560 0EC8  
                     u720 06FE                       u640 0FA2                       u561 0EC7  
                     u705 0689                       u721 06FD                       u641 0FA1  
                     u625 0F8F                       u570 0ECE                       u650 064A  
                     u571 0ECD                       u651 0649                       u635 0F96  
                     u580 0F3B                       u740 0710                       u581 0F3A  
                     u741 070F                       u670 065E                       u590 0F08  
                     u671 065D                       u735 0702                       u591 0F07  
                     u760 0721                       u665 064F                       u585 0F37  
                     u761 0720                       u690 0679                       u850 078D  
                     u691 0678                       u755 0711                       u860 07CF  
                     u780 0735                       u861 07CE                       u685 0660  
                     u781 0734                       u765 071D                       u870 07D9  
                     u871 07D8                       u695 0675                       u855 0788  
                     u775 0729                       u980 07EA                       u981 07E9  
                     u990 07F8                       u991 07F7              _adcInterrupt 0F3C  
                     _isr 0E8A                       _luz 006C                       fsr0 0004  
                     indf 0000       analogInSel@analogIn 0074              __CFG_LVP$OFF 0000  
  __end_of_i2c_addr_start 0EEF                      l2060 0FA7                      l2052 07E5  
                    l2062 0FA8                      l2054 07EA                      l2064 0FBC  
                    l2056 07F2                      l2066 0FC2                      l2058 07F8  
                    l2410 03FE                      l1700 0EDB                      l2420 0426  
                    l2412 0409                      l2404 03D8                      l2500 012B  
                    l2350 074C                      l1710 0F10                      l1702 0F01  
                    l2430 0472                      l2422 042A                      l2414 0415  
                    l2510 015E                      l2502 0132                      l1800 0F12  
                    l2360 076B                      l2352 0750                      l2344 073A  
                    l1720 0F95                      l1704 0F02                      l2432 0476  
                    l2424 0436                      l2416 0419                      l2408 03F4  
                    l2520 019D                      l2512 0167                      l2504 013F  
                    l1730 064A                      l1810 0F19                      l1802 0F15  
                    l2354 0754                      l2346 0742                      l2362 0771  
                    l1722 0F9C                      l1714 0F82                      l1706 0F08  
                    l2426 043B                      l2418 041F                      l2370 0349  
                    l2434 047F                      l2530 01CF                      l2522 01A6  
                    l2514 0170                      l2506 0143                      l2450 0038  
                    l1652 0EC2                      l1740 0679                      l1732 064D  
                    l1660 0F26                      l1900 0566                      l1812 05C4  
                    l1804 0F16                      l2356 075E                      l2348 0745  
                    l1724 0FA2                      l1716 0F84                      l1708 0F0E  
                    l2428 046B                      l2436 0491                      l2380 036C  
                    l2372 0350                      l2540 0203                      l2532 01DD  
                    l2524 01A7                      l2516 0171                      l2508 0156  
                    l2460 0055                      l2452 003E                      l2444 0022  
                    l1654 0EC8                      l1742 0687                      l1734 065A  
                    l1670 0EE0                      l1910 0583                      l1902 056C  
                    l1806 0F17                      l2358 0764                      l1718 0F88  
                    l2710 03C2                      l2382 0381                      l2374 0355  
                    l2366 033E                      l1822 0E84                      l2550 0254  
                    l2542 0208                      l2534 01E4                      l2526 01B6  
                    l2518 0180                      l2470 0075                      l2462 0064  
                    l2454 0043                      l2446 0027                      l1840 0F5E  
                    l1744 0688                      l1736 065E                      l1728 0638  
                    l1680 0EF4                      l1656 0EAC                      l1672 0EE5  
                    l1920 05A0                      l1912 0589                      l1904 0572  
                    l2712 061D                      l1816 0615                      l1808 0F18  
                    l1760 0708                      l1752 06F6                      l2384 0394  
                    l2392 03AE                      l2376 0358                      l2368 0343  
                    l1824 0FD4                      l2560 0286                      l2552 0262  
                    l2544 0227                      l2536 01F2                      l2528 01CE  
                    l2480 00B5                      l2472 0079                      l2464 0069  
                    l2456 0049                      l2448 002D                      l2714 0502  
                    l1850 0497                      l1746 0691                      l1738 0667  
                    l1666 0F28                      l1690 0ECF                      l1682 0EF5  
                    l1658 0EB1                      l1674 0EA2                      l1930 05BD  
                    l1922 05A6                      l1914 058F                      l1906 0578  
                    l1770 0728                      l1762 070C                      l1754 06F8  
                    l2394 03CA                      l2386 0398                      l2378 0368  
                    l1834 0EB7                      l2570 02CD                      l2562 0299  
                    l2554 0267                      l2546 0230                      l2538 01F7  
                    l2490 00D1                      l2482 00BF                      l2474 007F  
                    l2466 006E                      l2458 004F                      l1844 0F6E  
                    l2716 0F54                      l1860 0F3D                      l1748 0697  
                    l1668 0F2E                      l1692 0ED3                      l1684 0EF6  
                    l1940 06C4                      l1932 06A0                      l1676 0EA7  
                    l1924 05AB                      l1916 0594                      l1908 057D  
                    l1772 072F                      l1764 0710                      l1756 06FE  
                    l2396 03D2                      l2388 03A9                      l1836 0EBE  
                    l2708 0FF1                      l1828 0FE9                      l2580 0309  
                    l2572 02DC                      l2564 02A0                      l2556 0273  
                    l2548 0248                      l2492 00D2                      l2484 00C3  
                    l2476 008D                      l2468 0074                      l2718 0F76  
                    l1838 0E99                      l1854 04FA                      l1870 0776  
                    l1694 0ED4                      l1686 0EF7                      l1678 0EF0  
                    l1950 06E9                      l1942 06D1                      l1934 06A9  
                    l1926 05B1                      l1918 059A                      l1766 0721  
                    l1758 0701                      l1774 0735                      l2398 03D6  
                    l2582 030E                      l2574 02EF                      l2566 02A5  
                    l2558 0278                      l2494 0126                      l2486 00C9  
                    l2478 0092                      l1864 0F4C                      l1960 07C4  
                    l1880 07AC                      l1872 077A                      l1696 0ED5  
                    l1688 0EFC                      l1952 06EF                      l1944 06D7  
                    l1936 06AF                      l1928 05B7                      l1768 0727  
                    l2584 031A                      l2576 02FB                      l2568 02C4  
                    l2496 0129                      l2488 00CB                      l1970 07DF  
                    l1962 07C9                      l1954 07AE                      l1874 077D  
                    l1698 0ED6                      l1946 06DD                      l1938 06BD  
                    l1890 054A                      l1882 052F                      l2586 031F  
                    l2578 0300                      l2498 012A                      l1964 07CF  
                    l1956 07B3                      l1876 07AA                      l1948 06E3  
                    l1892 054F                      l1884 0538                      l1966 07D3  
                    l1958 07BB                      l1878 07AB                      l1894 0555  
                    l1886 053E                      l1968 07D9                      l1896 055B  
                    l1888 0544                      l1898 0561                      ?_isr 0070  
                    STR_1 0822                      STR_2 0826                      STR_3 082C  
                    STR_4 0822                      STR_5 0829                      STR_6 0822  
                    STR_7 081A                      STR_8 0822                      STR_9 081E  
                    u1000 0FD2                      u1001 0FD1                      u1110 0742  
                    u1111 0741                      u1200 03F3                      u1201 03F2  
                    u1130 0754                      u1210 03FE                      u1131 0753  
                    u1211 03FD                      u1140 075E                      u1220 0409  
                    u1300 0139                      u1141 075D                      u1125 0746  
                    u1221 0408                      u1205 03EF                      u1301 0138  
                    u1230 041F                      u1310 013E                      u1231 041E  
                    u1311 013D                      u1160 0771                      u1240 0436  
                    u1320 0167                      u1161 0770                      u1145 075A  
                    u1241 0435                      u1225 0405                      u1321 0166  
                    u1250 047F                      u1170 0349                      u1330 0170  
                    u1155 0765                      u1251 047E                      u1171 0348  
                    u1331 016F                      u1260 0491                      u1180 0368  
                    u1340 019D                      u1261 0490                      u1181 0367  
                    u1341 019C                      u1190 03A8                      u1350 01A6  
                    u1270 0074                      u1191 03A7                      u1351 01A5  
                    u1407 0179                      u1271 0073                      u1360 01CE  
                    u1280 00C9                      u1361 01CD                      u1417 018B  
                    u1281 00C8                      u1290 00D1                      u1507 06CC  
                    u1427 01AF                      u1291 00D0                      u1437 01BF  
                    u1447 02D5                      u1457 0330                      u1377 0098  
                    u1467 0533                      u1387 00BB                      u1477 06A4  
                    u1397 012F                      u1487 06B3                      u1497 06BF  
            __CFG_WRT$OFF 0000                      _acel 0067                      _main 0022  
                    _gyro 0065                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000      lcd8_dispString@value 0076            ??_mpu6050_init 0074  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188           __end_of___lldiv 06A0           __end_of___lwdiv 073A  
                   i1l101 0E8A            _tmr1_Interrupt 0EB6           __end_of___lwmod 0776  
                   _TMR1H 000F                     _TMR1L 000E                     _PORTA 0005  
                   _PORTD 0008                     _TRISA 0085                     _TRISD 0088  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000            _i2c_masterRead 07AE  
          _i2c_masterWait 0EC2            _i2c_masterStop 0EA2           __end_of_dpowers 081A  
         ?_i2c_addr_start 0070           __end_of_isdigit 0F12                     _setup 0F12  
                   main@A 0041                     main@D 004B                     main@F 0050  
                   main@G 0037           __end_of_oscInit 0638            _tmr1_Prescaler 0FD3  
          __CFG_BOREN$OFF 0000                     pclath 000A            _lcd8_setCursor 07E4  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0496  
    __size_of_analogInSel 0099            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 033B           _lcd8_dispString 0FA7    __end_of_tmr1_Interrupt 0EC2  
                  ??_main 0034    __end_of_i2c_masterRead 07E4    __end_of_i2c_masterWait 0ECF  
  __end_of_i2c_masterStop 0EAB    __end_of_tmr1_Prescaler 1000                    _ADRESH 001E  
  __end_of_lcd8_setCursor 0800                    ?_setup 0070          __end_of_adcSetup 0EA2  
                  _ANSELH 0189                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of_lcd8_cmd 0F00            __CFG_PWRTE$OFF 0000  
                  ___wmul 0F82           _i2c_masterWrite 0EAB           _i2c_master_init 0776  
               ??___lldiv 007A                 ??___lwdiv 0076                 ??___lwmod 007A  
                  _fuerza 006D           ?_tmr1_Interrupt 0070              __pdataCOMMON 007B  
               ??_isdigit 0072           ?_i2c_masterRead 0072           ?_i2c_masterWait 0070  
         ?_i2c_masterStop 0070                 ??_oscInit 0072                    saved_w 007E  
    __end_of_mpu6050_init 05C3           ?_tmr1_Prescaler 0070                 ??_sprintf 0028  
         ?_lcd8_setCursor 0075                _adcFoscSel 0F5D   __end_of__initialization 001E  
 __end_of_lcd8_dispString 0FD3            __pcstackCOMMON 0070        __size_of_lcd8_init 0056  
           __end_of_setup 0F26        __size_of_delay_1ms 0016               oscInit@freq 0074  
            sprintf@width 0030                   ??_setup 0072                __pbssBANK0 0057  
              _lcd8_write 0ECF   __end_of_i2c_masterWrite 0EB6   __end_of_i2c_master_init 07AE  
      lcd8_setCursor@fila 0076                __pmaintext 0022                   ?___wmul 0072  
      __size_of_tmr1_Init 0006                __pintentry 0004                 ?_adcSetup 0070  
  tmr1_Interrupt@tmr1_Int 0072          ??_i2c_addr_start 0073                 ?_lcd8_cmd 0070  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 0800  
       __end_of_lcd8_init 06F6         __end_of_delay_1ms 0F3C               ?_adcFoscSel 0070  
        ?_lcd8_dispString 0076                   ___lldiv 0638           __size_of___wmul 0025  
                 ___lwdiv 06F6                   ___lwmod 073A                ??_adcSetup 0072  
                 __ptext1 0FD3                   __ptext2 0EB6                   __ptext3 0E84  
                 __ptext4 033B                   __ptext5 0F00                   __ptext6 0F82  
                 __ptext7 073A                   __ptext8 06F6                   __ptext9 0F12  
               _T1CONbits 0010     __size_of_mpu6050_init 0094                   _dpowers 0810  
                 _isdigit 0F00              __size_of_isr 0007                delay_1ms@i 0072  
              ??_lcd8_cmd 0074                   _oscInit 05C3             lcd8_write@dat 0074  
                 main@Ayh 0055                   main@Gxh 0056                   _sprintf 033B  
                 clrloop0 0E92         __end_of_tmr1_Init 0E8A             ??_analogInSel 0072  
    end_of_initialization 001E               ?_lcd8_write 0074          ?_i2c_masterWrite 0070  
        ?_i2c_master_init 0025           ___lldiv@divisor 0072           ___lldiv@counter 0024  
        ??_tmr1_Interrupt 0072              _mpu6050_init 052F          ??_i2c_masterRead 0074  
        ??_i2c_masterWait 0072          ??_i2c_masterStop 0072           i2c_masterRead@a 0072  
               _PORTBbits 0006                 _PORTEbits 0009       __size_of_adcFoscSel 0025  
        ??_tmr1_Prescaler 0072          ??_lcd8_setCursor 0076                 _TRISBbits 0086  
               _TRISCbits 0087       __end_of_analogInSel 052F            adcFoscSel@fosc 0074  
          __end_of___wmul 0FA7             __pidataCOMMON 0003             ?_adcInterrupt 0070  
     __size_of_lcd8_write 0010       start_initialization 000F               __end_of_isr 0E91  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___wmul 0076            ??_adcInterrupt 0072  
       __size_of_adcSetup 0009                 ___latbits 0002             __pcstackBANK0 0020  
       __size_of_lcd8_cmd 0011              _isdigit$1178 0072               _analogInSel 0496  
            ??_adcFoscSel 0072               sprintf@flag 002B               sprintf@prec 002F  
               _lcd8_init 06A0     lcd8_setCursor@columna 0075                 _delay_1ms 0F26  
        ___lwdiv@dividend 0074                  ?___lldiv 0072   tmr1_Prescaler@prescaler 0074  
                ?___lwdiv 0072                  ?___lwmod 0020                 __pstrings 0800  
               _distancia 0069        __end_of_adcFoscSel 0F82                  ?_isdigit 0070  
                ?_oscInit 0070          ___lwdiv@quotient 0077                  ?_sprintf 0025  
          __size_of_setup 0014         interrupt_function 0004            ___wmul@product 0076  
               _tmr1_Init 0E84              ??_lcd8_write 0076                 clear_ram0 0E91  
                _PIE1bits 008C                ?_lcd8_init 0070                ?_delay_1ms 0070  
                _PIR1bits 000C            adcInterrupt@en 0074                _ADCON0bits 001F  
             __stringbase 080F                _ADCON1bits 009F  __size_of_lcd8_dispString 002C  
       ___wmul@multiplier 0072        __end_of_lcd8_write 0EDF               _controlador 006B  
 __size_of_i2c_addr_start 0010                ?_tmr1_Init 0070      __end_of_adcInterrupt 0F5D  
__size_of_i2c_masterWrite 000B  __size_of_i2c_master_init 0038          __size_of___lldiv 0068  
        __size_of___lwdiv 0044          __size_of___lwmod 003C                  _adcSetup 0E99  
      __end_of__stringtab 0810                sprintf@val 002D               lcd8_cmd@cmd 0074  
                _lcd8_cmd 0EEF          __size_of_isdigit 0012           ___lwdiv@divisor 0072  
        __size_of_oscInit 0075           ___lwdiv@counter 0079                  __ptext10 05C3  
                __ptext11 052F                  __ptext20 0F26                  __ptext12 0EA2  
                __ptext21 0776                  __ptext13 0EDF                  __ptext22 0638  
                __ptext14 0EAB                  __ptext23 07AE                  __ptext15 07E4  
                __ptext24 0EC2                  __ptext16 06A0                  __ptext25 0496  
                __ptext17 0EEF                  __ptext26 0E99                  __ptext18 0FA7  
                __ptext27 0F3C                  __ptext19 0ECF                  __ptext28 0F5D  
                __ptext29 0E8A         __CFG_BOR4V$BOR40V 0000          __size_of_sprintf 015B  
           __size_of_main 0319               ??_lcd8_init 0075               ??_delay_1ms 0072  
      i2c_masterRead@temp 0076       i2c_masterWrite@data 0072   __size_of_tmr1_Interrupt 000C  
              _INTCONbits 000B                  isdigit@c 0073   __size_of_i2c_masterRead 0036  
       ??_lcd8_dispString 0078   __size_of_i2c_masterWait 000D   __size_of_i2c_masterStop 0009  
                intlevel1 0000              ?_analogInSel 0070                 sprintf@ap 002C  
               sprintf@sp 0032   __size_of_tmr1_Prescaler 002D   __size_of_lcd8_setCursor 001C  
        ___lwmod@dividend 0022          ___lldiv@dividend 0076               ??_tmr1_Init 0072  
               stringcode 080A                _OSCCONbits 008F                  sprintf@c 0033  
                sprintf@f 0025          ___lldiv@quotient 0020           ___lwmod@divisor 0020  
       ??_i2c_masterWrite 0072           ___lwmod@counter 0024         ??_i2c_master_init 0029  
                stringdir 080A                  stringtab 0800               _SSPCON2bits 0091  
   __size_of_adcInterrupt 0021            _i2c_addr_start 0EDF          i2c_master_init@c 0025  
