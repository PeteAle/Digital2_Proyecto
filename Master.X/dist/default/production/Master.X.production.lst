

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 17 00:09:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  008F                     	;# 
   280  0090                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0105                     	;# 
   299  0107                     	;# 
   300  0108                     	;# 
   301  0109                     	;# 
   302  010C                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0185                     	;# 
   308  0187                     	;# 
   309  0188                     	;# 
   310  0189                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  008F                     	;# 
   358  0090                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0094                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  0105                     	;# 
   377  0107                     	;# 
   378  0108                     	;# 
   379  0109                     	;# 
   380  010C                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  0185                     	;# 
   386  0187                     	;# 
   387  0188                     	;# 
   388  0189                     	;# 
   389  018C                     	;# 
   390  018D                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  000E                     	;# 
   406  000E                     	;# 
   407  000F                     	;# 
   408  0010                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0014                     	;# 
   413  0015                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001D                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  0081                     	;# 
   427  0085                     	;# 
   428  0086                     	;# 
   429  0087                     	;# 
   430  0088                     	;# 
   431  0089                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  008E                     	;# 
   435  008F                     	;# 
   436  0090                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  0105                     	;# 
   455  0107                     	;# 
   456  0108                     	;# 
   457  0109                     	;# 
   458  010C                     	;# 
   459  010C                     	;# 
   460  010D                     	;# 
   461  010E                     	;# 
   462  010F                     	;# 
   463  0185                     	;# 
   464  0187                     	;# 
   465  0188                     	;# 
   466  0189                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000D                     	;# 
   483  000E                     	;# 
   484  000E                     	;# 
   485  000F                     	;# 
   486  0010                     	;# 
   487  0011                     	;# 
   488  0012                     	;# 
   489  0013                     	;# 
   490  0014                     	;# 
   491  0015                     	;# 
   492  0015                     	;# 
   493  0016                     	;# 
   494  0017                     	;# 
   495  0018                     	;# 
   496  0019                     	;# 
   497  001A                     	;# 
   498  001B                     	;# 
   499  001B                     	;# 
   500  001C                     	;# 
   501  001D                     	;# 
   502  001E                     	;# 
   503  001F                     	;# 
   504  0081                     	;# 
   505  0085                     	;# 
   506  0086                     	;# 
   507  0087                     	;# 
   508  0088                     	;# 
   509  0089                     	;# 
   510  008C                     	;# 
   511  008D                     	;# 
   512  008E                     	;# 
   513  008F                     	;# 
   514  0090                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0093                     	;# 
   518  0093                     	;# 
   519  0093                     	;# 
   520  0094                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009C                     	;# 
   529  009D                     	;# 
   530  009E                     	;# 
   531  009F                     	;# 
   532  0105                     	;# 
   533  0107                     	;# 
   534  0108                     	;# 
   535  0109                     	;# 
   536  010C                     	;# 
   537  010C                     	;# 
   538  010D                     	;# 
   539  010E                     	;# 
   540  010F                     	;# 
   541  0185                     	;# 
   542  0187                     	;# 
   543  0188                     	;# 
   544  0189                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  000E                     	;# 
   563  000F                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001D                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  0081                     	;# 
   583  0085                     	;# 
   584  0086                     	;# 
   585  0087                     	;# 
   586  0088                     	;# 
   587  0089                     	;# 
   588  008C                     	;# 
   589  008D                     	;# 
   590  008E                     	;# 
   591  008F                     	;# 
   592  0090                     	;# 
   593  0091                     	;# 
   594  0092                     	;# 
   595  0093                     	;# 
   596  0093                     	;# 
   597  0093                     	;# 
   598  0094                     	;# 
   599  0095                     	;# 
   600  0096                     	;# 
   601  0097                     	;# 
   602  0098                     	;# 
   603  0099                     	;# 
   604  009A                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  009F                     	;# 
   610  0105                     	;# 
   611  0107                     	;# 
   612  0108                     	;# 
   613  0109                     	;# 
   614  010C                     	;# 
   615  010C                     	;# 
   616  010D                     	;# 
   617  010E                     	;# 
   618  010F                     	;# 
   619  0185                     	;# 
   620  0187                     	;# 
   621  0188                     	;# 
   622  0189                     	;# 
   623  018C                     	;# 
   624  018D                     	;# 
   625  0000                     	;# 
   626  0001                     	;# 
   627  0002                     	;# 
   628  0003                     	;# 
   629  0004                     	;# 
   630  0005                     	;# 
   631  0006                     	;# 
   632  0007                     	;# 
   633  0008                     	;# 
   634  0009                     	;# 
   635  000A                     	;# 
   636  000B                     	;# 
   637  000C                     	;# 
   638  000D                     	;# 
   639  000E                     	;# 
   640  000E                     	;# 
   641  000F                     	;# 
   642  0010                     	;# 
   643  0011                     	;# 
   644  0012                     	;# 
   645  0013                     	;# 
   646  0014                     	;# 
   647  0015                     	;# 
   648  0015                     	;# 
   649  0016                     	;# 
   650  0017                     	;# 
   651  0018                     	;# 
   652  0019                     	;# 
   653  001A                     	;# 
   654  001B                     	;# 
   655  001B                     	;# 
   656  001C                     	;# 
   657  001D                     	;# 
   658  001E                     	;# 
   659  001F                     	;# 
   660  0081                     	;# 
   661  0085                     	;# 
   662  0086                     	;# 
   663  0087                     	;# 
   664  0088                     	;# 
   665  0089                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  008F                     	;# 
   670  0090                     	;# 
   671  0091                     	;# 
   672  0092                     	;# 
   673  0093                     	;# 
   674  0093                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0095                     	;# 
   678  0096                     	;# 
   679  0097                     	;# 
   680  0098                     	;# 
   681  0099                     	;# 
   682  009A                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  009F                     	;# 
   688  0105                     	;# 
   689  0107                     	;# 
   690  0108                     	;# 
   691  0109                     	;# 
   692  010C                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  010F                     	;# 
   697  0185                     	;# 
   698  0187                     	;# 
   699  0188                     	;# 
   700  0189                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703                           
   704                           	psect	idataCOMMON
   705  0003                     __pidataCOMMON:	
   706                           
   707                           ;initializer for _i
   708  0003  3401               	retlw	1
   709                           
   710                           	psect	strings
   711  07BF                     __pstrings:	
   712  07BF                     stringtab:	
   713  07BF                     __stringtab:	
   714                           
   715                           ;	String table - string pointers are 1 byte each
   716  07BF  1BFF               	btfsc	btemp+1,7
   717  07C0  2FC9               	ljmp	stringcode
   718  07C1  1383               	bcf	3,7
   719  07C2  187F               	btfsc	btemp+1,0
   720  07C3  1783               	bsf	3,7
   721  07C4  0800               	movf	0,w
   722  07C5  0A84               	incf	4,f
   723  07C6  1903               	skipnz
   724  07C7  0AFF               	incf	btemp+1,f
   725  07C8  0008               	return
   726  07C9                     stringcode:	
   727  07C9                     stringdir:	
   728  07C9  3007               	movlw	high stringdir
   729  07CA  008A               	movwf	10
   730  07CB  0804               	movf	4,w
   731  07CC  0A84               	incf	4,f
   732  07CD  0782               	addwf	2,f
   733  07CE                     __stringbase:	
   734  07CE  3400               	retlw	0
   735  07CF                     __end_of__stringtab:	
   736  07CF                     _dpowers:	
   737  07CF  3401               	retlw	1
   738  07D0  3400               	retlw	0
   739  07D1  340A               	retlw	10
   740  07D2  3400               	retlw	0
   741  07D3  3464               	retlw	100
   742  07D4  3400               	retlw	0
   743  07D5  34E8               	retlw	232
   744  07D6  3403               	retlw	3
   745  07D7  3410               	retlw	16
   746  07D8  3427               	retlw	39
   747  07D9                     __end_of_dpowers:	
   748  000B                     _INTCONbits	set	11
   749  0013                     _SSPBUF	set	19
   750  0014                     _SSPCON	set	20
   751  000C                     _PIR1bits	set	12
   752  0009                     _PORTEbits	set	9
   753  0005                     _PORTA	set	5
   754  0008                     _PORTD	set	8
   755  0010                     _T1CONbits	set	16
   756  000E                     _TMR1L	set	14
   757  000F                     _TMR1H	set	15
   758  0006                     _PORTBbits	set	6
   759  001E                     _ADRESH	set	30
   760  001F                     _ADCON0bits	set	31
   761  009F                     _ADCON1bits	set	159
   762  0091                     _SSPCON2bits	set	145
   763  0087                     _TRISCbits	set	135
   764  0094                     _SSPSTAT	set	148
   765  0093                     _SSPADD	set	147
   766  0091                     _SSPCON2	set	145
   767  008C                     _PIE1bits	set	140
   768  008F                     _OSCCONbits	set	143
   769  0089                     _TRISE	set	137
   770  0088                     _TRISD	set	136
   771  0086                     _TRISBbits	set	134
   772  0085                     _TRISA	set	133
   773  0189                     _ANSELH	set	393
   774  0188                     _ANSEL	set	392
   775  07D9                     STR_7:	
   776  07D9  3447               	retlw	71	;'G'
   777  07DA  3478               	retlw	120	;'x'
   778  07DB  343A               	retlw	58	;':'
   779  07DC  3400               	retlw	0
   780  07DD                     STR_9:	
   781  07DD  3441               	retlw	65	;'A'
   782  07DE  3479               	retlw	121	;'y'
   783  07DF  343A               	retlw	58	;':'
   784  07E0  3400               	retlw	0
   785  07E1                     STR_1:	
   786  07E1  3425               	retlw	37	;'%'
   787  07E2  3433               	retlw	51	;'3'
   788  07E3  3475               	retlw	117	;'u'
   789  07E4  3400               	retlw	0
   790  07E5                     STR_2:	
   791  07E5  3464               	retlw	100	;'d'
   792  07E6  343A               	retlw	58	;':'
   793  07E7  3400               	retlw	0
   794  07E8                     STR_5:	
   795  07E8  3466               	retlw	102	;'f'
   796  07E9  343A               	retlw	58	;':'
   797  07EA  3400               	retlw	0
   798  07EB                     STR_3:	
   799  07EB  3463               	retlw	99	;'c'
   800  07EC  346D               	retlw	109	;'m'
   801  07ED  3400               	retlw	0
   802  07E1                     
   803                           ; #config settings
   804  0000                     
   805                           	psect	cinit
   806  000F                     start_initialization:	
   807  000F                     __initialization:	
   808                           
   809                           ; Initialize objects allocated to COMMON
   810  000F  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   811  0014  00FB               	movwf	__pdataCOMMON& (0+127)
   812                           
   813                           ; Clear objects allocated to BANK0
   814  0015  1383               	bcf	3,7	;select IRP bank0
   815  0016  3057               	movlw	low __pbssBANK0
   816  0017  0084               	movwf	4
   817  0018  306D               	movlw	low (__pbssBANK0+22)
   818  0019  120A  158A  2687  120A  118A  	fcall	clear_ram0
   819  001E                     end_of_initialization:	
   820                           ;End of C runtime variable initialization code
   821                           
   822  001E                     __end_of__initialization:	
   823  001E  0183               	clrf	3
   824  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   825                           
   826                           	psect	dataCOMMON
   827  007B                     __pdataCOMMON:	
   828  007B                     _i:	
   829  007B                     	ds	1
   830                           
   831                           	psect	bssBANK0
   832  0057                     __pbssBANK0:	
   833  0057                     _Gz:	
   834  0057                     	ds	2
   835  0059                     _Gy:	
   836  0059                     	ds	2
   837  005B                     _Gx:	
   838  005B                     	ds	2
   839  005D                     _T:	
   840  005D                     	ds	2
   841  005F                     _Az:	
   842  005F                     	ds	2
   843  0061                     _Ay:	
   844  0061                     	ds	2
   845  0063                     _Ax:	
   846  0063                     	ds	2
   847  0065                     _gyro:	
   848  0065                     	ds	2
   849  0067                     _acel:	
   850  0067                     	ds	2
   851  0069                     _distancia:	
   852  0069                     	ds	2
   853  006B                     _luz:	
   854  006B                     	ds	1
   855  006C                     _fuerza:	
   856  006C                     	ds	1
   857                           
   858                           	psect	clrtext
   859  0E87                     clear_ram0:	
   860                           ;	Called with FSR containing the base address, and
   861                           ;	W with the last address+1
   862                           
   863  0E87  0064               	clrwdt	;clear the watchdog before getting into this loop
   864  0E88                     clrloop0:	
   865  0E88  0180               	clrf	0	;clear RAM location pointed to by FSR
   866  0E89  0A84               	incf	4,f	;increment pointer
   867  0E8A  0604               	xorwf	4,w	;XOR with final address
   868  0E8B  1903               	btfsc	3,2	;have we reached the end yet?
   869  0E8C  3400               	retlw	0	;all done for this memory range, return
   870  0E8D  0604               	xorwf	4,w	;XOR again to restore value
   871  0E8E  2E88               	goto	clrloop0	;do the next byte
   872                           
   873                           	psect	cstackCOMMON
   874  0070                     __pcstackCOMMON:	
   875  0070                     ?_isdigit:	
   876  0070                     ?_setup:	
   877                           ; 1 bit 
   878                           
   879  0070                     ?_oscInit:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_tmr1_Init:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_tmr1_Prescaler:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_tmr1_Interrupt:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_adcSetup:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_adcFoscSel:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_analogInSel:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_adcInterrupt:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_mpu6050_init:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_lcd8_init:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_i2c_addr_start:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_i2c_masterStop:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_i2c_masterWrite:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_delay_1ms:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_lcd8_cmd:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_isr:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ??_isr:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_main:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_i2c_masterWait:	
   934                           ; 1 bytes @ 0x0
   935                           
   936                           
   937                           ; 1 bytes @ 0x0
   938  0070                     	ds	2
   939  0072                     ??_setup:	
   940  0072                     ??_oscInit:	
   941                           ; 1 bytes @ 0x2
   942                           
   943  0072                     ??_tmr1_Init:	
   944                           ; 1 bytes @ 0x2
   945                           
   946  0072                     ??_tmr1_Prescaler:	
   947                           ; 1 bytes @ 0x2
   948                           
   949  0072                     ??_tmr1_Interrupt:	
   950                           ; 1 bytes @ 0x2
   951                           
   952  0072                     ??_adcSetup:	
   953                           ; 1 bytes @ 0x2
   954                           
   955  0072                     ??_adcFoscSel:	
   956                           ; 1 bytes @ 0x2
   957                           
   958  0072                     ??_analogInSel:	
   959                           ; 1 bytes @ 0x2
   960                           
   961  0072                     ??_adcInterrupt:	
   962                           ; 1 bytes @ 0x2
   963                           
   964  0072                     ??_i2c_masterStop:	
   965                           ; 1 bytes @ 0x2
   966                           
   967  0072                     ??_i2c_masterWrite:	
   968                           ; 1 bytes @ 0x2
   969                           
   970  0072                     ??_delay_1ms:	
   971                           ; 1 bytes @ 0x2
   972                           
   973  0072                     ??_isdigit:	
   974                           ; 1 bytes @ 0x2
   975                           
   976  0072                     ??_i2c_masterWait:	
   977                           ; 1 bytes @ 0x2
   978                           
   979  0072                     ?_i2c_masterRead:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0072                     ?___wmul:	
   983                           ; 2 bytes @ 0x2
   984                           
   985  0072                     ?___lwdiv:	
   986                           ; 2 bytes @ 0x2
   987                           
   988  0072                     ?___lldiv:	
   989                           ; 2 bytes @ 0x2
   990                           
   991  0072                     tmr1_Interrupt@tmr1_Int:	
   992                           ; 4 bytes @ 0x2
   993                           
   994  0072                     i2c_masterWrite@data:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0072                     _isdigit$1177:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0072                     delay_1ms@i:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0072                     i2c_masterRead@a:	
  1004                           ; 2 bytes @ 0x2
  1005                           
  1006  0072                     ___wmul@multiplier:	
  1007                           ; 2 bytes @ 0x2
  1008                           
  1009  0072                     ___lwdiv@divisor:	
  1010                           ; 2 bytes @ 0x2
  1011                           
  1012  0072                     ___lldiv@divisor:	
  1013                           ; 2 bytes @ 0x2
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x2
  1017  0072                     	ds	1
  1018  0073                     ??_i2c_addr_start:	
  1019  0073                     i2c_addr_start@addr:	
  1020                           ; 1 bytes @ 0x3
  1021                           
  1022  0073                     isdigit@c:	
  1023                           ; 1 bytes @ 0x3
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0x3
  1027  0073                     	ds	1
  1028  0074                     ??_mpu6050_init:	
  1029  0074                     ??_i2c_masterRead:	
  1030                           ; 1 bytes @ 0x4
  1031                           
  1032  0074                     ??_lcd8_cmd:	
  1033                           ; 1 bytes @ 0x4
  1034                           
  1035  0074                     ?_lcd8_write:	
  1036                           ; 1 bytes @ 0x4
  1037                           
  1038  0074                     oscInit@freq:	
  1039                           ; 1 bytes @ 0x4
  1040                           
  1041  0074                     lcd8_cmd@cmd:	
  1042                           ; 1 bytes @ 0x4
  1043                           
  1044  0074                     tmr1_Prescaler@prescaler:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047  0074                     adcInterrupt@en:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050  0074                     analogInSel@analogIn:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053  0074                     adcFoscSel@fosc:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056  0074                     lcd8_write@dat:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059  0074                     ___wmul@multiplicand:	
  1060                           ; 2 bytes @ 0x4
  1061                           
  1062  0074                     ___lwdiv@dividend:	
  1063                           ; 2 bytes @ 0x4
  1064                           
  1065                           
  1066                           ; 2 bytes @ 0x4
  1067  0074                     	ds	1
  1068  0075                     ??_lcd8_init:	
  1069  0075                     ?_lcd8_setCursor:	
  1070                           ; 1 bytes @ 0x5
  1071                           
  1072  0075                     lcd8_setCursor@columna:	
  1073                           ; 1 bytes @ 0x5
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x5
  1077  0075                     	ds	1
  1078  0076                     ??_lcd8_setCursor:	
  1079  0076                     ?_lcd8_dispString:	
  1080                           ; 1 bytes @ 0x6
  1081                           
  1082  0076                     ??_lcd8_write:	
  1083                           ; 1 bytes @ 0x6
  1084                           
  1085  0076                     ??___wmul:	
  1086                           ; 1 bytes @ 0x6
  1087                           
  1088  0076                     ??___lwdiv:	
  1089                           ; 1 bytes @ 0x6
  1090                           
  1091  0076                     lcd8_setCursor@fila:	
  1092                           ; 1 bytes @ 0x6
  1093                           
  1094  0076                     lcd8_dispString@value:	
  1095                           ; 1 bytes @ 0x6
  1096                           
  1097  0076                     i2c_masterRead@temp:	
  1098                           ; 2 bytes @ 0x6
  1099                           
  1100  0076                     ___wmul@product:	
  1101                           ; 2 bytes @ 0x6
  1102                           
  1103  0076                     ___lldiv@dividend:	
  1104                           ; 2 bytes @ 0x6
  1105                           
  1106                           
  1107                           ; 4 bytes @ 0x6
  1108  0076                     	ds	1
  1109  0077                     ___lwdiv@quotient:	
  1110                           
  1111                           ; 2 bytes @ 0x7
  1112  0077                     	ds	1
  1113  0078                     ??_lcd8_dispString:	
  1114                           
  1115                           ; 1 bytes @ 0x8
  1116  0078                     	ds	1
  1117  0079                     ___lwdiv@counter:	
  1118                           
  1119                           ; 1 bytes @ 0x9
  1120  0079                     	ds	1
  1121  007A                     ??___lldiv:	
  1122  007A                     ??___lwmod:	
  1123                           ; 1 bytes @ 0xA
  1124                           
  1125                           
  1126                           ; 1 bytes @ 0xA
  1127  007A                     	ds	1
  1128                           
  1129                           	psect	cstackBANK0
  1130  0020                     __pcstackBANK0:	
  1131  0020                     ?___lwmod:	
  1132  0020                     ___lwmod@divisor:	
  1133                           ; 2 bytes @ 0x0
  1134                           
  1135  0020                     ___lldiv@quotient:	
  1136                           ; 2 bytes @ 0x0
  1137                           
  1138                           
  1139                           ; 4 bytes @ 0x0
  1140  0020                     	ds	2
  1141  0022                     ___lwmod@dividend:	
  1142                           
  1143                           ; 2 bytes @ 0x2
  1144  0022                     	ds	2
  1145  0024                     ___lldiv@counter:	
  1146  0024                     ___lwmod@counter:	
  1147                           ; 1 bytes @ 0x4
  1148                           
  1149                           
  1150                           ; 1 bytes @ 0x4
  1151  0024                     	ds	1
  1152  0025                     ?_i2c_master_init:	
  1153  0025                     ?_sprintf:	
  1154                           ; 1 bytes @ 0x5
  1155                           
  1156  0025                     sprintf@f:	
  1157                           ; 2 bytes @ 0x5
  1158                           
  1159  0025                     i2c_master_init@c:	
  1160                           ; 1 bytes @ 0x5
  1161                           
  1162                           
  1163                           ; 4 bytes @ 0x5
  1164  0025                     	ds	3
  1165  0028                     ??_sprintf:	
  1166                           
  1167                           ; 1 bytes @ 0x8
  1168  0028                     	ds	1
  1169  0029                     ??_i2c_master_init:	
  1170                           
  1171                           ; 1 bytes @ 0x9
  1172  0029                     	ds	2
  1173  002B                     sprintf@flag:	
  1174                           
  1175                           ; 1 bytes @ 0xB
  1176  002B                     	ds	1
  1177  002C                     sprintf@ap:	
  1178                           
  1179                           ; 1 bytes @ 0xC
  1180  002C                     	ds	1
  1181  002D                     sprintf@val:	
  1182                           
  1183                           ; 2 bytes @ 0xD
  1184  002D                     	ds	2
  1185  002F                     sprintf@prec:	
  1186                           
  1187                           ; 1 bytes @ 0xF
  1188  002F                     	ds	1
  1189  0030                     sprintf@width:	
  1190                           
  1191                           ; 2 bytes @ 0x10
  1192  0030                     	ds	2
  1193  0032                     sprintf@sp:	
  1194                           
  1195                           ; 1 bytes @ 0x12
  1196  0032                     	ds	1
  1197  0033                     sprintf@c:	
  1198                           
  1199                           ; 1 bytes @ 0x13
  1200  0033                     	ds	1
  1201  0034                     ??_main:	
  1202                           
  1203                           ; 1 bytes @ 0x14
  1204  0034                     	ds	3
  1205  0037                     main@G:	
  1206                           
  1207                           ; 10 bytes @ 0x17
  1208  0037                     	ds	10
  1209  0041                     main@A:	
  1210                           
  1211                           ; 10 bytes @ 0x21
  1212  0041                     	ds	10
  1213  004B                     main@D:	
  1214                           
  1215                           ; 5 bytes @ 0x2B
  1216  004B                     	ds	5
  1217  0050                     main@F:	
  1218                           
  1219                           ; 5 bytes @ 0x30
  1220  0050                     	ds	5
  1221  0055                     main@Ayh:	
  1222                           
  1223                           ; 1 bytes @ 0x35
  1224  0055                     	ds	1
  1225  0056                     main@Gxh:	
  1226                           
  1227                           ; 1 bytes @ 0x36
  1228  0056                     	ds	1
  1229                           
  1230                           	psect	maintext
  1231  0022                     __pmaintext:	
  1232 ;;
  1233 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1234 ;;
  1235 ;; *************** function _main *****************
  1236 ;; Defined at:
  1237 ;;		line 57 in file "master.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  A              10   33[BANK0 ] unsigned char [10]
  1242 ;;  G              10   23[BANK0 ] unsigned char [10]
  1243 ;;  F               5   48[BANK0 ] unsigned char [5]
  1244 ;;  D               5   43[BANK0 ] unsigned char [5]
  1245 ;;  Gxh             1   54[BANK0 ] unsigned char 
  1246 ;;  Ayh             1   53[BANK0 ] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : B00/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         0       0       0       0       0
  1257 ;;      Locals:         0      32       0       0       0
  1258 ;;      Temps:          0       3       0       0       0
  1259 ;;      Totals:         0      35       0       0       0
  1260 ;;Total ram usage:       35 bytes
  1261 ;; Hardware stack levels required when called:    5
  1262 ;; This function calls:
  1263 ;;		___lwdiv
  1264 ;;		_adcFoscSel
  1265 ;;		_adcInterrupt
  1266 ;;		_adcSetup
  1267 ;;		_analogInSel
  1268 ;;		_delay_1ms
  1269 ;;		_i2c_addr_start
  1270 ;;		_i2c_masterRead
  1271 ;;		_i2c_masterStop
  1272 ;;		_i2c_masterWrite
  1273 ;;		_i2c_master_init
  1274 ;;		_lcd8_dispString
  1275 ;;		_lcd8_init
  1276 ;;		_lcd8_setCursor
  1277 ;;		_mpu6050_init
  1278 ;;		_oscInit
  1279 ;;		_setup
  1280 ;;		_sprintf
  1281 ;;		_tmr1_Init
  1282 ;;		_tmr1_Interrupt
  1283 ;;		_tmr1_Prescaler
  1284 ;; This function is called by:
  1285 ;;		Startup code after reset
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _main
  1291  0022                     _main:	
  1292  0022                     l2434:	
  1293                           ;incstack = 0
  1294                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1295                           
  1296                           
  1297                           ;master.c: 58:     setup();
  1298  0022  120A  158A  26F6  120A  118A  	fcall	_setup
  1299  0027                     l2436:	
  1300                           
  1301                           ;master.c: 59:     oscInit(1);
  1302  0027  3001               	movlw	1
  1303  0028  120A  118A  259E  120A  118A  	fcall	_oscInit
  1304  002D                     l2438:	
  1305                           
  1306                           ;master.c: 60:     tmr1_Init();
  1307  002D  120A  158A  267A  120A  118A  	fcall	_tmr1_Init
  1308                           
  1309                           ;master.c: 61:     tmr1_Prescaler(1);
  1310  0032  3001               	movlw	1
  1311  0033  120A  158A  27D3  120A  118A  	fcall	_tmr1_Prescaler
  1312  0038                     l2440:	
  1313                           
  1314                           ;master.c: 62:     tmr1_Interrupt(0);
  1315  0038  3000               	movlw	0
  1316  0039  120A  158A  26AC  120A  118A  	fcall	_tmr1_Interrupt
  1317  003E                     l2442:	
  1318                           
  1319                           ;master.c: 63:     adcSetup();
  1320  003E  120A  158A  268F  120A  118A  	fcall	_adcSetup
  1321  0043                     l2444:	
  1322                           
  1323                           ;master.c: 64:     adcFoscSel(1);
  1324  0043  3001               	movlw	1
  1325  0044  120A  158A  275D  120A  118A  	fcall	_adcFoscSel
  1326  0049                     l2446:	
  1327                           
  1328                           ;master.c: 65:     analogInSel(9);
  1329  0049  3009               	movlw	9
  1330  004A  120A  118A  2471  120A  118A  	fcall	_analogInSel
  1331  004F                     l2448:	
  1332                           
  1333                           ;master.c: 66:     adcInterrupt(0);
  1334  004F  3000               	movlw	0
  1335  0050  120A  158A  273C  120A  118A  	fcall	_adcInterrupt
  1336  0055                     l2450:	
  1337                           
  1338                           ;master.c: 67:     i2c_master_init(100000);
  1339  0055  3000               	movlw	0
  1340  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0058  00A8               	movwf	i2c_master_init@c+3
  1343  0059  3001               	movlw	1
  1344  005A  00A7               	movwf	i2c_master_init@c+2
  1345  005B  3086               	movlw	134
  1346  005C  00A6               	movwf	i2c_master_init@c+1
  1347  005D  30A0               	movlw	160
  1348  005E  00A5               	movwf	i2c_master_init@c
  1349  005F  120A  118A  2751  120A  118A  	fcall	_i2c_master_init
  1350  0064                     l2452:	
  1351                           
  1352                           ;master.c: 68:     mpu6050_init();
  1353  0064  120A  118A  250A  120A  118A  	fcall	_mpu6050_init
  1354  0069                     l2454:	
  1355                           
  1356                           ;master.c: 69:     lcd8_init();
  1357  0069  120A  118A  267B  120A  118A  	fcall	_lcd8_init
  1358  006E                     l2456:	
  1359                           
  1360                           ;master.c: 72:         if (ADCON0bits.GO_DONE == 0){
  1361  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1362  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0070  189F               	btfsc	31,1	;volatile
  1364  0071  2873               	goto	u1271
  1365  0072  2874               	goto	u1270
  1366  0073                     u1271:	
  1367  0073  2875               	goto	l2460
  1368  0074                     u1270:	
  1369  0074                     l2458:	
  1370                           
  1371                           ;master.c: 73:             ADCON0bits.GO_DONE = 1;
  1372  0074  149F               	bsf	31,1	;volatile
  1373  0075                     l2460:	
  1374                           
  1375                           ;master.c: 75:         luz = ADRESH;
  1376  0075  081E               	movf	30,w	;volatile
  1377  0076  00B4               	movwf	??_main
  1378  0077  0834               	movf	??_main,w
  1379  0078  00EB               	movwf	_luz
  1380  0079                     l2462:	
  1381                           
  1382                           ;master.c: 77:         i2c_addr_start(0x11);
  1383  0079  3011               	movlw	17
  1384  007A  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  1385  007F                     l2464:	
  1386                           
  1387                           ;master.c: 78:         fuerza = i2c_masterRead(0);
  1388  007F  3000               	movlw	0
  1389  0080  00F2               	movwf	i2c_masterRead@a
  1390  0081  00F3               	movwf	i2c_masterRead@a+1
  1391  0082  120A  118A  2789  120A  118A  	fcall	_i2c_masterRead
  1392  0087  0872               	movf	?_i2c_masterRead,w
  1393  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1395  008A  00B4               	movwf	??_main
  1396  008B  0834               	movf	??_main,w
  1397  008C  00EC               	movwf	_fuerza
  1398  008D                     l2466:	
  1399                           
  1400                           ;master.c: 79:         i2c_masterStop();
  1401  008D  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  1402  0092                     l2468:	
  1403                           
  1404                           ;master.c: 80:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1405  0092  300D               	movlw	13
  1406  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1408  0095  00B5               	movwf	??_main+1
  1409  0096  30FB               	movlw	251
  1410  0097  00B4               	movwf	??_main
  1411  0098                     u1377:	
  1412  0098  0BB4               	decfsz	??_main,f
  1413  0099  2898               	goto	u1377
  1414  009A  0BB5               	decfsz	??_main+1,f
  1415  009B  2898               	goto	u1377
  1416  009C                     l2470:	
  1417                           
  1418                           ;master.c: 82:         if (luz < 5){
  1419  009C  3005               	movlw	5
  1420  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1421  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1422  009F  026B               	subwf	_luz,w
  1423  00A0  1803               	skipnc
  1424  00A1  28A3               	goto	u1281
  1425  00A2  28A4               	goto	u1280
  1426  00A3                     u1281:	
  1427  00A3  28A6               	goto	l2474
  1428  00A4                     u1280:	
  1429  00A4                     l2472:	
  1430                           
  1431                           ;master.c: 83:             PORTBbits.RB4 = 1;
  1432  00A4  1606               	bsf	6,4	;volatile
  1433                           
  1434                           ;master.c: 84:         }
  1435  00A5  28AD               	goto	l2478
  1436  00A6                     l2474:	
  1437  00A6  3007               	movlw	7
  1438  00A7  026B               	subwf	_luz,w
  1439  00A8  1C03               	skipc
  1440  00A9  28AB               	goto	u1291
  1441  00AA  28AC               	goto	u1290
  1442  00AB                     u1291:	
  1443  00AB  28AD               	goto	l2478
  1444  00AC                     u1290:	
  1445  00AC                     l2476:	
  1446                           
  1447                           ;master.c: 86:             PORTBbits.RB4 = 0;
  1448  00AC  1206               	bcf	6,4	;volatile
  1449  00AD                     l2478:	
  1450                           
  1451                           ;master.c: 89:         i2c_addr_start(0xD0);
  1452  00AD  30D0               	movlw	208
  1453  00AE  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  1454                           
  1455                           ;master.c: 90:         i2c_masterWrite(0x3D);
  1456  00B3  303D               	movlw	61
  1457  00B4  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  1458                           
  1459                           ;master.c: 91:         i2c_masterStop();
  1460  00B9  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  1461                           
  1462                           ;master.c: 92:         i2c_addr_start(0xD1);
  1463  00BE  30D1               	movlw	209
  1464  00BF  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  1465                           
  1466                           ;master.c: 93:         unsigned char Ayh = i2c_masterRead(0);
  1467  00C4  3000               	movlw	0
  1468  00C5  00F2               	movwf	i2c_masterRead@a
  1469  00C6  00F3               	movwf	i2c_masterRead@a+1
  1470  00C7  120A  118A  2789  120A  118A  	fcall	_i2c_masterRead
  1471  00CC  0872               	movf	?_i2c_masterRead,w
  1472  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1473  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1474  00CF  00B4               	movwf	??_main
  1475  00D0  0834               	movf	??_main,w
  1476  00D1  00D5               	movwf	main@Ayh
  1477                           
  1478                           ;master.c: 94:         i2c_masterStop();
  1479  00D2  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  1480                           
  1481                           ;master.c: 95:         i2c_addr_start(0xD0);
  1482  00D7  30D0               	movlw	208
  1483  00D8  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  1484                           
  1485                           ;master.c: 96:         i2c_masterWrite(0x43);
  1486  00DD  3043               	movlw	67
  1487  00DE  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  1488                           
  1489                           ;master.c: 97:         i2c_masterStop();
  1490  00E3  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  1491                           
  1492                           ;master.c: 98:         i2c_addr_start(0xD1);
  1493  00E8  30D1               	movlw	209
  1494  00E9  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  1495                           
  1496                           ;master.c: 99:         unsigned char Gxh = i2c_masterRead(0);
  1497  00EE  3000               	movlw	0
  1498  00EF  00F2               	movwf	i2c_masterRead@a
  1499  00F0  00F3               	movwf	i2c_masterRead@a+1
  1500  00F1  120A  118A  2789  120A  118A  	fcall	_i2c_masterRead
  1501  00F6  0872               	movf	?_i2c_masterRead,w
  1502  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1503  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1504  00F9  00B4               	movwf	??_main
  1505  00FA  0834               	movf	??_main,w
  1506  00FB  00D6               	movwf	main@Gxh
  1507                           
  1508                           ;master.c: 100:         i2c_masterStop();
  1509  00FC  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  1510  0101                     l2480:	
  1511                           
  1512                           ;master.c: 102:         TMR1H = 0;
  1513  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0103  018F               	clrf	15	;volatile
  1516  0104                     l2482:	
  1517                           
  1518                           ;master.c: 103:         TMR1L = 0;
  1519  0104  018E               	clrf	14	;volatile
  1520  0105                     l2484:	
  1521                           
  1522                           ;master.c: 104:         PORTBbits.RB0 = 1;
  1523  0105  1406               	bsf	6,0	;volatile
  1524  0106                     l2486:	
  1525                           
  1526                           ;master.c: 105:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1527  0106  3002               	movlw	2
  1528  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0109  00B4               	movwf	??_main
  1531  010A                     u1387:	
  1532  010A  0BB4               	decfsz	??_main,f
  1533  010B  290A               	goto	u1387
  1534  010C  0000               	nop
  1535  010D                     l2488:	
  1536                           
  1537                           ;master.c: 106:         PORTBbits.RB0 = 0;
  1538  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1539  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1540  010F  1006               	bcf	6,0	;volatile
  1541  0110                     l109:	
  1542                           ;master.c: 107:         while(!PORTBbits.RB1);
  1543                           
  1544  0110  1C86               	btfss	6,1	;volatile
  1545  0111  2913               	goto	u1301
  1546  0112  2914               	goto	u1300
  1547  0113                     u1301:	
  1548  0113  2910               	goto	l109
  1549  0114                     u1300:	
  1550  0114                     l111:	
  1551                           
  1552                           ;master.c: 108:         T1CONbits.TMR1ON = 1;
  1553  0114  1410               	bsf	16,0	;volatile
  1554  0115                     l112:	
  1555                           ;master.c: 109:         while(PORTBbits.RB1);
  1556                           
  1557  0115  1886               	btfsc	6,1	;volatile
  1558  0116  2918               	goto	u1311
  1559  0117  2919               	goto	u1310
  1560  0118                     u1311:	
  1561  0118  2915               	goto	l112
  1562  0119                     u1310:	
  1563  0119                     l114:	
  1564                           
  1565                           ;master.c: 110:         T1CONbits.TMR1ON = 0;
  1566  0119  1010               	bcf	16,0	;volatile
  1567  011A                     l2490:	
  1568                           
  1569                           ;master.c: 112:         distancia = (TMR1L | (TMR1H<<8));
  1570  011A  080F               	movf	15,w	;volatile
  1571  011B  00EA               	movwf	_distancia+1
  1572  011C  080E               	movf	14,w	;volatile
  1573  011D  00E9               	movwf	_distancia
  1574  011E                     l2492:	
  1575                           
  1576                           ;master.c: 113:         distancia = distancia/29;
  1577  011E  301D               	movlw	29
  1578  011F  00F2               	movwf	___lwdiv@divisor
  1579  0120  3000               	movlw	0
  1580  0121  00F3               	movwf	___lwdiv@divisor+1
  1581  0122  086A               	movf	_distancia+1,w
  1582  0123  00F5               	movwf	___lwdiv@dividend+1
  1583  0124  0869               	movf	_distancia,w
  1584  0125  00F4               	movwf	___lwdiv@dividend
  1585  0126  120A  118A  26D1  120A  118A  	fcall	___lwdiv
  1586  012B  0873               	movf	?___lwdiv+1,w
  1587  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1588  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1589  012E  00EA               	movwf	_distancia+1
  1590  012F  0872               	movf	?___lwdiv,w
  1591  0130  00E9               	movwf	_distancia
  1592  0131                     l2494:	
  1593                           
  1594                           ;master.c: 114:         distancia = distancia + 1;
  1595  0131  0869               	movf	_distancia,w
  1596  0132  3E01               	addlw	1
  1597  0133  00E9               	movwf	_distancia
  1598  0134  086A               	movf	_distancia+1,w
  1599  0135  1803               	skipnc
  1600  0136  3E01               	addlw	1
  1601  0137  3E00               	addlw	0
  1602  0138  00EA               	movwf	_distancia+1
  1603  0139                     l2496:	
  1604                           
  1605                           ;master.c: 116:         if (distancia <= 8 && distancia >= 7){
  1606  0139  3000               	movlw	0
  1607  013A  026A               	subwf	_distancia+1,w
  1608  013B  3009               	movlw	9
  1609  013C  1903               	skipnz
  1610  013D  0269               	subwf	_distancia,w
  1611  013E  1803               	skipnc
  1612  013F  2941               	goto	u1321
  1613  0140  2942               	goto	u1320
  1614  0141                     u1321:	
  1615  0141  296D               	goto	l115
  1616  0142                     u1320:	
  1617  0142                     l2498:	
  1618  0142  3000               	movlw	0
  1619  0143  026A               	subwf	_distancia+1,w
  1620  0144  3007               	movlw	7
  1621  0145  1903               	skipnz
  1622  0146  0269               	subwf	_distancia,w
  1623  0147  1C03               	skipc
  1624  0148  294A               	goto	u1331
  1625  0149  294B               	goto	u1330
  1626  014A                     u1331:	
  1627  014A  296D               	goto	l115
  1628  014B                     u1330:	
  1629  014B                     l2500:	
  1630                           
  1631                           ;master.c: 117:             PORTBbits.RB2 = 1;
  1632  014B  1506               	bsf	6,2	;volatile
  1633  014C                     l2502:	
  1634                           
  1635                           ;master.c: 118:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1636  014C  3002               	movlw	2
  1637  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1638  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1639  014F  00B6               	movwf	??_main+2
  1640  0150  3086               	movlw	134
  1641  0151  00B5               	movwf	??_main+1
  1642  0152  3098               	movlw	152
  1643  0153  00B4               	movwf	??_main
  1644  0154                     u1397:	
  1645  0154  0BB4               	decfsz	??_main,f
  1646  0155  2954               	goto	u1397
  1647  0156  0BB5               	decfsz	??_main+1,f
  1648  0157  2954               	goto	u1397
  1649  0158  0BB6               	decfsz	??_main+2,f
  1650  0159  2954               	goto	u1397
  1651  015A  0000               	nop
  1652  015B                     l2504:	
  1653                           
  1654                           ;master.c: 119:             PORTBbits.RB2 = 0;
  1655  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1656  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1657  015D  1106               	bcf	6,2	;volatile
  1658                           
  1659                           ;master.c: 120:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1660  015E  3002               	movlw	2
  1661  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0161  00B6               	movwf	??_main+2
  1664  0162  3086               	movlw	134
  1665  0163  00B5               	movwf	??_main+1
  1666  0164  3098               	movlw	152
  1667  0165  00B4               	movwf	??_main
  1668  0166                     u1407:	
  1669  0166  0BB4               	decfsz	??_main,f
  1670  0167  2966               	goto	u1407
  1671  0168  0BB5               	decfsz	??_main+1,f
  1672  0169  2966               	goto	u1407
  1673  016A  0BB6               	decfsz	??_main+2,f
  1674  016B  2966               	goto	u1407
  1675  016C  0000               	nop
  1676  016D                     l115:	
  1677                           ;master.c: 121:         }
  1678                           
  1679                           
  1680                           ;master.c: 122:         if (distancia <= 6 && distancia >= 5){
  1681  016D  3000               	movlw	0
  1682  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1683  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0170  026A               	subwf	_distancia+1,w
  1685  0171  3007               	movlw	7
  1686  0172  1903               	skipnz
  1687  0173  0269               	subwf	_distancia,w
  1688  0174  1803               	skipnc
  1689  0175  2977               	goto	u1341
  1690  0176  2978               	goto	u1340
  1691  0177                     u1341:	
  1692  0177  299E               	goto	l116
  1693  0178                     u1340:	
  1694  0178                     l2506:	
  1695  0178  3000               	movlw	0
  1696  0179  026A               	subwf	_distancia+1,w
  1697  017A  3005               	movlw	5
  1698  017B  1903               	skipnz
  1699  017C  0269               	subwf	_distancia,w
  1700  017D  1C03               	skipc
  1701  017E  2980               	goto	u1351
  1702  017F  2981               	goto	u1350
  1703  0180                     u1351:	
  1704  0180  299E               	goto	l116
  1705  0181                     u1350:	
  1706  0181                     l2508:	
  1707                           
  1708                           ;master.c: 123:             PORTBbits.RB2 = 1;
  1709  0181  1506               	bsf	6,2	;volatile
  1710  0182                     l2510:	
  1711                           
  1712                           ;master.c: 124:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1713  0182  3002               	movlw	2
  1714  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1715  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1716  0185  00B6               	movwf	??_main+2
  1717  0186  3086               	movlw	134
  1718  0187  00B5               	movwf	??_main+1
  1719  0188  3098               	movlw	152
  1720  0189  00B4               	movwf	??_main
  1721  018A                     u1417:	
  1722  018A  0BB4               	decfsz	??_main,f
  1723  018B  298A               	goto	u1417
  1724  018C  0BB5               	decfsz	??_main+1,f
  1725  018D  298A               	goto	u1417
  1726  018E  0BB6               	decfsz	??_main+2,f
  1727  018F  298A               	goto	u1417
  1728  0190  0000               	nop
  1729  0191                     l2512:	
  1730                           
  1731                           ;master.c: 125:             PORTBbits.RB2 = 0;
  1732  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0193  1106               	bcf	6,2	;volatile
  1735                           
  1736                           ;master.c: 126:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1737  0194  3082               	movlw	130
  1738  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1739  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1740  0197  00B5               	movwf	??_main+1
  1741  0198  30DD               	movlw	221
  1742  0199  00B4               	movwf	??_main
  1743  019A                     u1427:	
  1744  019A  0BB4               	decfsz	??_main,f
  1745  019B  299A               	goto	u1427
  1746  019C  0BB5               	decfsz	??_main+1,f
  1747  019D  299A               	goto	u1427
  1748  019E                     l116:	
  1749                           ;master.c: 127:         }
  1750                           
  1751                           
  1752                           ;master.c: 128:         if (distancia < 5){
  1753  019E  3000               	movlw	0
  1754  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1755  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1756  01A1  026A               	subwf	_distancia+1,w
  1757  01A2  3005               	movlw	5
  1758  01A3  1903               	skipnz
  1759  01A4  0269               	subwf	_distancia,w
  1760  01A5  1803               	skipnc
  1761  01A6  29A8               	goto	u1361
  1762  01A7  29A9               	goto	u1360
  1763  01A8                     u1361:	
  1764  01A8  29AA               	goto	l2516
  1765  01A9                     u1360:	
  1766  01A9                     l2514:	
  1767                           
  1768                           ;master.c: 129:             PORTBbits.RB2 = 1;
  1769  01A9  1506               	bsf	6,2	;volatile
  1770  01AA                     l2516:	
  1771                           
  1772                           ;master.c: 132:         char D[5];;master.c: 133:         sprintf(D ,"%3u", distancia);
  1773  01AA  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1774  01AB  00B4               	movwf	??_main
  1775  01AC  0834               	movf	??_main,w
  1776  01AD  00A5               	movwf	sprintf@f
  1777  01AE  086A               	movf	_distancia+1,w
  1778  01AF  00A7               	movwf	?_sprintf+2
  1779  01B0  0869               	movf	_distancia,w
  1780  01B1  00A6               	movwf	?_sprintf+1
  1781  01B2  304B               	movlw	(low (main@D| 0))& (0+255)
  1782  01B3  120A  118A  2316  120A  118A  	fcall	_sprintf
  1783  01B8                     l2518:	
  1784                           
  1785                           ;master.c: 134:         lcd8_setCursor(1,0);
  1786  01B8  01F5               	clrf	lcd8_setCursor@columna
  1787  01B9  3001               	movlw	1
  1788  01BA  120A  158A  2720  120A  118A  	fcall	_lcd8_setCursor
  1789  01BF                     l2520:	
  1790                           
  1791                           ;master.c: 135:         delay_1ms();
  1792  01BF  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1793                           
  1794                           ;master.c: 136:         lcd8_dispString("d:");
  1795  01C4  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1796  01C5  00F6               	movwf	lcd8_dispString@value
  1797  01C6  3080               	movlw	128
  1798  01C7  00F7               	movwf	lcd8_dispString@value+1
  1799  01C8  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1800  01CD                     l2522:	
  1801                           
  1802                           ;master.c: 137:         delay_1ms();
  1803  01CD  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1804  01D2                     l2524:	
  1805                           
  1806                           ;master.c: 138:         lcd8_setCursor(1,2);
  1807  01D2  3002               	movlw	2
  1808  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1809  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1810  01D5  00B4               	movwf	??_main
  1811  01D6  0834               	movf	??_main,w
  1812  01D7  00F5               	movwf	lcd8_setCursor@columna
  1813  01D8  3001               	movlw	1
  1814  01D9  120A  158A  2720  120A  118A  	fcall	_lcd8_setCursor
  1815  01DE                     l2526:	
  1816                           
  1817                           ;master.c: 139:         delay_1ms();
  1818  01DE  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1819  01E3                     l2528:	
  1820                           
  1821                           ;master.c: 140:         lcd8_dispString(D);
  1822  01E3  304B               	movlw	(low (main@D| 0))& (0+255)
  1823  01E4  00F6               	movwf	lcd8_dispString@value
  1824  01E5  3000               	movlw	0
  1825  01E6  00F7               	movwf	lcd8_dispString@value+1
  1826  01E7  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1827                           
  1828                           ;master.c: 141:         delay_1ms();
  1829  01EC  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1830                           
  1831                           ;master.c: 142:         lcd8_setCursor(1,5);
  1832  01F1  3005               	movlw	5
  1833  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1834  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1835  01F4  00B4               	movwf	??_main
  1836  01F5  0834               	movf	??_main,w
  1837  01F6  00F5               	movwf	lcd8_setCursor@columna
  1838  01F7  3001               	movlw	1
  1839  01F8  120A  158A  2720  120A  118A  	fcall	_lcd8_setCursor
  1840                           
  1841                           ;master.c: 143:         delay_1ms();
  1842  01FD  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1843  0202                     l2530:	
  1844                           
  1845                           ;master.c: 144:         lcd8_dispString("cm");
  1846  0202  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1847  0203  00F6               	movwf	lcd8_dispString@value
  1848  0204  3080               	movlw	128
  1849  0205  00F7               	movwf	lcd8_dispString@value+1
  1850  0206  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1851  020B                     l2532:	
  1852                           
  1853                           ;master.c: 145:         delay_1ms();
  1854  020B  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1855                           
  1856                           ;master.c: 147:         char F[5];;master.c: 148:         sprintf(F, "%3u", fuerza);
  1857  0210  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1858  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0213  00B4               	movwf	??_main
  1861  0214  0834               	movf	??_main,w
  1862  0215  00A5               	movwf	sprintf@f
  1863  0216  086C               	movf	_fuerza,w
  1864  0217  00B5               	movwf	??_main+1
  1865  0218  01B6               	clrf	??_main+2
  1866  0219  0835               	movf	??_main+1,w
  1867  021A  00A6               	movwf	?_sprintf+1
  1868  021B  0836               	movf	??_main+2,w
  1869  021C  00A7               	movwf	?_sprintf+2
  1870  021D  3050               	movlw	(low (main@F| 0))& (0+255)
  1871  021E  120A  118A  2316  120A  118A  	fcall	_sprintf
  1872  0223                     l2534:	
  1873                           
  1874                           ;master.c: 149:         lcd8_setCursor(1,8);
  1875  0223  3008               	movlw	8
  1876  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0226  00B4               	movwf	??_main
  1879  0227  0834               	movf	??_main,w
  1880  0228  00F5               	movwf	lcd8_setCursor@columna
  1881  0229  3001               	movlw	1
  1882  022A  120A  158A  2720  120A  118A  	fcall	_lcd8_setCursor
  1883  022F                     l2536:	
  1884                           
  1885                           ;master.c: 150:         delay_1ms();
  1886  022F  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1887                           
  1888                           ;master.c: 151:         lcd8_dispString("f:");
  1889  0234  301A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1890  0235  00F6               	movwf	lcd8_dispString@value
  1891  0236  3080               	movlw	128
  1892  0237  00F7               	movwf	lcd8_dispString@value+1
  1893  0238  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1894  023D                     l2538:	
  1895                           
  1896                           ;master.c: 152:         delay_1ms();
  1897  023D  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1898  0242                     l2540:	
  1899                           
  1900                           ;master.c: 153:         lcd8_setCursor(1,10);
  1901  0242  300A               	movlw	10
  1902  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0245  00B4               	movwf	??_main
  1905  0246  0834               	movf	??_main,w
  1906  0247  00F5               	movwf	lcd8_setCursor@columna
  1907  0248  3001               	movlw	1
  1908  0249  120A  158A  2720  120A  118A  	fcall	_lcd8_setCursor
  1909  024E                     l2542:	
  1910                           
  1911                           ;master.c: 154:         delay_1ms();
  1912  024E  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1913  0253                     l2544:	
  1914                           
  1915                           ;master.c: 155:         lcd8_dispString(F);
  1916  0253  3050               	movlw	(low (main@F| 0))& (0+255)
  1917  0254  00F6               	movwf	lcd8_dispString@value
  1918  0255  3000               	movlw	0
  1919  0256  00F7               	movwf	lcd8_dispString@value+1
  1920  0257  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1921                           
  1922                           ;master.c: 156:         delay_1ms();
  1923  025C  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1924  0261                     l2546:	
  1925                           
  1926                           ;master.c: 158:         char G[10];;master.c: 159:         sprintf(G, "%3u", Gxh);
  1927  0261  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1928  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0264  00B4               	movwf	??_main
  1931  0265  0834               	movf	??_main,w
  1932  0266  00A5               	movwf	sprintf@f
  1933  0267  0856               	movf	main@Gxh,w
  1934  0268  00B5               	movwf	??_main+1
  1935  0269  01B6               	clrf	??_main+2
  1936  026A  0835               	movf	??_main+1,w
  1937  026B  00A6               	movwf	?_sprintf+1
  1938  026C  0836               	movf	??_main+2,w
  1939  026D  00A7               	movwf	?_sprintf+2
  1940  026E  3037               	movlw	(low (main@G| 0))& (0+255)
  1941  026F  120A  118A  2316  120A  118A  	fcall	_sprintf
  1942  0274                     l2548:	
  1943                           
  1944                           ;master.c: 160:         lcd8_setCursor(2,0);
  1945  0274  01F5               	clrf	lcd8_setCursor@columna
  1946  0275  3002               	movlw	2
  1947  0276  120A  158A  2720  120A  118A  	fcall	_lcd8_setCursor
  1948  027B                     l2550:	
  1949                           
  1950                           ;master.c: 161:         delay_1ms();
  1951  027B  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1952  0280                     l2552:	
  1953                           
  1954                           ;master.c: 162:         lcd8_dispString("Gx:");
  1955  0280  300B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1956  0281  00F6               	movwf	lcd8_dispString@value
  1957  0282  3080               	movlw	128
  1958  0283  00F7               	movwf	lcd8_dispString@value+1
  1959  0284  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1960                           
  1961                           ;master.c: 163:         delay_1ms();
  1962  0289  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1963                           
  1964                           ;master.c: 164:         lcd8_setCursor(2,3);
  1965  028E  3003               	movlw	3
  1966  028F  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0290  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0291  00B4               	movwf	??_main
  1969  0292  0834               	movf	??_main,w
  1970  0293  00F5               	movwf	lcd8_setCursor@columna
  1971  0294  3002               	movlw	2
  1972  0295  120A  158A  2720  120A  118A  	fcall	_lcd8_setCursor
  1973                           
  1974                           ;master.c: 165:         delay_1ms();
  1975  029A  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  1976  029F                     l2554:	
  1977                           
  1978                           ;master.c: 166:         lcd8_dispString(G);
  1979  029F  3037               	movlw	(low (main@G| 0))& (0+255)
  1980  02A0  00F6               	movwf	lcd8_dispString@value
  1981  02A1  3000               	movlw	0
  1982  02A2  00F7               	movwf	lcd8_dispString@value+1
  1983  02A3  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  1984  02A8                     l2556:	
  1985                           
  1986                           ;master.c: 167:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1987  02A8  3002               	movlw	2
  1988  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1989  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1990  02AB  00B6               	movwf	??_main+2
  1991  02AC  3004               	movlw	4
  1992  02AD  00B5               	movwf	??_main+1
  1993  02AE  30B9               	movlw	185
  1994  02AF  00B4               	movwf	??_main
  1995  02B0                     u1437:	
  1996  02B0  0BB4               	decfsz	??_main,f
  1997  02B1  2AB0               	goto	u1437
  1998  02B2  0BB5               	decfsz	??_main+1,f
  1999  02B3  2AB0               	goto	u1437
  2000  02B4  0BB6               	decfsz	??_main+2,f
  2001  02B5  2AB0               	goto	u1437
  2002  02B6  2AB7               	nop2
  2003  02B7                     l2558:	
  2004                           
  2005                           ;master.c: 169:         char A[10];;master.c: 170:         sprintf(A, "%3u", Ayh);
  2006  02B7  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2007  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2008  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2009  02BA  00B4               	movwf	??_main
  2010  02BB  0834               	movf	??_main,w
  2011  02BC  00A5               	movwf	sprintf@f
  2012  02BD  0855               	movf	main@Ayh,w
  2013  02BE  00B5               	movwf	??_main+1
  2014  02BF  01B6               	clrf	??_main+2
  2015  02C0  0835               	movf	??_main+1,w
  2016  02C1  00A6               	movwf	?_sprintf+1
  2017  02C2  0836               	movf	??_main+2,w
  2018  02C3  00A7               	movwf	?_sprintf+2
  2019  02C4  3041               	movlw	(low (main@A| 0))& (0+255)
  2020  02C5  120A  118A  2316  120A  118A  	fcall	_sprintf
  2021  02CA                     l2560:	
  2022                           
  2023                           ;master.c: 171:         lcd8_setCursor(2,8);
  2024  02CA  3008               	movlw	8
  2025  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2026  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2027  02CD  00B4               	movwf	??_main
  2028  02CE  0834               	movf	??_main,w
  2029  02CF  00F5               	movwf	lcd8_setCursor@columna
  2030  02D0  3002               	movlw	2
  2031  02D1  120A  158A  2720  120A  118A  	fcall	_lcd8_setCursor
  2032  02D6                     l2562:	
  2033                           
  2034                           ;master.c: 172:         delay_1ms();
  2035  02D6  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  2036  02DB                     l2564:	
  2037                           
  2038                           ;master.c: 173:         lcd8_dispString("Ay:");
  2039  02DB  300F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2040  02DC  00F6               	movwf	lcd8_dispString@value
  2041  02DD  3080               	movlw	128
  2042  02DE  00F7               	movwf	lcd8_dispString@value+1
  2043  02DF  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  2044  02E4                     l2566:	
  2045                           
  2046                           ;master.c: 174:         delay_1ms();
  2047  02E4  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  2048  02E9                     l2568:	
  2049                           
  2050                           ;master.c: 175:         lcd8_setCursor(2,11);
  2051  02E9  300B               	movlw	11
  2052  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2053  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2054  02EC  00B4               	movwf	??_main
  2055  02ED  0834               	movf	??_main,w
  2056  02EE  00F5               	movwf	lcd8_setCursor@columna
  2057  02EF  3002               	movlw	2
  2058  02F0  120A  158A  2720  120A  118A  	fcall	_lcd8_setCursor
  2059  02F5                     l2570:	
  2060                           
  2061                           ;master.c: 176:         delay_1ms();
  2062  02F5  120A  158A  270A  120A  118A  	fcall	_delay_1ms
  2063  02FA                     l2572:	
  2064                           
  2065                           ;master.c: 177:         lcd8_dispString(A);
  2066  02FA  3041               	movlw	(low (main@A| 0))& (0+255)
  2067  02FB  00F6               	movwf	lcd8_dispString@value
  2068  02FC  3000               	movlw	0
  2069  02FD  00F7               	movwf	lcd8_dispString@value+1
  2070  02FE  120A  158A  27A7  120A  118A  	fcall	_lcd8_dispString
  2071                           
  2072                           ;master.c: 178:         _delay((unsigned long)((200)*(4000000/4000.0)));
  2073  0303  3002               	movlw	2
  2074  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0306  00B6               	movwf	??_main+2
  2077  0307  3004               	movlw	4
  2078  0308  00B5               	movwf	??_main+1
  2079  0309  30B9               	movlw	185
  2080  030A  00B4               	movwf	??_main
  2081  030B                     u1447:	
  2082  030B  0BB4               	decfsz	??_main,f
  2083  030C  2B0B               	goto	u1447
  2084  030D  0BB5               	decfsz	??_main+1,f
  2085  030E  2B0B               	goto	u1447
  2086  030F  0BB6               	decfsz	??_main+2,f
  2087  0310  2B0B               	goto	u1447
  2088  0311  2B12               	nop2
  2089  0312  286E               	goto	l2456
  2090  0313  120A  118A  280C   	ljmp	start
  2091  0316                     __end_of_main:	
  2092                           
  2093                           	psect	text1
  2094  0FD3                     __ptext1:	
  2095 ;; *************** function _tmr1_Prescaler *****************
  2096 ;; Defined at:
  2097 ;;		line 22 in file "TMR1.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  prescaler       1    wreg     unsigned char 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  prescaler       1    4[COMMON] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         1       0       0       0       0
  2113 ;;      Temps:          2       0       0       0       0
  2114 ;;      Totals:         3       0       0       0       0
  2115 ;;Total ram usage:        3 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    1
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _tmr1_Prescaler
  2127  0FD3                     _tmr1_Prescaler:	
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _tmr1_Prescaler: [wreg-fsr0h+status,2+status,0]
  2131                           ;tmr1_Prescaler@prescaler stored from wreg
  2132  0FD3  00F4               	movwf	tmr1_Prescaler@prescaler
  2133  0FD4                     l1818:	
  2134                           
  2135                           ;TMR1.c: 23:     switch(prescaler){
  2136  0FD4  2FE9               	goto	l1822
  2137  0FD5                     l193:	
  2138                           ;TMR1.c: 24:         case 0:
  2139                           
  2140                           
  2141                           ;TMR1.c: 25:             T1CONbits.T1CKPS1 = 0;
  2142  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0FD7  1290               	bcf	16,5	;volatile
  2145                           
  2146                           ;TMR1.c: 26:             T1CONbits.T1CKPS0 = 0;
  2147  0FD8  1210               	bcf	16,4	;volatile
  2148                           
  2149                           ;TMR1.c: 27:             break;
  2150  0FD9  2FFF               	goto	l198
  2151  0FDA                     l195:	
  2152                           ;TMR1.c: 28:         case 1:
  2153                           
  2154                           
  2155                           ;TMR1.c: 29:             T1CONbits.T1CKPS1 = 0;
  2156  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0FDC  1290               	bcf	16,5	;volatile
  2159                           
  2160                           ;TMR1.c: 30:             T1CONbits.T1CKPS0 = 1;
  2161  0FDD  1610               	bsf	16,4	;volatile
  2162                           
  2163                           ;TMR1.c: 31:             break;
  2164  0FDE  2FFF               	goto	l198
  2165  0FDF                     l196:	
  2166                           ;TMR1.c: 32:         case 2:
  2167                           
  2168                           
  2169                           ;TMR1.c: 33:             T1CONbits.T1CKPS1 = 1;
  2170  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0FE1  1690               	bsf	16,5	;volatile
  2173                           
  2174                           ;TMR1.c: 34:             T1CONbits.T1CKPS0 = 0;
  2175  0FE2  1210               	bcf	16,4	;volatile
  2176                           
  2177                           ;TMR1.c: 35:             break;
  2178  0FE3  2FFF               	goto	l198
  2179  0FE4                     l197:	
  2180                           ;TMR1.c: 36:         case 3:
  2181                           
  2182                           
  2183                           ;TMR1.c: 37:             T1CONbits.T1CKPS1 = 1;
  2184  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0FE6  1690               	bsf	16,5	;volatile
  2187                           
  2188                           ;TMR1.c: 38:             T1CONbits.T1CKPS0 = 1;
  2189  0FE7  1610               	bsf	16,4	;volatile
  2190                           
  2191                           ;TMR1.c: 39:             break;
  2192  0FE8  2FFF               	goto	l198
  2193  0FE9                     l1822:	
  2194  0FE9  0874               	movf	tmr1_Prescaler@prescaler,w
  2195  0FEA  00F2               	movwf	??_tmr1_Prescaler
  2196  0FEB  01F3               	clrf	??_tmr1_Prescaler+1
  2197                           
  2198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2199                           ; Switch size 1, requested type "simple"
  2200                           ; Number of cases is 1, Range of values is 0 to 0
  2201                           ; switch strategies available:
  2202                           ; Name         Instructions Cycles
  2203                           ; simple_byte            4     3 (average)
  2204                           ; direct_byte           11     8 (fixed)
  2205                           ; jumptable            260     6 (fixed)
  2206                           ;	Chosen strategy is simple_byte
  2207  0FEC  0873               	movf	??_tmr1_Prescaler+1,w
  2208  0FED  3A00               	xorlw	0	; case 0
  2209  0FEE  1903               	skipnz
  2210  0FEF  2FF1               	goto	l2694
  2211  0FF0  2FFF               	goto	l198
  2212  0FF1                     l2694:	
  2213                           
  2214                           ; Switch size 1, requested type "simple"
  2215                           ; Number of cases is 4, Range of values is 0 to 3
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte           13     7 (average)
  2219                           ; direct_byte           20     8 (fixed)
  2220                           ; jumptable            260     6 (fixed)
  2221                           ;	Chosen strategy is simple_byte
  2222  0FF1  0872               	movf	??_tmr1_Prescaler,w
  2223  0FF2  3A00               	xorlw	0	; case 0
  2224  0FF3  1903               	skipnz
  2225  0FF4  2FD5               	goto	l193
  2226  0FF5  3A01               	xorlw	1	; case 1
  2227  0FF6  1903               	skipnz
  2228  0FF7  2FDA               	goto	l195
  2229  0FF8  3A03               	xorlw	3	; case 2
  2230  0FF9  1903               	skipnz
  2231  0FFA  2FDF               	goto	l196
  2232  0FFB  3A01               	xorlw	1	; case 3
  2233  0FFC  1903               	skipnz
  2234  0FFD  2FE4               	goto	l197
  2235  0FFE  2FFF               	goto	l198
  2236  0FFF                     l198:	
  2237  0FFF  0008               	return
  2238  1000                     __end_of_tmr1_Prescaler:	
  2239                           
  2240                           	psect	text2
  2241  0EAC                     __ptext2:	
  2242 ;; *************** function _tmr1_Interrupt *****************
  2243 ;; Defined at:
  2244 ;;		line 43 in file "TMR1.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  tmr1_Int        1    wreg     unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  tmr1_Int        1    2[COMMON] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,0
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         0       0       0       0       0
  2259 ;;      Locals:         1       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0
  2261 ;;      Totals:         1       0       0       0       0
  2262 ;;Total ram usage:        1 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    1
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _tmr1_Interrupt
  2274  0EAC                     _tmr1_Interrupt:	
  2275                           
  2276                           ;incstack = 0
  2277                           ; Regs used in _tmr1_Interrupt: [wreg+status,0]
  2278                           ;tmr1_Interrupt@tmr1_Int stored from wreg
  2279  0EAC  00F2               	movwf	tmr1_Interrupt@tmr1_Int
  2280  0EAD                     l1828:	
  2281                           
  2282                           ;TMR1.c: 44:     PIE1bits.TMR1IE = tmr1_Int;
  2283  0EAD  0C72               	rrf	tmr1_Interrupt@tmr1_Int,w
  2284  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0EAF  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0EB0  1C03               	skipc
  2287  0EB1  100C               	bcf	12,0	;volatile
  2288  0EB2  1803               	skipnc
  2289  0EB3  140C               	bsf	12,0	;volatile
  2290  0EB4                     l1830:	
  2291                           
  2292                           ;TMR1.c: 45:     PIR1bits.TMR1IF = 0;
  2293  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0EB6  100C               	bcf	12,0	;volatile
  2296  0EB7                     l201:	
  2297  0EB7  0008               	return
  2298  0EB8                     __end_of_tmr1_Interrupt:	
  2299                           
  2300                           	psect	text3
  2301  0E7A                     __ptext3:	
  2302 ;; *************** function _tmr1_Init *****************
  2303 ;; Defined at:
  2304 ;;		line 16 in file "TMR1.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		None
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2318 ;;      Params:         0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    1
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           
  2333                           ;psect for function _tmr1_Init
  2334  0E7A                     _tmr1_Init:	
  2335  0E7A                     l1816:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _tmr1_Init: []
  2338                           
  2339                           
  2340                           ;TMR1.c: 17:     T1CONbits.T1OSCEN = 0;
  2341  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0E7C  1190               	bcf	16,3	;volatile
  2344                           
  2345                           ;TMR1.c: 18:     T1CONbits.TMR1CS = 0;
  2346  0E7D  1090               	bcf	16,1	;volatile
  2347                           
  2348                           ;TMR1.c: 19:     T1CONbits.TMR1ON = 1;
  2349  0E7E  1410               	bsf	16,0	;volatile
  2350  0E7F                     l189:	
  2351  0E7F  0008               	return
  2352  0E80                     __end_of_tmr1_Init:	
  2353                           
  2354                           	psect	text4
  2355  0316                     __ptext4:	
  2356 ;; *************** function _sprintf *****************
  2357 ;; Defined at:
  2358 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  sp              1    wreg     PTR unsigned char 
  2361 ;;		 -> main@A(10), main@G(10), main@F(5), main@D(5), 
  2362 ;;  f               1    5[BANK0 ] PTR const unsigned char 
  2363 ;;		 -> STR_8(4), STR_6(4), STR_4(4), STR_1(4), 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  2366 ;;		 -> main@A(10), main@G(10), main@F(5), main@D(5), 
  2367 ;;  tmpval          4    0        struct .
  2368 ;;  width           2   16[BANK0 ] int 
  2369 ;;  val             2   13[BANK0 ] unsigned int 
  2370 ;;  cp              2    0        PTR const unsigned char 
  2371 ;;  len             2    0        unsigned int 
  2372 ;;  c               1   19[BANK0 ] unsigned char 
  2373 ;;  prec            1   15[BANK0 ] char 
  2374 ;;  ap              1   12[BANK0 ] PTR void [1]
  2375 ;;		 -> ?_sprintf(2), 
  2376 ;;  flag            1   11[BANK0 ] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2    5[BANK0 ] int 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       3       0       0       0
  2387 ;;      Locals:         0       9       0       0       0
  2388 ;;      Temps:          0       3       0       0       0
  2389 ;;      Totals:         0      15       0       0       0
  2390 ;;Total ram usage:       15 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    2
  2393 ;; This function calls:
  2394 ;;		___lwdiv
  2395 ;;		___lwmod
  2396 ;;		___wmul
  2397 ;;		_isdigit
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _sprintf
  2405  0316                     _sprintf:	
  2406                           
  2407                           ;incstack = 0
  2408                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2409                           ;sprintf@sp stored from wreg
  2410  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0318  00B2               	movwf	sprintf@sp
  2413  0319                     l2356:	
  2414                           
  2415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;
  2416  0319  3026               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2417  031A  00A8               	movwf	??_sprintf
  2418  031B  0828               	movf	??_sprintf,w
  2419  031C  00AC               	movwf	sprintf@ap
  2420                           
  2421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2422  031D  2C5A               	goto	l2424
  2423  031E                     l2358:	
  2424                           
  2425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  2426  031E  3025               	movlw	37
  2427  031F  0633               	xorwf	sprintf@c,w
  2428  0320  1903               	btfsc	3,2
  2429  0321  2B23               	goto	u1171
  2430  0322  2B24               	goto	u1170
  2431  0323                     u1171:	
  2432  0323  2B30               	goto	l2364
  2433  0324                     u1170:	
  2434  0324                     l2360:	
  2435                           
  2436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  2437  0324  0833               	movf	sprintf@c,w
  2438  0325  00A8               	movwf	??_sprintf
  2439  0326  0832               	movf	sprintf@sp,w
  2440  0327  0084               	movwf	4
  2441  0328  0828               	movf	??_sprintf,w
  2442  0329  1383               	bcf	3,7	;select IRP bank0
  2443  032A  0080               	movwf	0
  2444  032B                     l2362:	
  2445  032B  3001               	movlw	1
  2446  032C  00A8               	movwf	??_sprintf
  2447  032D  0828               	movf	??_sprintf,w
  2448  032E  07B2               	addwf	sprintf@sp,f
  2449                           
  2450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  2451  032F  2C5A               	goto	l2424
  2452  0330                     l2364:	
  2453                           
  2454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  2455  0330  01B0               	clrf	sprintf@width
  2456  0331  01B1               	clrf	sprintf@width+1
  2457                           
  2458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  2459  0332  01AB               	clrf	sprintf@flag
  2460  0333                     l2366:	
  2461                           
  2462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  2463  0333  0825               	movf	sprintf@f,w
  2464  0334  0084               	movwf	4
  2465  0335  120A  118A  27C9  120A  118A  	fcall	stringdir
  2466  033A  120A  118A  27EE  120A  118A  	fcall	_isdigit
  2467  033F  1C03               	btfss	3,0
  2468  0340  2B42               	goto	u1181
  2469  0341  2B43               	goto	u1180
  2470  0342                     u1181:	
  2471  0342  2B89               	goto	l2382
  2472  0343                     u1180:	
  2473  0343                     l2368:	
  2474                           
  2475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  2476  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0345  01B0               	clrf	sprintf@width
  2479  0346  01B1               	clrf	sprintf@width+1
  2480  0347                     l2370:	
  2481                           
  2482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  2483  0347  300A               	movlw	10
  2484  0348  00F2               	movwf	___wmul@multiplier
  2485  0349  3000               	movlw	0
  2486  034A  00F3               	movwf	___wmul@multiplier+1
  2487  034B  1283               	bcf	3,5	;RP0=0, select bank0
  2488  034C  1303               	bcf	3,6	;RP1=0, select bank0
  2489  034D  0831               	movf	sprintf@width+1,w
  2490  034E  00F5               	movwf	___wmul@multiplicand+1
  2491  034F  0830               	movf	sprintf@width,w
  2492  0350  00F4               	movwf	___wmul@multiplicand
  2493  0351  120A  158A  2782  120A  118A  	fcall	___wmul
  2494  0356  0873               	movf	?___wmul+1,w
  2495  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0359  00B1               	movwf	sprintf@width+1
  2498  035A  0872               	movf	?___wmul,w
  2499  035B  00B0               	movwf	sprintf@width
  2500  035C                     l2372:	
  2501                           
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  2503  035C  0825               	movf	sprintf@f,w
  2504  035D  0084               	movwf	4
  2505  035E  120A  118A  27C9  120A  118A  	fcall	stringdir
  2506  0363  3ED0               	addlw	208
  2507  0364  00A8               	movwf	??_sprintf
  2508  0365  30FF               	movlw	255
  2509  0366  1803               	skipnc
  2510  0367  3000               	movlw	0
  2511  0368  00A9               	movwf	??_sprintf+1
  2512  0369  0828               	movf	??_sprintf,w
  2513  036A  07B0               	addwf	sprintf@width,f
  2514  036B  1803               	skipnc
  2515  036C  0AB1               	incf	sprintf@width+1,f
  2516  036D  0829               	movf	??_sprintf+1,w
  2517  036E  07B1               	addwf	sprintf@width+1,f
  2518  036F                     l2374:	
  2519  036F  3001               	movlw	1
  2520  0370  00A8               	movwf	??_sprintf
  2521  0371  0828               	movf	??_sprintf,w
  2522  0372  07A5               	addwf	sprintf@f,f
  2523  0373                     l2376:	
  2524                           
  2525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  2526  0373  0825               	movf	sprintf@f,w
  2527  0374  0084               	movwf	4
  2528  0375  120A  118A  27C9  120A  118A  	fcall	stringdir
  2529  037A  120A  118A  27EE  120A  118A  	fcall	_isdigit
  2530  037F  1803               	btfsc	3,0
  2531  0380  2B82               	goto	u1191
  2532  0381  2B83               	goto	u1190
  2533  0382                     u1191:	
  2534  0382  2B47               	goto	l2370
  2535  0383                     u1190:	
  2536  0383  2B89               	goto	l2382
  2537  0384                     l2378:	
  2538                           
  2539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 844:    fla
      +                          g |= 0xC0;
  2540  0384  30C0               	movlw	192
  2541  0385  00A8               	movwf	??_sprintf
  2542  0386  0828               	movf	??_sprintf,w
  2543  0387  04AB               	iorwf	sprintf@flag,f
  2544                           
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 845:    bre
      +                          ak;
  2546  0388  2BA5               	goto	l2384
  2547  0389                     l2382:	
  2548  0389  3001               	movlw	1
  2549  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2550  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2551  038C  07A5               	addwf	sprintf@f,f
  2552  038D  30FF               	movlw	-1
  2553  038E  0725               	addwf	sprintf@f,w
  2554  038F  0084               	movwf	4
  2555  0390  120A  118A  27C9  120A  118A  	fcall	stringdir
  2556  0395  00B3               	movwf	sprintf@c
  2557  0396  00A8               	movwf	??_sprintf
  2558  0397  01A9               	clrf	??_sprintf+1
  2559                           
  2560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2561                           ; Switch size 1, requested type "simple"
  2562                           ; Number of cases is 1, Range of values is 0 to 0
  2563                           ; switch strategies available:
  2564                           ; Name         Instructions Cycles
  2565                           ; simple_byte            4     3 (average)
  2566                           ; direct_byte           11     8 (fixed)
  2567                           ; jumptable            260     6 (fixed)
  2568                           ;	Chosen strategy is simple_byte
  2569  0398  0829               	movf	??_sprintf+1,w
  2570  0399  3A00               	xorlw	0	; case 0
  2571  039A  1903               	skipnz
  2572  039B  2B9D               	goto	l2696
  2573  039C  2C5A               	goto	l2424
  2574  039D                     l2696:	
  2575                           
  2576                           ; Switch size 1, requested type "simple"
  2577                           ; Number of cases is 2, Range of values is 0 to 117
  2578                           ; switch strategies available:
  2579                           ; Name         Instructions Cycles
  2580                           ; simple_byte            7     4 (average)
  2581                           ; jumptable            260     6 (fixed)
  2582                           ;	Chosen strategy is simple_byte
  2583  039D  0828               	movf	??_sprintf,w
  2584  039E  3A00               	xorlw	0	; case 0
  2585  039F  1903               	skipnz
  2586  03A0  2C6C               	goto	l2426
  2587  03A1  3A75               	xorlw	117	; case 117
  2588  03A2  1903               	skipnz
  2589  03A3  2B84               	goto	l2378
  2590  03A4  2C5A               	goto	l2424
  2591  03A5                     l2384:	
  2592                           
  2593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1299:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1312:     val
      +                           = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2594  03A5  082C               	movf	sprintf@ap,w
  2595  03A6  0084               	movwf	4
  2596  03A7  1383               	bcf	3,7	;select IRP bank0
  2597  03A8  0800               	movf	0,w
  2598  03A9  00AD               	movwf	sprintf@val
  2599  03AA  0A84               	incf	4,f
  2600  03AB  0800               	movf	0,w
  2601  03AC  00AE               	movwf	sprintf@val+1
  2602  03AD                     l2386:	
  2603  03AD  3002               	movlw	2
  2604  03AE  00A8               	movwf	??_sprintf
  2605  03AF  0828               	movf	??_sprintf,w
  2606  03B0  07AC               	addwf	sprintf@ap,f
  2607  03B1                     l2388:	
  2608                           
  2609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1313:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2610  03B1  01B3               	clrf	sprintf@c
  2611  03B2  0AB3               	incf	sprintf@c,f
  2612  03B3                     l2394:	
  2613                           
  2614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  2615  03B3  0833               	movf	sprintf@c,w
  2616  03B4  00A8               	movwf	??_sprintf
  2617  03B5  0728               	addwf	??_sprintf,w
  2618  03B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2619  03B7  0084               	movwf	4
  2620  03B8  120A  118A  27C9  120A  118A  	fcall	stringdir
  2621  03BD  00A9               	movwf	??_sprintf+1
  2622  03BE  120A  118A  27C9  120A  118A  	fcall	stringdir
  2623  03C3  00AA               	movwf	??_sprintf+2
  2624  03C4  082A               	movf	??_sprintf+2,w
  2625  03C5  022E               	subwf	sprintf@val+1,w
  2626  03C6  1D03               	skipz
  2627  03C7  2BCA               	goto	u1205
  2628  03C8  0829               	movf	??_sprintf+1,w
  2629  03C9  022D               	subwf	sprintf@val,w
  2630  03CA                     u1205:	
  2631  03CA  1803               	skipnc
  2632  03CB  2BCD               	goto	u1201
  2633  03CC  2BCE               	goto	u1200
  2634  03CD                     u1201:	
  2635  03CD  2BCF               	goto	l2398
  2636  03CE                     u1200:	
  2637  03CE  2BD9               	goto	l2400
  2638  03CF                     l2398:	
  2639  03CF  3001               	movlw	1
  2640  03D0  00A8               	movwf	??_sprintf
  2641  03D1  0828               	movf	??_sprintf,w
  2642  03D2  07B3               	addwf	sprintf@c,f
  2643  03D3  3005               	movlw	5
  2644  03D4  0633               	xorwf	sprintf@c,w
  2645  03D5  1D03               	btfss	3,2
  2646  03D6  2BD8               	goto	u1211
  2647  03D7  2BD9               	goto	u1210
  2648  03D8                     u1211:	
  2649  03D8  2BB3               	goto	l2394
  2650  03D9                     u1210:	
  2651  03D9                     l2400:	
  2652                           
  2653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  2654  03D9  0831               	movf	sprintf@width+1,w
  2655  03DA  3A80               	xorlw	128
  2656  03DB  3C80               	sublw	128
  2657  03DC  1D03               	skipz
  2658  03DD  2BE0               	goto	u1225
  2659  03DE  0830               	movf	sprintf@width,w
  2660  03DF  0233               	subwf	sprintf@c,w
  2661  03E0                     u1225:	
  2662  03E0  1803               	skipnc
  2663  03E1  2BE3               	goto	u1221
  2664  03E2  2BE4               	goto	u1220
  2665  03E3                     u1221:	
  2666  03E3  2BF0               	goto	l2404
  2667  03E4                     u1220:	
  2668  03E4                     l2402:	
  2669                           
  2670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  2671  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2672  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2673  03E6  0833               	movf	sprintf@c,w
  2674  03E7  00A8               	movwf	??_sprintf
  2675  03E8  01A9               	clrf	??_sprintf+1
  2676  03E9  0828               	movf	??_sprintf,w
  2677  03EA  02B0               	subwf	sprintf@width,f
  2678  03EB  0829               	movf	??_sprintf+1,w
  2679  03EC  1C03               	skipc
  2680  03ED  03B1               	decf	sprintf@width+1,f
  2681  03EE  02B1               	subwf	sprintf@width+1,f
  2682  03EF  2BF4               	goto	l2406
  2683  03F0                     l2404:	
  2684                           
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  2686  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2687  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2688  03F2  01B0               	clrf	sprintf@width
  2689  03F3  01B1               	clrf	sprintf@width+1
  2690  03F4                     l2406:	
  2691                           
  2692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  2693  03F4  0830               	movf	sprintf@width,w
  2694  03F5  0431               	iorwf	sprintf@width+1,w
  2695  03F6  1903               	btfsc	3,2
  2696  03F7  2BF9               	goto	u1231
  2697  03F8  2BFA               	goto	u1230
  2698  03F9                     u1231:	
  2699  03F9  2C11               	goto	l2414
  2700  03FA                     u1230:	
  2701  03FA                     l2408:	
  2702                           
  2703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  2704  03FA  3020               	movlw	32
  2705  03FB  00A8               	movwf	??_sprintf
  2706  03FC  0832               	movf	sprintf@sp,w
  2707  03FD  0084               	movwf	4
  2708  03FE  0828               	movf	??_sprintf,w
  2709  03FF  1383               	bcf	3,7	;select IRP bank0
  2710  0400  0080               	movwf	0
  2711  0401                     l2410:	
  2712  0401  3001               	movlw	1
  2713  0402  00A8               	movwf	??_sprintf
  2714  0403  0828               	movf	??_sprintf,w
  2715  0404  07B2               	addwf	sprintf@sp,f
  2716  0405                     l2412:	
  2717  0405  30FF               	movlw	255
  2718  0406  07B0               	addwf	sprintf@width,f
  2719  0407  1803               	skipnc
  2720  0408  0AB1               	incf	sprintf@width+1,f
  2721  0409  30FF               	movlw	255
  2722  040A  07B1               	addwf	sprintf@width+1,f
  2723  040B  0830               	movf	sprintf@width,w
  2724  040C  0431               	iorwf	sprintf@width+1,w
  2725  040D  1D03               	btfss	3,2
  2726  040E  2C10               	goto	u1241
  2727  040F  2C11               	goto	u1240
  2728  0410                     u1241:	
  2729  0410  2BFA               	goto	l2408
  2730  0411                     u1240:	
  2731  0411                     l2414:	
  2732                           
  2733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  2734  0411  0833               	movf	sprintf@c,w
  2735  0412  00A8               	movwf	??_sprintf
  2736  0413  0828               	movf	??_sprintf,w
  2737  0414  00AF               	movwf	sprintf@prec
  2738                           
  2739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2740  0415  2C51               	goto	l2422
  2741  0416                     l2416:	
  2742                           
  2743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2744  0416  300A               	movlw	10
  2745  0417  00A0               	movwf	___lwmod@divisor
  2746  0418  3000               	movlw	0
  2747  0419  00A1               	movwf	___lwmod@divisor+1
  2748  041A  082F               	movf	sprintf@prec,w
  2749  041B  00A8               	movwf	??_sprintf
  2750  041C  0728               	addwf	??_sprintf,w
  2751  041D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2752  041E  0084               	movwf	4
  2753  041F  120A  118A  27C9  120A  118A  	fcall	stringdir
  2754  0424  00F2               	movwf	___lwdiv@divisor
  2755  0425  120A  118A  27C9  120A  118A  	fcall	stringdir
  2756  042A  00F3               	movwf	___lwdiv@divisor+1
  2757  042B  082E               	movf	sprintf@val+1,w
  2758  042C  00F5               	movwf	___lwdiv@dividend+1
  2759  042D  082D               	movf	sprintf@val,w
  2760  042E  00F4               	movwf	___lwdiv@dividend
  2761  042F  120A  118A  26D1  120A  118A  	fcall	___lwdiv
  2762  0434  0873               	movf	?___lwdiv+1,w
  2763  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0437  00A3               	movwf	___lwmod@dividend+1
  2766  0438  0872               	movf	?___lwdiv,w
  2767  0439  00A2               	movwf	___lwmod@dividend
  2768  043A  120A  118A  2715  120A  118A  	fcall	___lwmod
  2769  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0441  0820               	movf	?___lwmod,w
  2772  0442  3E30               	addlw	48
  2773  0443  00A9               	movwf	??_sprintf+1
  2774  0444  0829               	movf	??_sprintf+1,w
  2775  0445  00B3               	movwf	sprintf@c
  2776  0446                     l2418:	
  2777                           
  2778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  2779  0446  0833               	movf	sprintf@c,w
  2780  0447  00A8               	movwf	??_sprintf
  2781  0448  0832               	movf	sprintf@sp,w
  2782  0449  0084               	movwf	4
  2783  044A  0828               	movf	??_sprintf,w
  2784  044B  1383               	bcf	3,7	;select IRP bank0
  2785  044C  0080               	movwf	0
  2786  044D                     l2420:	
  2787  044D  3001               	movlw	1
  2788  044E  00A8               	movwf	??_sprintf
  2789  044F  0828               	movf	??_sprintf,w
  2790  0450  07B2               	addwf	sprintf@sp,f
  2791  0451                     l2422:	
  2792                           
  2793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2794  0451  30FF               	movlw	255
  2795  0452  00A8               	movwf	??_sprintf
  2796  0453  0828               	movf	??_sprintf,w
  2797  0454  07AF               	addwf	sprintf@prec,f
  2798  0455  0A2F               	incf	sprintf@prec,w
  2799  0456  1D03               	btfss	3,2
  2800  0457  2C59               	goto	u1251
  2801  0458  2C5A               	goto	u1250
  2802  0459                     u1251:	
  2803  0459  2C16               	goto	l2416
  2804  045A                     u1250:	
  2805  045A                     l2424:	
  2806                           
  2807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2808  045A  3001               	movlw	1
  2809  045B  07A5               	addwf	sprintf@f,f
  2810  045C  30FF               	movlw	-1
  2811  045D  0725               	addwf	sprintf@f,w
  2812  045E  0084               	movwf	4
  2813  045F  120A  118A  27C9  120A  118A  	fcall	stringdir
  2814  0464  00A8               	movwf	??_sprintf
  2815  0465  0828               	movf	??_sprintf,w
  2816  0466  00B3               	movwf	sprintf@c
  2817  0467  0833               	movf	sprintf@c,w
  2818  0468  1D03               	btfss	3,2
  2819  0469  2C6B               	goto	u1261
  2820  046A  2C6C               	goto	u1260
  2821  046B                     u1261:	
  2822  046B  2B1E               	goto	l2358
  2823  046C                     u1260:	
  2824  046C                     l2426:	
  2825                           
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  2827  046C  0832               	movf	sprintf@sp,w
  2828  046D  0084               	movwf	4
  2829  046E  1383               	bcf	3,7	;select IRP bank0
  2830  046F  0180               	clrf	0
  2831  0470                     l429:	
  2832  0470  0008               	return
  2833  0471                     __end_of_sprintf:	
  2834                           
  2835                           	psect	text5
  2836  07EE                     __ptext5:	
  2837 ;; *************** function _isdigit *****************
  2838 ;; Defined at:
  2839 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  c               1    wreg     unsigned char 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  c               1    3[COMMON] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;		None               void
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2853 ;;      Params:         0       0       0       0       0
  2854 ;;      Locals:         2       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0
  2856 ;;      Totals:         2       0       0       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_sprintf
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           
  2868                           ;psect for function _isdigit
  2869  07EE                     _isdigit:	
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2873                           ;isdigit@c stored from wreg
  2874  07EE  00F3               	movwf	isdigit@c
  2875  07EF                     l1696:	
  2876  07EF  01F2               	clrf	_isdigit$1177
  2877  07F0                     l1698:	
  2878  07F0  303A               	movlw	58
  2879  07F1  0273               	subwf	isdigit@c,w
  2880  07F2  1803               	skipnc
  2881  07F3  2FF5               	goto	u591
  2882  07F4  2FF6               	goto	u590
  2883  07F5                     u591:	
  2884  07F5  2FFE               	goto	l1704
  2885  07F6                     u590:	
  2886  07F6                     l1700:	
  2887  07F6  3030               	movlw	48
  2888  07F7  0273               	subwf	isdigit@c,w
  2889  07F8  1C03               	skipc
  2890  07F9  2FFB               	goto	u601
  2891  07FA  2FFC               	goto	u600
  2892  07FB                     u601:	
  2893  07FB  2FFE               	goto	l1704
  2894  07FC                     u600:	
  2895  07FC                     l1702:	
  2896  07FC  01F2               	clrf	_isdigit$1177
  2897  07FD  0AF2               	incf	_isdigit$1177,f
  2898  07FE                     l1704:	
  2899  07FE  0C72               	rrf	_isdigit$1177,w
  2900  07FF                     l880:	
  2901  07FF  0008               	return
  2902  0800                     __end_of_isdigit:	
  2903                           
  2904                           	psect	text6
  2905  0F82                     __ptext6:	
  2906 ;; *************** function ___wmul *****************
  2907 ;; Defined at:
  2908 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  multiplier      2    2[COMMON] unsigned int 
  2911 ;;  multiplicand    2    4[COMMON] unsigned int 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  product         2    6[COMMON] unsigned int 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  2    2[COMMON] unsigned int 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         4       0       0       0       0
  2924 ;;      Locals:         2       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         6       0       0       0       0
  2927 ;;Total ram usage:        6 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    1
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_sprintf
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function ___wmul
  2939  0F82                     ___wmul:	
  2940  0F82                     l1708:	
  2941                           ;incstack = 0
  2942                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2943                           
  2944  0F82  01F6               	clrf	___wmul@product
  2945  0F83  01F7               	clrf	___wmul@product+1
  2946  0F84                     l1710:	
  2947  0F84  1C72               	btfss	___wmul@multiplier,0
  2948  0F85  2F87               	goto	u611
  2949  0F86  2F88               	goto	u610
  2950  0F87                     u611:	
  2951  0F87  2F8E               	goto	l433
  2952  0F88                     u610:	
  2953  0F88                     l1712:	
  2954  0F88  0874               	movf	___wmul@multiplicand,w
  2955  0F89  07F6               	addwf	___wmul@product,f
  2956  0F8A  1803               	skipnc
  2957  0F8B  0AF7               	incf	___wmul@product+1,f
  2958  0F8C  0875               	movf	___wmul@multiplicand+1,w
  2959  0F8D  07F7               	addwf	___wmul@product+1,f
  2960  0F8E                     l433:	
  2961  0F8E  3001               	movlw	1
  2962  0F8F                     u625:	
  2963  0F8F  1003               	clrc
  2964  0F90  0DF4               	rlf	___wmul@multiplicand,f
  2965  0F91  0DF5               	rlf	___wmul@multiplicand+1,f
  2966  0F92  3EFF               	addlw	-1
  2967  0F93  1D03               	skipz
  2968  0F94  2F8F               	goto	u625
  2969  0F95                     l1714:	
  2970  0F95  3001               	movlw	1
  2971  0F96                     u635:	
  2972  0F96  1003               	clrc
  2973  0F97  0CF3               	rrf	___wmul@multiplier+1,f
  2974  0F98  0CF2               	rrf	___wmul@multiplier,f
  2975  0F99  3EFF               	addlw	-1
  2976  0F9A  1D03               	skipz
  2977  0F9B  2F96               	goto	u635
  2978  0F9C                     l1716:	
  2979  0F9C  0872               	movf	___wmul@multiplier,w
  2980  0F9D  0473               	iorwf	___wmul@multiplier+1,w
  2981  0F9E  1D03               	btfss	3,2
  2982  0F9F  2FA1               	goto	u641
  2983  0FA0  2FA2               	goto	u640
  2984  0FA1                     u641:	
  2985  0FA1  2F84               	goto	l1710
  2986  0FA2                     u640:	
  2987  0FA2                     l1718:	
  2988  0FA2  0877               	movf	___wmul@product+1,w
  2989  0FA3  00F3               	movwf	?___wmul+1
  2990  0FA4  0876               	movf	___wmul@product,w
  2991  0FA5  00F2               	movwf	?___wmul
  2992  0FA6                     l435:	
  2993  0FA6  0008               	return
  2994  0FA7                     __end_of___wmul:	
  2995                           
  2996                           	psect	text7
  2997  0715                     __ptext7:	
  2998 ;; *************** function ___lwmod *****************
  2999 ;; Defined at:
  3000 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  divisor         2    0[BANK0 ] unsigned int 
  3003 ;;  dividend        2    2[BANK0 ] unsigned int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  counter         1    4[BANK0 ] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  2    0[BANK0 ] unsigned int 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         0       4       0       0       0
  3016 ;;      Locals:         0       1       0       0       0
  3017 ;;      Temps:          1       0       0       0       0
  3018 ;;      Totals:         1       5       0       0       0
  3019 ;;Total ram usage:        6 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_sprintf
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function ___lwmod
  3031  0715                     ___lwmod:	
  3032  0715                     l2334:	
  3033                           ;incstack = 0
  3034                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3035                           
  3036  0715  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0716  1303               	bcf	3,6	;RP1=0, select bank0
  3038  0717  0820               	movf	___lwmod@divisor,w
  3039  0718  0421               	iorwf	___lwmod@divisor+1,w
  3040  0719  1903               	btfsc	3,2
  3041  071A  2F1C               	goto	u1111
  3042  071B  2F1D               	goto	u1110
  3043  071C                     u1111:	
  3044  071C  2F4C               	goto	l2352
  3045  071D                     u1110:	
  3046  071D                     l2336:	
  3047  071D  01A4               	clrf	___lwmod@counter
  3048  071E  0AA4               	incf	___lwmod@counter,f
  3049  071F  2F2B               	goto	l2342
  3050  0720                     l2338:	
  3051  0720  3001               	movlw	1
  3052  0721                     u1125:	
  3053  0721  1003               	clrc
  3054  0722  0DA0               	rlf	___lwmod@divisor,f
  3055  0723  0DA1               	rlf	___lwmod@divisor+1,f
  3056  0724  3EFF               	addlw	-1
  3057  0725  1D03               	skipz
  3058  0726  2F21               	goto	u1125
  3059  0727                     l2340:	
  3060  0727  3001               	movlw	1
  3061  0728  00FA               	movwf	??___lwmod
  3062  0729  087A               	movf	??___lwmod,w
  3063  072A  07A4               	addwf	___lwmod@counter,f
  3064  072B                     l2342:	
  3065  072B  1FA1               	btfss	___lwmod@divisor+1,7
  3066  072C  2F2E               	goto	u1131
  3067  072D  2F2F               	goto	u1130
  3068  072E                     u1131:	
  3069  072E  2F20               	goto	l2338
  3070  072F                     u1130:	
  3071  072F                     l2344:	
  3072  072F  0821               	movf	___lwmod@divisor+1,w
  3073  0730  0223               	subwf	___lwmod@dividend+1,w
  3074  0731  1D03               	skipz
  3075  0732  2F35               	goto	u1145
  3076  0733  0820               	movf	___lwmod@divisor,w
  3077  0734  0222               	subwf	___lwmod@dividend,w
  3078  0735                     u1145:	
  3079  0735  1C03               	skipc
  3080  0736  2F38               	goto	u1141
  3081  0737  2F39               	goto	u1140
  3082  0738                     u1141:	
  3083  0738  2F3F               	goto	l2348
  3084  0739                     u1140:	
  3085  0739                     l2346:	
  3086  0739  0820               	movf	___lwmod@divisor,w
  3087  073A  02A2               	subwf	___lwmod@dividend,f
  3088  073B  0821               	movf	___lwmod@divisor+1,w
  3089  073C  1C03               	skipc
  3090  073D  03A3               	decf	___lwmod@dividend+1,f
  3091  073E  02A3               	subwf	___lwmod@dividend+1,f
  3092  073F                     l2348:	
  3093  073F  3001               	movlw	1
  3094  0740                     u1155:	
  3095  0740  1003               	clrc
  3096  0741  0CA1               	rrf	___lwmod@divisor+1,f
  3097  0742  0CA0               	rrf	___lwmod@divisor,f
  3098  0743  3EFF               	addlw	-1
  3099  0744  1D03               	skipz
  3100  0745  2F40               	goto	u1155
  3101  0746                     l2350:	
  3102  0746  3001               	movlw	1
  3103  0747  02A4               	subwf	___lwmod@counter,f
  3104  0748  1D03               	btfss	3,2
  3105  0749  2F4B               	goto	u1161
  3106  074A  2F4C               	goto	u1160
  3107  074B                     u1161:	
  3108  074B  2F2F               	goto	l2344
  3109  074C                     u1160:	
  3110  074C                     l2352:	
  3111  074C  0823               	movf	___lwmod@dividend+1,w
  3112  074D  00A1               	movwf	?___lwmod+1
  3113  074E  0822               	movf	___lwmod@dividend,w
  3114  074F  00A0               	movwf	?___lwmod
  3115  0750                     l715:	
  3116  0750  0008               	return
  3117  0751                     __end_of___lwmod:	
  3118                           
  3119                           	psect	text8
  3120  06D1                     __ptext8:	
  3121 ;; *************** function ___lwdiv *****************
  3122 ;; Defined at:
  3123 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  divisor         2    2[COMMON] unsigned int 
  3126 ;;  dividend        2    4[COMMON] unsigned int 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  quotient        2    7[COMMON] unsigned int 
  3129 ;;  counter         1    9[COMMON] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  2    2[COMMON] unsigned int 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3139 ;;      Params:         4       0       0       0       0
  3140 ;;      Locals:         3       0       0       0       0
  3141 ;;      Temps:          1       0       0       0       0
  3142 ;;      Totals:         8       0       0       0       0
  3143 ;;Total ram usage:        8 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    1
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;;		_sprintf
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function ___lwdiv
  3156  06D1                     ___lwdiv:	
  3157  06D1                     l1746:	
  3158                           ;incstack = 0
  3159                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3160                           
  3161  06D1  01F7               	clrf	___lwdiv@quotient
  3162  06D2  01F8               	clrf	___lwdiv@quotient+1
  3163  06D3                     l1748:	
  3164  06D3  0872               	movf	___lwdiv@divisor,w
  3165  06D4  0473               	iorwf	___lwdiv@divisor+1,w
  3166  06D5  1903               	btfsc	3,2
  3167  06D6  2ED8               	goto	u721
  3168  06D7  2ED9               	goto	u720
  3169  06D8                     u721:	
  3170  06D8  2F10               	goto	l1768
  3171  06D9                     u720:	
  3172  06D9                     l1750:	
  3173  06D9  01F9               	clrf	___lwdiv@counter
  3174  06DA  0AF9               	incf	___lwdiv@counter,f
  3175  06DB  2EE7               	goto	l1756
  3176  06DC                     l1752:	
  3177  06DC  3001               	movlw	1
  3178  06DD                     u735:	
  3179  06DD  1003               	clrc
  3180  06DE  0DF2               	rlf	___lwdiv@divisor,f
  3181  06DF  0DF3               	rlf	___lwdiv@divisor+1,f
  3182  06E0  3EFF               	addlw	-1
  3183  06E1  1D03               	skipz
  3184  06E2  2EDD               	goto	u735
  3185  06E3                     l1754:	
  3186  06E3  3001               	movlw	1
  3187  06E4  00F6               	movwf	??___lwdiv
  3188  06E5  0876               	movf	??___lwdiv,w
  3189  06E6  07F9               	addwf	___lwdiv@counter,f
  3190  06E7                     l1756:	
  3191  06E7  1FF3               	btfss	___lwdiv@divisor+1,7
  3192  06E8  2EEA               	goto	u741
  3193  06E9  2EEB               	goto	u740
  3194  06EA                     u741:	
  3195  06EA  2EDC               	goto	l1752
  3196  06EB                     u740:	
  3197  06EB                     l1758:	
  3198  06EB  3001               	movlw	1
  3199  06EC                     u755:	
  3200  06EC  1003               	clrc
  3201  06ED  0DF7               	rlf	___lwdiv@quotient,f
  3202  06EE  0DF8               	rlf	___lwdiv@quotient+1,f
  3203  06EF  3EFF               	addlw	-1
  3204  06F0  1D03               	skipz
  3205  06F1  2EEC               	goto	u755
  3206  06F2  0873               	movf	___lwdiv@divisor+1,w
  3207  06F3  0275               	subwf	___lwdiv@dividend+1,w
  3208  06F4  1D03               	skipz
  3209  06F5  2EF8               	goto	u765
  3210  06F6  0872               	movf	___lwdiv@divisor,w
  3211  06F7  0274               	subwf	___lwdiv@dividend,w
  3212  06F8                     u765:	
  3213  06F8  1C03               	skipc
  3214  06F9  2EFB               	goto	u761
  3215  06FA  2EFC               	goto	u760
  3216  06FB                     u761:	
  3217  06FB  2F03               	goto	l1764
  3218  06FC                     u760:	
  3219  06FC                     l1760:	
  3220  06FC  0872               	movf	___lwdiv@divisor,w
  3221  06FD  02F4               	subwf	___lwdiv@dividend,f
  3222  06FE  0873               	movf	___lwdiv@divisor+1,w
  3223  06FF  1C03               	skipc
  3224  0700  03F5               	decf	___lwdiv@dividend+1,f
  3225  0701  02F5               	subwf	___lwdiv@dividend+1,f
  3226  0702                     l1762:	
  3227  0702  1477               	bsf	___lwdiv@quotient,0
  3228  0703                     l1764:	
  3229  0703  3001               	movlw	1
  3230  0704                     u775:	
  3231  0704  1003               	clrc
  3232  0705  0CF3               	rrf	___lwdiv@divisor+1,f
  3233  0706  0CF2               	rrf	___lwdiv@divisor,f
  3234  0707  3EFF               	addlw	-1
  3235  0708  1D03               	skipz
  3236  0709  2F04               	goto	u775
  3237  070A                     l1766:	
  3238  070A  3001               	movlw	1
  3239  070B  02F9               	subwf	___lwdiv@counter,f
  3240  070C  1D03               	btfss	3,2
  3241  070D  2F0F               	goto	u781
  3242  070E  2F10               	goto	u780
  3243  070F                     u781:	
  3244  070F  2EEB               	goto	l1758
  3245  0710                     u780:	
  3246  0710                     l1768:	
  3247  0710  0878               	movf	___lwdiv@quotient+1,w
  3248  0711  00F3               	movwf	?___lwdiv+1
  3249  0712  0877               	movf	___lwdiv@quotient,w
  3250  0713  00F2               	movwf	?___lwdiv
  3251  0714                     l705:	
  3252  0714  0008               	return
  3253  0715                     __end_of___lwdiv:	
  3254                           
  3255                           	psect	text9
  3256  0EF6                     __ptext9:	
  3257 ;; *************** function _setup *****************
  3258 ;; Defined at:
  3259 ;;		line 183 in file "master.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		status,2
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function _setup
  3289  0EF6                     _setup:	
  3290  0EF6                     l1794:	
  3291                           ;incstack = 0
  3292                           ; Regs used in _setup: [status,2]
  3293                           
  3294                           
  3295                           ;master.c: 184:     TRISA = 0x00;
  3296  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3297  0EF7  1303               	bcf	3,6	;RP1=0, select bank1
  3298  0EF8  0185               	clrf	5	;volatile
  3299  0EF9                     l1796:	
  3300                           
  3301                           ;master.c: 185:     TRISBbits.TRISB0 = 0;
  3302  0EF9  1006               	bcf	6,0	;volatile
  3303  0EFA                     l1798:	
  3304                           
  3305                           ;master.c: 186:     TRISBbits.TRISB1 = 1;
  3306  0EFA  1486               	bsf	6,1	;volatile
  3307  0EFB                     l1800:	
  3308                           
  3309                           ;master.c: 187:     TRISBbits.TRISB2 = 0;
  3310  0EFB  1106               	bcf	6,2	;volatile
  3311  0EFC                     l1802:	
  3312                           
  3313                           ;master.c: 188:     TRISBbits.TRISB3 = 1;
  3314  0EFC  1586               	bsf	6,3	;volatile
  3315  0EFD                     l1804:	
  3316                           
  3317                           ;master.c: 189:     TRISBbits.TRISB4 = 0;
  3318  0EFD  1206               	bcf	6,4	;volatile
  3319                           
  3320                           ;master.c: 190:     TRISD = 0;
  3321  0EFE  0188               	clrf	8	;volatile
  3322                           
  3323                           ;master.c: 191:     PORTD = 0;
  3324  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0F01  0188               	clrf	8	;volatile
  3327                           
  3328                           ;master.c: 192:     TRISE = 0;
  3329  0F02  1683               	bsf	3,5	;RP0=1, select bank1
  3330  0F03  1303               	bcf	3,6	;RP1=0, select bank1
  3331  0F04  0189               	clrf	9	;volatile
  3332                           
  3333                           ;master.c: 193:     ANSEL = 0;
  3334  0F05  1683               	bsf	3,5	;RP0=1, select bank3
  3335  0F06  1703               	bsf	3,6	;RP1=1, select bank3
  3336  0F07  0188               	clrf	8	;volatile
  3337                           
  3338                           ;master.c: 194:     ANSELH = 0;
  3339  0F08  0189               	clrf	9	;volatile
  3340  0F09                     l123:	
  3341  0F09  0008               	return
  3342  0F0A                     __end_of_setup:	
  3343                           
  3344                           	psect	text10
  3345  059E                     __ptext10:	
  3346 ;; *************** function _oscInit *****************
  3347 ;; Defined at:
  3348 ;;		line 11 in file "OSCCON.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  freq            1    wreg     unsigned char 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  freq            1    4[COMMON] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      unsigned char 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       0       0       0       0
  3363 ;;      Locals:         1       0       0       0       0
  3364 ;;      Temps:          2       0       0       0       0
  3365 ;;      Totals:         3       0       0       0       0
  3366 ;;Total ram usage:        3 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:    1
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function _oscInit
  3378  059E                     _oscInit:	
  3379                           
  3380                           ;incstack = 0
  3381                           ; Regs used in _oscInit: [wreg-fsr0h+status,2+status,0]
  3382                           ;oscInit@freq stored from wreg
  3383  059E  00F4               	movwf	oscInit@freq
  3384  059F                     l1806:	
  3385                           
  3386                           ;OSCCON.c: 12:     switch(freq){
  3387  059F  2DF0               	goto	l1810
  3388  05A0                     l129:	
  3389                           ;OSCCON.c: 13:         case 0:
  3390                           
  3391                           
  3392                           ;OSCCON.c: 14:             OSCCONbits.IRCF2 = 1;
  3393  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  3394  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  3395  05A2  170F               	bsf	15,6	;volatile
  3396                           
  3397                           ;OSCCON.c: 15:             OSCCONbits.IRCF1 = 1;
  3398  05A3  168F               	bsf	15,5	;volatile
  3399                           
  3400                           ;OSCCON.c: 16:             OSCCONbits.IRCF0 = 1;
  3401  05A4  160F               	bsf	15,4	;volatile
  3402                           
  3403                           ;OSCCON.c: 17:             OSCCONbits.OSTS = 0;
  3404  05A5  118F               	bcf	15,3	;volatile
  3405                           
  3406                           ;OSCCON.c: 18:             OSCCONbits.HTS = 1;
  3407  05A6  150F               	bsf	15,2	;volatile
  3408                           
  3409                           ;OSCCON.c: 19:             OSCCONbits.LTS = 0;
  3410  05A7  108F               	bcf	15,1	;volatile
  3411                           
  3412                           ;OSCCON.c: 20:             OSCCONbits.SCS = 1;
  3413  05A8  140F               	bsf	15,0	;volatile
  3414                           
  3415                           ;OSCCON.c: 21:             break;
  3416  05A9  2E12               	goto	l138
  3417  05AA                     l131:	
  3418                           ;OSCCON.c: 22:         case 1:
  3419                           
  3420                           
  3421                           ;OSCCON.c: 23:             OSCCONbits.IRCF2 = 1;
  3422  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3423  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  3424  05AC  170F               	bsf	15,6	;volatile
  3425                           
  3426                           ;OSCCON.c: 24:             OSCCONbits.IRCF1 = 1;
  3427  05AD  168F               	bsf	15,5	;volatile
  3428                           
  3429                           ;OSCCON.c: 25:             OSCCONbits.IRCF0 = 0;
  3430  05AE  120F               	bcf	15,4	;volatile
  3431                           
  3432                           ;OSCCON.c: 26:             OSCCONbits.OSTS = 0;
  3433  05AF  118F               	bcf	15,3	;volatile
  3434                           
  3435                           ;OSCCON.c: 27:             OSCCONbits.HTS = 1;
  3436  05B0  150F               	bsf	15,2	;volatile
  3437                           
  3438                           ;OSCCON.c: 28:             OSCCONbits.LTS = 0;
  3439  05B1  108F               	bcf	15,1	;volatile
  3440                           
  3441                           ;OSCCON.c: 29:             OSCCONbits.SCS = 1;
  3442  05B2  140F               	bsf	15,0	;volatile
  3443                           
  3444                           ;OSCCON.c: 30:             break;
  3445  05B3  2E12               	goto	l138
  3446  05B4                     l132:	
  3447                           ;OSCCON.c: 31:         case 2:
  3448                           
  3449                           
  3450                           ;OSCCON.c: 32:             OSCCONbits.IRCF2 = 1;
  3451  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  3452  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  3453  05B6  170F               	bsf	15,6	;volatile
  3454                           
  3455                           ;OSCCON.c: 33:             OSCCONbits.IRCF1 = 0;
  3456  05B7  128F               	bcf	15,5	;volatile
  3457                           
  3458                           ;OSCCON.c: 34:             OSCCONbits.IRCF0 = 1;
  3459  05B8  160F               	bsf	15,4	;volatile
  3460                           
  3461                           ;OSCCON.c: 35:             OSCCONbits.OSTS = 0;
  3462  05B9  118F               	bcf	15,3	;volatile
  3463                           
  3464                           ;OSCCON.c: 36:             OSCCONbits.HTS = 1;
  3465  05BA  150F               	bsf	15,2	;volatile
  3466                           
  3467                           ;OSCCON.c: 37:             OSCCONbits.LTS = 0;
  3468  05BB  108F               	bcf	15,1	;volatile
  3469                           
  3470                           ;OSCCON.c: 38:             OSCCONbits.SCS = 1;
  3471  05BC  140F               	bsf	15,0	;volatile
  3472                           
  3473                           ;OSCCON.c: 39:             break;
  3474  05BD  2E12               	goto	l138
  3475  05BE                     l133:	
  3476                           ;OSCCON.c: 40:         case 3:
  3477                           
  3478                           
  3479                           ;OSCCON.c: 41:             OSCCONbits.IRCF2 = 1;
  3480  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3481  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3482  05C0  170F               	bsf	15,6	;volatile
  3483                           
  3484                           ;OSCCON.c: 42:             OSCCONbits.IRCF1 = 0;
  3485  05C1  128F               	bcf	15,5	;volatile
  3486                           
  3487                           ;OSCCON.c: 43:             OSCCONbits.IRCF0 = 0;
  3488  05C2  120F               	bcf	15,4	;volatile
  3489                           
  3490                           ;OSCCON.c: 44:             OSCCONbits.OSTS = 0;
  3491  05C3  118F               	bcf	15,3	;volatile
  3492                           
  3493                           ;OSCCON.c: 45:             OSCCONbits.HTS = 1;
  3494  05C4  150F               	bsf	15,2	;volatile
  3495                           
  3496                           ;OSCCON.c: 46:             OSCCONbits.LTS = 0;
  3497  05C5  108F               	bcf	15,1	;volatile
  3498                           
  3499                           ;OSCCON.c: 47:             OSCCONbits.SCS = 1;
  3500  05C6  140F               	bsf	15,0	;volatile
  3501                           
  3502                           ;OSCCON.c: 48:             break;
  3503  05C7  2E12               	goto	l138
  3504  05C8                     l134:	
  3505                           ;OSCCON.c: 49:         case 4:
  3506                           
  3507                           
  3508                           ;OSCCON.c: 50:             OSCCONbits.IRCF2 = 0;
  3509  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  3510  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  3511  05CA  130F               	bcf	15,6	;volatile
  3512                           
  3513                           ;OSCCON.c: 51:             OSCCONbits.IRCF1 = 1;
  3514  05CB  168F               	bsf	15,5	;volatile
  3515                           
  3516                           ;OSCCON.c: 52:             OSCCONbits.IRCF0 = 1;
  3517  05CC  160F               	bsf	15,4	;volatile
  3518                           
  3519                           ;OSCCON.c: 53:             OSCCONbits.OSTS = 0;
  3520  05CD  118F               	bcf	15,3	;volatile
  3521                           
  3522                           ;OSCCON.c: 54:             OSCCONbits.HTS = 1;
  3523  05CE  150F               	bsf	15,2	;volatile
  3524                           
  3525                           ;OSCCON.c: 55:             OSCCONbits.LTS = 0;
  3526  05CF  108F               	bcf	15,1	;volatile
  3527                           
  3528                           ;OSCCON.c: 56:             OSCCONbits.SCS = 1;
  3529  05D0  140F               	bsf	15,0	;volatile
  3530                           
  3531                           ;OSCCON.c: 57:             break;
  3532  05D1  2E12               	goto	l138
  3533  05D2                     l135:	
  3534                           ;OSCCON.c: 58:         case 5:
  3535                           
  3536                           
  3537                           ;OSCCON.c: 59:             OSCCONbits.IRCF2 = 0;
  3538  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  3539  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  3540  05D4  130F               	bcf	15,6	;volatile
  3541                           
  3542                           ;OSCCON.c: 60:             OSCCONbits.IRCF1 = 1;
  3543  05D5  168F               	bsf	15,5	;volatile
  3544                           
  3545                           ;OSCCON.c: 61:             OSCCONbits.IRCF0 = 0;
  3546  05D6  120F               	bcf	15,4	;volatile
  3547                           
  3548                           ;OSCCON.c: 62:             OSCCONbits.OSTS = 0;
  3549  05D7  118F               	bcf	15,3	;volatile
  3550                           
  3551                           ;OSCCON.c: 63:             OSCCONbits.HTS = 1;
  3552  05D8  150F               	bsf	15,2	;volatile
  3553                           
  3554                           ;OSCCON.c: 64:             OSCCONbits.LTS = 0;
  3555  05D9  108F               	bcf	15,1	;volatile
  3556                           
  3557                           ;OSCCON.c: 65:             OSCCONbits.SCS = 1;
  3558  05DA  140F               	bsf	15,0	;volatile
  3559                           
  3560                           ;OSCCON.c: 66:             break;
  3561  05DB  2E12               	goto	l138
  3562  05DC                     l136:	
  3563                           ;OSCCON.c: 67:         case 6:
  3564                           
  3565                           
  3566                           ;OSCCON.c: 68:             OSCCONbits.IRCF2 = 0;
  3567  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  3568  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  3569  05DE  130F               	bcf	15,6	;volatile
  3570                           
  3571                           ;OSCCON.c: 69:             OSCCONbits.IRCF1 = 0;
  3572  05DF  128F               	bcf	15,5	;volatile
  3573                           
  3574                           ;OSCCON.c: 70:             OSCCONbits.IRCF0 = 1;
  3575  05E0  160F               	bsf	15,4	;volatile
  3576                           
  3577                           ;OSCCON.c: 71:             OSCCONbits.OSTS = 0;
  3578  05E1  118F               	bcf	15,3	;volatile
  3579                           
  3580                           ;OSCCON.c: 72:             OSCCONbits.HTS = 1;
  3581  05E2  150F               	bsf	15,2	;volatile
  3582                           
  3583                           ;OSCCON.c: 73:             OSCCONbits.LTS = 0;
  3584  05E3  108F               	bcf	15,1	;volatile
  3585                           
  3586                           ;OSCCON.c: 74:             OSCCONbits.SCS = 1;
  3587  05E4  140F               	bsf	15,0	;volatile
  3588                           
  3589                           ;OSCCON.c: 75:             break;
  3590  05E5  2E12               	goto	l138
  3591  05E6                     l137:	
  3592                           ;OSCCON.c: 76:         case 7:
  3593                           
  3594                           
  3595                           ;OSCCON.c: 77:             OSCCONbits.IRCF2 = 0;
  3596  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3597  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3598  05E8  130F               	bcf	15,6	;volatile
  3599                           
  3600                           ;OSCCON.c: 78:             OSCCONbits.IRCF1 = 0;
  3601  05E9  128F               	bcf	15,5	;volatile
  3602                           
  3603                           ;OSCCON.c: 79:             OSCCONbits.IRCF0 = 0;
  3604  05EA  120F               	bcf	15,4	;volatile
  3605                           
  3606                           ;OSCCON.c: 80:             OSCCONbits.OSTS = 0;
  3607  05EB  118F               	bcf	15,3	;volatile
  3608                           
  3609                           ;OSCCON.c: 81:             OSCCONbits.HTS = 0;
  3610  05EC  110F               	bcf	15,2	;volatile
  3611                           
  3612                           ;OSCCON.c: 82:             OSCCONbits.LTS = 1;
  3613  05ED  148F               	bsf	15,1	;volatile
  3614                           
  3615                           ;OSCCON.c: 83:             OSCCONbits.SCS = 1;
  3616  05EE  140F               	bsf	15,0	;volatile
  3617                           
  3618                           ;OSCCON.c: 84:             break;
  3619  05EF  2E12               	goto	l138
  3620  05F0                     l1810:	
  3621  05F0  0874               	movf	oscInit@freq,w
  3622  05F1  00F2               	movwf	??_oscInit
  3623  05F2  01F3               	clrf	??_oscInit+1
  3624                           
  3625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3626                           ; Switch size 1, requested type "simple"
  3627                           ; Number of cases is 1, Range of values is 0 to 0
  3628                           ; switch strategies available:
  3629                           ; Name         Instructions Cycles
  3630                           ; simple_byte            4     3 (average)
  3631                           ; direct_byte           11     8 (fixed)
  3632                           ; jumptable            260     6 (fixed)
  3633                           ;	Chosen strategy is simple_byte
  3634  05F3  0873               	movf	??_oscInit+1,w
  3635  05F4  3A00               	xorlw	0	; case 0
  3636  05F5  1903               	skipnz
  3637  05F6  2DF8               	goto	l2698
  3638  05F7  2E12               	goto	l138
  3639  05F8                     l2698:	
  3640                           
  3641                           ; Switch size 1, requested type "simple"
  3642                           ; Number of cases is 8, Range of values is 0 to 7
  3643                           ; switch strategies available:
  3644                           ; Name         Instructions Cycles
  3645                           ; simple_byte           25    13 (average)
  3646                           ; direct_byte           32     8 (fixed)
  3647                           ; jumptable            260     6 (fixed)
  3648                           ;	Chosen strategy is simple_byte
  3649  05F8  0872               	movf	??_oscInit,w
  3650  05F9  3A00               	xorlw	0	; case 0
  3651  05FA  1903               	skipnz
  3652  05FB  2DA0               	goto	l129
  3653  05FC  3A01               	xorlw	1	; case 1
  3654  05FD  1903               	skipnz
  3655  05FE  2DAA               	goto	l131
  3656  05FF  3A03               	xorlw	3	; case 2
  3657  0600  1903               	skipnz
  3658  0601  2DB4               	goto	l132
  3659  0602  3A01               	xorlw	1	; case 3
  3660  0603  1903               	skipnz
  3661  0604  2DBE               	goto	l133
  3662  0605  3A07               	xorlw	7	; case 4
  3663  0606  1903               	skipnz
  3664  0607  2DC8               	goto	l134
  3665  0608  3A01               	xorlw	1	; case 5
  3666  0609  1903               	skipnz
  3667  060A  2DD2               	goto	l135
  3668  060B  3A03               	xorlw	3	; case 6
  3669  060C  1903               	skipnz
  3670  060D  2DDC               	goto	l136
  3671  060E  3A01               	xorlw	1	; case 7
  3672  060F  1903               	skipnz
  3673  0610  2DE6               	goto	l137
  3674  0611  2E12               	goto	l138
  3675  0612                     l138:	
  3676  0612  0008               	return
  3677  0613                     __end_of_oscInit:	
  3678                           
  3679                           	psect	text11
  3680  050A                     __ptext11:	
  3681 ;; *************** function _mpu6050_init *****************
  3682 ;; Defined at:
  3683 ;;		line 20 in file "MPU6050.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0
  3699 ;;      Temps:          2       0       0       0       0
  3700 ;;      Totals:         2       0       0       0       0
  3701 ;;Total ram usage:        2 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    4
  3704 ;; This function calls:
  3705 ;;		_i2c_addr_start
  3706 ;;		_i2c_masterStop
  3707 ;;		_i2c_masterWrite
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _mpu6050_init
  3715  050A                     _mpu6050_init:	
  3716  050A                     l1876:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _mpu6050_init: [wreg+status,2+status,0+pclath+cstack]
  3719                           
  3720                           
  3721                           ;MPU6050.c: 22:   _delay((unsigned long)((100)*(4000000/4000.0)));
  3722  050A  3082               	movlw	130
  3723  050B  00F5               	movwf	??_mpu6050_init+1
  3724  050C  30DD               	movlw	221
  3725  050D  00F4               	movwf	??_mpu6050_init
  3726  050E                     u1457:	
  3727  050E  0BF4               	decfsz	??_mpu6050_init,f
  3728  050F  2D0E               	goto	u1457
  3729  0510  0BF5               	decfsz	??_mpu6050_init+1,f
  3730  0511  2D0E               	goto	u1457
  3731  0512  2D13               	nop2
  3732  0513                     l1878:	
  3733                           
  3734                           ;MPU6050.c: 26:     i2c_addr_start(0xD0);
  3735  0513  30D0               	movlw	208
  3736  0514  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  3737  0519                     l1880:	
  3738                           
  3739                           ;MPU6050.c: 27:     i2c_masterWrite(0x19);
  3740  0519  3019               	movlw	25
  3741  051A  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3742  051F                     l1882:	
  3743                           
  3744                           ;MPU6050.c: 28:     i2c_masterWrite(0x07);
  3745  051F  3007               	movlw	7
  3746  0520  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3747  0525                     l1884:	
  3748                           
  3749                           ;MPU6050.c: 29:     i2c_masterStop();
  3750  0525  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  3751  052A                     l1886:	
  3752                           
  3753                           ;MPU6050.c: 32:     i2c_addr_start(0xD0);
  3754  052A  30D0               	movlw	208
  3755  052B  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  3756  0530                     l1888:	
  3757                           
  3758                           ;MPU6050.c: 33:     i2c_masterWrite(0x6B);
  3759  0530  306B               	movlw	107
  3760  0531  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3761  0536                     l1890:	
  3762                           
  3763                           ;MPU6050.c: 34:     i2c_masterWrite(0x00);
  3764  0536  3000               	movlw	0
  3765  0537  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3766  053C                     l1892:	
  3767                           
  3768                           ;MPU6050.c: 35:     i2c_masterStop();
  3769  053C  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  3770  0541                     l1894:	
  3771                           
  3772                           ;MPU6050.c: 38:     i2c_addr_start(0xD0);
  3773  0541  30D0               	movlw	208
  3774  0542  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  3775  0547                     l1896:	
  3776                           
  3777                           ;MPU6050.c: 39:     i2c_masterWrite(0x1A);
  3778  0547  301A               	movlw	26
  3779  0548  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3780  054D                     l1898:	
  3781                           
  3782                           ;MPU6050.c: 40:     i2c_masterWrite(0x00);
  3783  054D  3000               	movlw	0
  3784  054E  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3785  0553                     l1900:	
  3786                           
  3787                           ;MPU6050.c: 41:     i2c_masterStop();
  3788  0553  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  3789  0558                     l1902:	
  3790                           
  3791                           ;MPU6050.c: 44:     i2c_addr_start(0xD0);
  3792  0558  30D0               	movlw	208
  3793  0559  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  3794  055E                     l1904:	
  3795                           
  3796                           ;MPU6050.c: 45:     i2c_masterWrite(0x1C);
  3797  055E  301C               	movlw	28
  3798  055F  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3799  0564                     l1906:	
  3800                           
  3801                           ;MPU6050.c: 46:     i2c_masterWrite(0x00);
  3802  0564  3000               	movlw	0
  3803  0565  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3804  056A                     l1908:	
  3805                           
  3806                           ;MPU6050.c: 47:     i2c_masterStop();
  3807  056A  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  3808  056F                     l1910:	
  3809                           
  3810                           ;MPU6050.c: 50:     i2c_addr_start(0xD0);
  3811  056F  30D0               	movlw	208
  3812  0570  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  3813  0575                     l1912:	
  3814                           
  3815                           ;MPU6050.c: 51:     i2c_masterWrite(0x1B);
  3816  0575  301B               	movlw	27
  3817  0576  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3818  057B                     l1914:	
  3819                           
  3820                           ;MPU6050.c: 52:     i2c_masterWrite(0x12);
  3821  057B  3012               	movlw	18
  3822  057C  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3823  0581                     l1916:	
  3824                           
  3825                           ;MPU6050.c: 53:     i2c_masterStop();
  3826  0581  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  3827  0586                     l1918:	
  3828                           
  3829                           ;MPU6050.c: 56:     i2c_addr_start(0xD0);
  3830  0586  30D0               	movlw	208
  3831  0587  120A  158A  26D5  120A  118A  	fcall	_i2c_addr_start
  3832  058C                     l1920:	
  3833                           
  3834                           ;MPU6050.c: 57:     i2c_masterWrite(0x38);
  3835  058C  3038               	movlw	56
  3836  058D  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3837  0592                     l1922:	
  3838                           
  3839                           ;MPU6050.c: 58:     i2c_masterWrite(0x01);
  3840  0592  3001               	movlw	1
  3841  0593  120A  158A  26A1  120A  118A  	fcall	_i2c_masterWrite
  3842  0598                     l1924:	
  3843                           
  3844                           ;MPU6050.c: 59:     i2c_masterStop();
  3845  0598  120A  158A  2698  120A  118A  	fcall	_i2c_masterStop
  3846  059D                     l267:	
  3847  059D  0008               	return
  3848  059E                     __end_of_mpu6050_init:	
  3849                           
  3850                           	psect	text12
  3851  0E98                     __ptext12:	
  3852 ;; *************** function _i2c_masterStop *****************
  3853 ;; Defined at:
  3854 ;;		line 41 in file "I2C.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, pclath, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3868 ;;      Params:         0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    2
  3875 ;; This function calls:
  3876 ;;		_i2c_masterWait
  3877 ;; This function is called by:
  3878 ;;		_main
  3879 ;;		_mpu6050_init
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           
  3884                           ;psect for function _i2c_masterStop
  3885  0E98                     _i2c_masterStop:	
  3886  0E98                     l1668:	
  3887                           ;incstack = 0
  3888                           ; Regs used in _i2c_masterStop: [wreg+status,2+status,0+pclath+cstack]
  3889                           
  3890                           
  3891                           ;I2C.c: 42:     i2c_masterWait();
  3892  0E98  120A  158A  26B8  120A  158A  	fcall	_i2c_masterWait
  3893  0E9D                     l1670:	
  3894                           
  3895                           ;I2C.c: 43:     SSPCON2bits.PEN = 1;
  3896  0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  3897  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  3898  0E9F  1511               	bsf	17,2	;volatile
  3899  0EA0                     l244:	
  3900  0EA0  0008               	return
  3901  0EA1                     __end_of_i2c_masterStop:	
  3902                           
  3903                           	psect	text13
  3904  0ED5                     __ptext13:	
  3905 ;; *************** function _i2c_addr_start *****************
  3906 ;; Defined at:
  3907 ;;		line 30 in file "I2C.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  addr            1    wreg     unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  addr            1    3[COMMON] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, pclath, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         0       0       0       0       0
  3922 ;;      Locals:         1       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0
  3924 ;;      Totals:         1       0       0       0       0
  3925 ;;Total ram usage:        1 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    3
  3928 ;; This function calls:
  3929 ;;		_i2c_masterWait
  3930 ;;		_i2c_masterWrite
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;;		_mpu6050_init
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           
  3938                           ;psect for function _i2c_addr_start
  3939  0ED5                     _i2c_addr_start:	
  3940                           
  3941                           ;incstack = 0
  3942                           ; Regs used in _i2c_addr_start: [wreg+status,2+status,0+pclath+cstack]
  3943                           ;i2c_addr_start@addr stored from wreg
  3944  0ED5  00F3               	movwf	i2c_addr_start@addr
  3945  0ED6                     l1664:	
  3946                           
  3947                           ;I2C.c: 31:     i2c_masterWait();
  3948  0ED6  120A  158A  26B8  120A  158A  	fcall	_i2c_masterWait
  3949  0EDB                     l1666:	
  3950                           
  3951                           ;I2C.c: 32:     SSPCON2bits.SEN = 1;
  3952  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3953  0EDC  1303               	bcf	3,6	;RP1=0, select bank1
  3954  0EDD  1411               	bsf	17,0	;volatile
  3955                           
  3956                           ;I2C.c: 33:     i2c_masterWrite(addr);
  3957  0EDE  0873               	movf	i2c_addr_start@addr,w
  3958  0EDF  120A  158A  26A1  120A  158A  	fcall	_i2c_masterWrite
  3959  0EE4                     l238:	
  3960  0EE4  0008               	return
  3961  0EE5                     __end_of_i2c_addr_start:	
  3962                           
  3963                           	psect	text14
  3964  0EA1                     __ptext14:	
  3965 ;; *************** function _i2c_masterWrite *****************
  3966 ;; Defined at:
  3967 ;;		line 54 in file "I2C.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  data            1    wreg     unsigned char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  data            1    2[COMMON] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0, pclath, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3981 ;;      Params:         0       0       0       0       0
  3982 ;;      Locals:         1       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0
  3984 ;;      Totals:         1       0       0       0       0
  3985 ;;Total ram usage:        1 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    2
  3988 ;; This function calls:
  3989 ;;		_i2c_masterWait
  3990 ;; This function is called by:
  3991 ;;		_main
  3992 ;;		_i2c_addr_start
  3993 ;;		_mpu6050_init
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           
  3998                           ;psect for function _i2c_masterWrite
  3999  0EA1                     _i2c_masterWrite:	
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _i2c_masterWrite: [wreg+status,2+status,0+pclath+cstack]
  4003                           ;i2c_masterWrite@data stored from wreg
  4004  0EA1  00F2               	movwf	i2c_masterWrite@data
  4005  0EA2                     l1650:	
  4006                           
  4007                           ;I2C.c: 55:     i2c_masterWait();
  4008  0EA2  120A  158A  26B8  120A  158A  	fcall	_i2c_masterWait
  4009  0EA7                     l1652:	
  4010                           
  4011                           ;I2C.c: 56:     SSPBUF = data;
  4012  0EA7  0872               	movf	i2c_masterWrite@data,w
  4013  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0EAA  0093               	movwf	19	;volatile
  4016  0EAB                     l247:	
  4017  0EAB  0008               	return
  4018  0EAC                     __end_of_i2c_masterWrite:	
  4019                           
  4020                           	psect	text15
  4021  0F20                     __ptext15:	
  4022 ;; *************** function _lcd8_setCursor *****************
  4023 ;; Defined at:
  4024 ;;		line 62 in file "LCD.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  fila            1    wreg     unsigned char 
  4027 ;;  columna         1    5[COMMON] unsigned char 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  fila            1    6[COMMON] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4039 ;;      Params:         1       0       0       0       0
  4040 ;;      Locals:         1       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0
  4042 ;;      Totals:         2       0       0       0       0
  4043 ;;Total ram usage:        2 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    3
  4046 ;; This function calls:
  4047 ;;		_lcd8_cmd
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           
  4054                           ;psect for function _lcd8_setCursor
  4055  0F20                     _lcd8_setCursor:	
  4056                           
  4057                           ;incstack = 0
  4058                           ; Regs used in _lcd8_setCursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4059                           ;lcd8_setCursor@fila stored from wreg
  4060  0F20  00F6               	movwf	lcd8_setCursor@fila
  4061  0F21                     l2046:	
  4062                           
  4063                           ;LCD.c: 63:     if (fila == 1){
  4064  0F21  0376               	decf	lcd8_setCursor@fila,w
  4065  0F22  1D03               	btfss	3,2
  4066  0F23  2F25               	goto	u981
  4067  0F24  2F26               	goto	u980
  4068  0F25                     u981:	
  4069  0F25  2F2E               	goto	l2050
  4070  0F26                     u980:	
  4071  0F26                     l2048:	
  4072                           
  4073                           ;LCD.c: 64:         lcd8_cmd(0x80 + columna);
  4074  0F26  0875               	movf	lcd8_setCursor@columna,w
  4075  0F27  3E80               	addlw	128
  4076  0F28  120A  158A  26E5  120A  158A  	fcall	_lcd8_cmd
  4077                           
  4078                           ;LCD.c: 65:     }
  4079  0F2D  2F3B               	goto	l172
  4080  0F2E                     l2050:	
  4081  0F2E  3002               	movlw	2
  4082  0F2F  0676               	xorwf	lcd8_setCursor@fila,w
  4083  0F30  1D03               	btfss	3,2
  4084  0F31  2F33               	goto	u991
  4085  0F32  2F34               	goto	u990
  4086  0F33                     u991:	
  4087  0F33  2F3B               	goto	l172
  4088  0F34                     u990:	
  4089  0F34                     l2052:	
  4090                           
  4091                           ;LCD.c: 67:         lcd8_cmd(0xC0 + columna);
  4092  0F34  0875               	movf	lcd8_setCursor@columna,w
  4093  0F35  3EC0               	addlw	192
  4094  0F36  120A  158A  26E5  120A  158A  	fcall	_lcd8_cmd
  4095  0F3B                     l172:	
  4096  0F3B  0008               	return
  4097  0F3C                     __end_of_lcd8_setCursor:	
  4098                           
  4099                           	psect	text16
  4100  067B                     __ptext16:	
  4101 ;; *************** function _lcd8_init *****************
  4102 ;; Defined at:
  4103 ;;		line 18 in file "LCD.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         0       0       0       0       0
  4118 ;;      Locals:         0       0       0       0       0
  4119 ;;      Temps:          2       0       0       0       0
  4120 ;;      Totals:         2       0       0       0       0
  4121 ;;Total ram usage:        2 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    3
  4124 ;; This function calls:
  4125 ;;		_lcd8_cmd
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _lcd8_init
  4133  067B                     _lcd8_init:	
  4134  067B                     l1926:	
  4135                           ;incstack = 0
  4136                           ; Regs used in _lcd8_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4137                           
  4138                           
  4139                           ;LCD.c: 19:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4140  067B  301A               	movlw	26
  4141  067C  00F6               	movwf	??_lcd8_init+1
  4142  067D  30F8               	movlw	248
  4143  067E  00F5               	movwf	??_lcd8_init
  4144  067F                     u1467:	
  4145  067F  0BF5               	decfsz	??_lcd8_init,f
  4146  0680  2E7F               	goto	u1467
  4147  0681  0BF6               	decfsz	??_lcd8_init+1,f
  4148  0682  2E7F               	goto	u1467
  4149  0683  0000               	nop
  4150  0684                     l1928:	
  4151                           
  4152                           ;LCD.c: 20:     lcd8_cmd(0x30);
  4153  0684  3030               	movlw	48
  4154  0685  120A  158A  26E5  120A  118A  	fcall	_lcd8_cmd
  4155  068A                     l1930:	
  4156                           
  4157                           ;LCD.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4158  068A  3007               	movlw	7
  4159  068B  00F6               	movwf	??_lcd8_init+1
  4160  068C  307D               	movlw	125
  4161  068D  00F5               	movwf	??_lcd8_init
  4162  068E                     u1477:	
  4163  068E  0BF5               	decfsz	??_lcd8_init,f
  4164  068F  2E8E               	goto	u1477
  4165  0690  0BF6               	decfsz	??_lcd8_init+1,f
  4166  0691  2E8E               	goto	u1477
  4167                           
  4168                           ;LCD.c: 22:     lcd8_cmd(0x30);
  4169  0692  3030               	movlw	48
  4170  0693  120A  158A  26E5  120A  118A  	fcall	_lcd8_cmd
  4171  0698                     l1932:	
  4172                           
  4173                           ;LCD.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4174  0698  30C7               	movlw	199
  4175  0699  00F5               	movwf	??_lcd8_init
  4176  069A                     u1487:	
  4177  069A  2E9B               	nop2
  4178  069B  0BF5               	decfsz	??_lcd8_init,f
  4179  069C  2E9A               	goto	u1487
  4180  069D  2E9E               	nop2
  4181  069E  2E9F               	nop2
  4182  069F                     l1934:	
  4183                           
  4184                           ;LCD.c: 24:     lcd8_cmd(0x30);
  4185  069F  3030               	movlw	48
  4186  06A0  120A  158A  26E5  120A  118A  	fcall	_lcd8_cmd
  4187                           
  4188                           ;LCD.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4189  06A5  30C7               	movlw	199
  4190  06A6  00F5               	movwf	??_lcd8_init
  4191  06A7                     u1497:	
  4192  06A7  2EA8               	nop2
  4193  06A8  0BF5               	decfsz	??_lcd8_init,f
  4194  06A9  2EA7               	goto	u1497
  4195  06AA  2EAB               	nop2
  4196  06AB  2EAC               	nop2
  4197  06AC                     l1936:	
  4198                           
  4199                           ;LCD.c: 26:     lcd8_cmd(0x38);
  4200  06AC  3038               	movlw	56
  4201  06AD  120A  158A  26E5  120A  118A  	fcall	_lcd8_cmd
  4202  06B2                     l1938:	
  4203                           
  4204                           ;LCD.c: 27:     lcd8_cmd(0x10);
  4205  06B2  3010               	movlw	16
  4206  06B3  120A  158A  26E5  120A  118A  	fcall	_lcd8_cmd
  4207  06B8                     l1940:	
  4208                           
  4209                           ;LCD.c: 28:     lcd8_cmd(0x01);
  4210  06B8  3001               	movlw	1
  4211  06B9  120A  158A  26E5  120A  118A  	fcall	_lcd8_cmd
  4212  06BE                     l1942:	
  4213                           
  4214                           ;LCD.c: 29:     lcd8_cmd(0x06);
  4215  06BE  3006               	movlw	6
  4216  06BF  120A  158A  26E5  120A  118A  	fcall	_lcd8_cmd
  4217  06C4                     l1944:	
  4218                           
  4219                           ;LCD.c: 30:     lcd8_cmd(0x0C);
  4220  06C4  300C               	movlw	12
  4221  06C5  120A  158A  26E5  120A  118A  	fcall	_lcd8_cmd
  4222  06CA                     l1946:	
  4223                           
  4224                           ;LCD.c: 31:     lcd8_cmd(0x80);
  4225  06CA  3080               	movlw	128
  4226  06CB  120A  158A  26E5  120A  118A  	fcall	_lcd8_cmd
  4227  06D0                     l151:	
  4228  06D0  0008               	return
  4229  06D1                     __end_of_lcd8_init:	
  4230                           
  4231                           	psect	text17
  4232  0EE5                     __ptext17:	
  4233 ;; *************** function _lcd8_cmd *****************
  4234 ;; Defined at:
  4235 ;;		line 34 in file "LCD.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  cmd             1    wreg     unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  cmd             1    4[COMMON] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4249 ;;      Params:         0       0       0       0       0
  4250 ;;      Locals:         1       0       0       0       0
  4251 ;;      Temps:          0       0       0       0       0
  4252 ;;      Totals:         1       0       0       0       0
  4253 ;;Total ram usage:        1 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    2
  4256 ;; This function calls:
  4257 ;;		_delay_1ms
  4258 ;; This function is called by:
  4259 ;;		_lcd8_init
  4260 ;;		_lcd8_setCursor
  4261 ;;		_lcd8_clearDisplay
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           
  4266                           ;psect for function _lcd8_cmd
  4267  0EE5                     _lcd8_cmd:	
  4268                           
  4269                           ;incstack = 0
  4270                           ; Regs used in _lcd8_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4271                           ;lcd8_cmd@cmd stored from wreg
  4272  0EE5  00F4               	movwf	lcd8_cmd@cmd
  4273  0EE6                     l1672:	
  4274                           
  4275                           ;LCD.c: 35:     PORTA = cmd;
  4276  0EE6  0874               	movf	lcd8_cmd@cmd,w
  4277  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  4278  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  4279  0EE9  0085               	movwf	5	;volatile
  4280  0EEA                     l1674:	
  4281                           
  4282                           ;LCD.c: 36:     PORTEbits.RE0 = 0;
  4283  0EEA  1009               	bcf	9,0	;volatile
  4284  0EEB                     l1676:	
  4285                           
  4286                           ;LCD.c: 37:     PORTEbits.RE1 = 0;
  4287  0EEB  1089               	bcf	9,1	;volatile
  4288  0EEC                     l1678:	
  4289                           
  4290                           ;LCD.c: 38:     PORTEbits.RE2 = 1;
  4291  0EEC  1509               	bsf	9,2	;volatile
  4292  0EED                     l1680:	
  4293                           
  4294                           ;LCD.c: 39:     delay_1ms();
  4295  0EED  120A  158A  270A  120A  158A  	fcall	_delay_1ms
  4296  0EF2                     l1682:	
  4297                           
  4298                           ;LCD.c: 40:     PORTEbits.RE2 = 0;
  4299  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  4300  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  4301  0EF4  1109               	bcf	9,2	;volatile
  4302  0EF5                     l154:	
  4303  0EF5  0008               	return
  4304  0EF6                     __end_of_lcd8_cmd:	
  4305                           
  4306                           	psect	text18
  4307  0FA7                     __ptext18:	
  4308 ;; *************** function _lcd8_dispString *****************
  4309 ;; Defined at:
  4310 ;;		line 52 in file "LCD.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  value           2    6[COMMON] PTR unsigned char 
  4313 ;;		 -> STR_9(4), main@A(10), STR_7(4), main@G(10), 
  4314 ;;		 -> STR_5(3), main@F(5), STR_3(3), STR_2(3), 
  4315 ;;		 -> main@D(5), 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4327 ;;      Params:         2       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0
  4329 ;;      Temps:          2       0       0       0       0
  4330 ;;      Totals:         4       0       0       0       0
  4331 ;;Total ram usage:        4 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    3
  4334 ;; This function calls:
  4335 ;;		_lcd8_write
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function _lcd8_dispString
  4343  0FA7                     _lcd8_dispString:	
  4344  0FA7                     l2054:	
  4345                           ;incstack = 0
  4346                           ; Regs used in _lcd8_dispString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4347                           
  4348                           
  4349                           ;LCD.c: 53:     while(*value){
  4350  0FA7  2FC2               	goto	l2060
  4351  0FA8                     l2056:	
  4352                           
  4353                           ;LCD.c: 54:         lcd8_write(*value++);
  4354  0FA8  0877               	movf	lcd8_dispString@value+1,w
  4355  0FA9  00FF               	movwf	btemp+1
  4356  0FAA  0876               	movf	lcd8_dispString@value,w
  4357  0FAB  0084               	movwf	4
  4358  0FAC  120A  118A  27BF  120A  158A  	fcall	stringtab
  4359  0FB1  00F8               	movwf	??_lcd8_dispString
  4360  0FB2  01F9               	clrf	??_lcd8_dispString+1
  4361  0FB3  0878               	movf	??_lcd8_dispString,w
  4362  0FB4  00F4               	movwf	lcd8_write@dat
  4363  0FB5  0879               	movf	??_lcd8_dispString+1,w
  4364  0FB6  00F5               	movwf	lcd8_write@dat+1
  4365  0FB7  120A  158A  26C5  120A  158A  	fcall	_lcd8_write
  4366  0FBC                     l2058:	
  4367  0FBC  3001               	movlw	1
  4368  0FBD  07F6               	addwf	lcd8_dispString@value,f
  4369  0FBE  1803               	skipnc
  4370  0FBF  0AF7               	incf	lcd8_dispString@value+1,f
  4371  0FC0  3000               	movlw	0
  4372  0FC1  07F7               	addwf	lcd8_dispString@value+1,f
  4373  0FC2                     l2060:	
  4374                           
  4375                           ;LCD.c: 53:     while(*value){
  4376  0FC2  0877               	movf	lcd8_dispString@value+1,w
  4377  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  4378  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  4379  0FC5  00FF               	movwf	btemp+1
  4380  0FC6  0876               	movf	lcd8_dispString@value,w
  4381  0FC7  0084               	movwf	4
  4382  0FC8  120A  118A  27BF  120A  158A  	fcall	stringtab
  4383  0FCD  3A00               	xorlw	0
  4384  0FCE  1D03               	skipz
  4385  0FCF  2FD1               	goto	u1001
  4386  0FD0  2FD2               	goto	u1000
  4387  0FD1                     u1001:	
  4388  0FD1  2FA8               	goto	l2056
  4389  0FD2                     u1000:	
  4390  0FD2                     l163:	
  4391  0FD2  0008               	return
  4392  0FD3                     __end_of_lcd8_dispString:	
  4393                           
  4394                           	psect	text19
  4395  0EC5                     __ptext19:	
  4396 ;; *************** function _lcd8_write *****************
  4397 ;; Defined at:
  4398 ;;		line 43 in file "LCD.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  dat             2    4[COMMON] unsigned int 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4412 ;;      Params:         2       0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0
  4415 ;;      Totals:         2       0       0       0       0
  4416 ;;Total ram usage:        2 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    2
  4419 ;; This function calls:
  4420 ;;		_delay_1ms
  4421 ;; This function is called by:
  4422 ;;		_lcd8_dispString
  4423 ;;		_lcd8_dispChar
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _lcd8_write
  4429  0EC5                     _lcd8_write:	
  4430  0EC5                     l1684:	
  4431                           ;incstack = 0
  4432                           ; Regs used in _lcd8_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4433                           
  4434                           
  4435                           ;LCD.c: 44:     PORTA = dat;
  4436  0EC5  0874               	movf	lcd8_write@dat,w
  4437  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0EC8  0085               	movwf	5	;volatile
  4440  0EC9                     l1686:	
  4441                           
  4442                           ;LCD.c: 45:     PORTEbits.RE0 = 1;
  4443  0EC9  1409               	bsf	9,0	;volatile
  4444  0ECA                     l1688:	
  4445                           
  4446                           ;LCD.c: 46:     PORTEbits.RE1 = 0;
  4447  0ECA  1089               	bcf	9,1	;volatile
  4448  0ECB                     l1690:	
  4449                           
  4450                           ;LCD.c: 47:     PORTEbits.RE2 = 1;
  4451  0ECB  1509               	bsf	9,2	;volatile
  4452  0ECC                     l1692:	
  4453                           
  4454                           ;LCD.c: 48:     delay_1ms();
  4455  0ECC  120A  158A  270A  120A  158A  	fcall	_delay_1ms
  4456  0ED1                     l1694:	
  4457                           
  4458                           ;LCD.c: 49:     PORTEbits.RE2 = 0;
  4459  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0ED3  1109               	bcf	9,2	;volatile
  4462  0ED4                     l157:	
  4463  0ED4  0008               	return
  4464  0ED5                     __end_of_lcd8_write:	
  4465                           
  4466                           	psect	text20
  4467  0F0A                     __ptext20:	
  4468 ;; *************** function _delay_1ms *****************
  4469 ;; Defined at:
  4470 ;;		line 75 in file "LCD.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  i               2    2[COMMON] int 
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, btemp+1
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4484 ;;      Params:         0       0       0       0       0
  4485 ;;      Locals:         2       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0
  4487 ;;      Totals:         2       0       0       0       0
  4488 ;;Total ram usage:        2 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_main
  4495 ;;		_lcd8_cmd
  4496 ;;		_lcd8_write
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _delay_1ms
  4502  0F0A                     _delay_1ms:	
  4503  0F0A                     l1654:	
  4504                           ;incstack = 0
  4505                           ; Regs used in _delay_1ms: [wreg+status,2+btemp+1]
  4506                           
  4507                           
  4508                           ;LCD.c: 76:     for (int i = 0; i < 50; i++);
  4509  0F0A  01F2               	clrf	delay_1ms@i
  4510  0F0B  01F3               	clrf	delay_1ms@i+1
  4511  0F0C                     l1660:	
  4512  0F0C  3001               	movlw	1
  4513  0F0D  07F2               	addwf	delay_1ms@i,f
  4514  0F0E  1803               	skipnc
  4515  0F0F  0AF3               	incf	delay_1ms@i+1,f
  4516  0F10  3000               	movlw	0
  4517  0F11  07F3               	addwf	delay_1ms@i+1,f
  4518  0F12                     l1662:	
  4519  0F12  0873               	movf	delay_1ms@i+1,w
  4520  0F13  3A80               	xorlw	128
  4521  0F14  00FF               	movwf	btemp+1
  4522  0F15  3080               	movlw	128
  4523  0F16  027F               	subwf	btemp+1,w
  4524  0F17  1D03               	skipz
  4525  0F18  2F1B               	goto	u585
  4526  0F19  3032               	movlw	50
  4527  0F1A  0272               	subwf	delay_1ms@i,w
  4528  0F1B                     u585:	
  4529  0F1B  1C03               	skipc
  4530  0F1C  2F1E               	goto	u581
  4531  0F1D  2F1F               	goto	u580
  4532  0F1E                     u581:	
  4533  0F1E  2F0C               	goto	l1660
  4534  0F1F                     u580:	
  4535  0F1F                     l180:	
  4536  0F1F  0008               	return
  4537  0F20                     __end_of_delay_1ms:	
  4538                           
  4539                           	psect	text21
  4540  0751                     __ptext21:	
  4541 ;; *************** function _i2c_master_init *****************
  4542 ;; Defined at:
  4543 ;;		line 12 in file "I2C.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  c               4    5[BANK0 ] unsigned long 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, pclath, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4557 ;;      Params:         0       4       0       0       0
  4558 ;;      Locals:         0       0       0       0       0
  4559 ;;      Temps:          0       4       0       0       0
  4560 ;;      Totals:         0       8       0       0       0
  4561 ;;Total ram usage:        8 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    2
  4564 ;; This function calls:
  4565 ;;		___lldiv
  4566 ;; This function is called by:
  4567 ;;		_main
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           
  4572                           ;psect for function _i2c_master_init
  4573  0751                     _i2c_master_init:	
  4574  0751                     l1864:	
  4575                           ;incstack = 0
  4576                           ; Regs used in _i2c_master_init: [wreg+status,2+status,0+pclath+cstack]
  4577                           
  4578                           
  4579                           ;I2C.c: 13:     SSPCON = 0b00101000;
  4580  0751  3028               	movlw	40
  4581  0752  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0753  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0754  0094               	movwf	20	;volatile
  4584  0755                     l1866:	
  4585                           
  4586                           ;I2C.c: 14:     SSPCON2 = 0;
  4587  0755  1683               	bsf	3,5	;RP0=1, select bank1
  4588  0756  1303               	bcf	3,6	;RP1=0, select bank1
  4589  0757  0191               	clrf	17	;volatile
  4590  0758                     l1868:	
  4591                           
  4592                           ;I2C.c: 15:     SSPADD = (4000000/(4*c))-1;
  4593  0758  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0759  1303               	bcf	3,6	;RP1=0, select bank0
  4595  075A  0825               	movf	i2c_master_init@c,w
  4596  075B  00A9               	movwf	??_i2c_master_init
  4597  075C  0826               	movf	i2c_master_init@c+1,w
  4598  075D  00AA               	movwf	??_i2c_master_init+1
  4599  075E  0827               	movf	i2c_master_init@c+2,w
  4600  075F  00AB               	movwf	??_i2c_master_init+2
  4601  0760  0828               	movf	i2c_master_init@c+3,w
  4602  0761  00AC               	movwf	??_i2c_master_init+3
  4603  0762  3002               	movlw	2
  4604  0763                     u855:	
  4605  0763  1003               	clrc
  4606  0764  0DA9               	rlf	??_i2c_master_init,f
  4607  0765  0DAA               	rlf	??_i2c_master_init+1,f
  4608  0766  0DAB               	rlf	??_i2c_master_init+2,f
  4609  0767  0DAC               	rlf	??_i2c_master_init+3,f
  4610  0768                     u850:	
  4611  0768  3EFF               	addlw	-1
  4612  0769  1D03               	skipz
  4613  076A  2F63               	goto	u855
  4614  076B  082C               	movf	??_i2c_master_init+3,w
  4615  076C  00F5               	movwf	___lldiv@divisor+3
  4616  076D  082B               	movf	??_i2c_master_init+2,w
  4617  076E  00F4               	movwf	___lldiv@divisor+2
  4618  076F  082A               	movf	??_i2c_master_init+1,w
  4619  0770  00F3               	movwf	___lldiv@divisor+1
  4620  0771  0829               	movf	??_i2c_master_init,w
  4621  0772  00F2               	movwf	___lldiv@divisor
  4622  0773  3000               	movlw	0
  4623  0774  00F9               	movwf	___lldiv@dividend+3
  4624  0775  303D               	movlw	61
  4625  0776  00F8               	movwf	___lldiv@dividend+2
  4626  0777  3009               	movlw	9
  4627  0778  00F7               	movwf	___lldiv@dividend+1
  4628  0779  3000               	movlw	0
  4629  077A  00F6               	movwf	___lldiv@dividend
  4630  077B  120A  118A  2613  120A  118A  	fcall	___lldiv
  4631  0780  0872               	movf	?___lldiv,w
  4632  0781  3EFF               	addlw	255
  4633  0782  1683               	bsf	3,5	;RP0=1, select bank1
  4634  0783  1303               	bcf	3,6	;RP1=0, select bank1
  4635  0784  0093               	movwf	19	;volatile
  4636  0785                     l1870:	
  4637                           
  4638                           ;I2C.c: 16:     SSPSTAT = 0;
  4639  0785  0194               	clrf	20	;volatile
  4640  0786                     l1872:	
  4641                           
  4642                           ;I2C.c: 17:     TRISCbits.TRISC3 = 1;
  4643  0786  1587               	bsf	7,3	;volatile
  4644  0787                     l1874:	
  4645                           
  4646                           ;I2C.c: 18:     TRISCbits.TRISC4 = 1;
  4647  0787  1607               	bsf	7,4	;volatile
  4648  0788                     l226:	
  4649  0788  0008               	return
  4650  0789                     __end_of_i2c_master_init:	
  4651                           
  4652                           	psect	text22
  4653  0613                     __ptext22:	
  4654 ;; *************** function ___lldiv *****************
  4655 ;; Defined at:
  4656 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  divisor         4    2[COMMON] unsigned long 
  4659 ;;  dividend        4    6[COMMON] unsigned long 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  quotient        4    0[BANK0 ] unsigned long 
  4662 ;;  counter         1    4[BANK0 ] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  4    2[COMMON] unsigned long 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4672 ;;      Params:         8       0       0       0       0
  4673 ;;      Locals:         0       5       0       0       0
  4674 ;;      Temps:          1       0       0       0       0
  4675 ;;      Totals:         9       5       0       0       0
  4676 ;;Total ram usage:       14 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    1
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_i2c_master_init
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function ___lldiv
  4688  0613                     ___lldiv:	
  4689  0613                     l1722:	
  4690                           ;incstack = 0
  4691                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4692                           
  4693  0613  3000               	movlw	0
  4694  0614  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0615  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0616  00A3               	movwf	___lldiv@quotient+3
  4697  0617  3000               	movlw	0
  4698  0618  00A2               	movwf	___lldiv@quotient+2
  4699  0619  3000               	movlw	0
  4700  061A  00A1               	movwf	___lldiv@quotient+1
  4701  061B  3000               	movlw	0
  4702  061C  00A0               	movwf	___lldiv@quotient
  4703  061D  0875               	movf	___lldiv@divisor+3,w
  4704  061E  0474               	iorwf	___lldiv@divisor+2,w
  4705  061F  0473               	iorwf	___lldiv@divisor+1,w
  4706  0620  0472               	iorwf	___lldiv@divisor,w
  4707  0621  1903               	skipnz
  4708  0622  2E24               	goto	u651
  4709  0623  2E25               	goto	u650
  4710  0624                     u651:	
  4711  0624  2E72               	goto	l1742
  4712  0625                     u650:	
  4713  0625                     l1724:	
  4714  0625  01A4               	clrf	___lldiv@counter
  4715  0626  0AA4               	incf	___lldiv@counter,f
  4716  0627  2E35               	goto	l1728
  4717  0628                     l1726:	
  4718  0628  3001               	movlw	1
  4719  0629  00FA               	movwf	??___lldiv
  4720  062A                     u665:	
  4721  062A  1003               	clrc
  4722  062B  0DF2               	rlf	___lldiv@divisor,f
  4723  062C  0DF3               	rlf	___lldiv@divisor+1,f
  4724  062D  0DF4               	rlf	___lldiv@divisor+2,f
  4725  062E  0DF5               	rlf	___lldiv@divisor+3,f
  4726  062F  0BFA               	decfsz	??___lldiv,f
  4727  0630  2E2A               	goto	u665
  4728  0631  3001               	movlw	1
  4729  0632  00FA               	movwf	??___lldiv
  4730  0633  087A               	movf	??___lldiv,w
  4731  0634  07A4               	addwf	___lldiv@counter,f
  4732  0635                     l1728:	
  4733  0635  1FF5               	btfss	___lldiv@divisor+3,7
  4734  0636  2E38               	goto	u671
  4735  0637  2E39               	goto	u670
  4736  0638                     u671:	
  4737  0638  2E28               	goto	l1726
  4738  0639                     u670:	
  4739  0639                     l1730:	
  4740  0639  3001               	movlw	1
  4741  063A  00FA               	movwf	??___lldiv
  4742  063B                     u685:	
  4743  063B  1003               	clrc
  4744  063C  0DA0               	rlf	___lldiv@quotient,f
  4745  063D  0DA1               	rlf	___lldiv@quotient+1,f
  4746  063E  0DA2               	rlf	___lldiv@quotient+2,f
  4747  063F  0DA3               	rlf	___lldiv@quotient+3,f
  4748  0640  0BFA               	decfsz	??___lldiv,f
  4749  0641  2E3B               	goto	u685
  4750  0642                     l1732:	
  4751  0642  0875               	movf	___lldiv@divisor+3,w
  4752  0643  0279               	subwf	___lldiv@dividend+3,w
  4753  0644  1D03               	skipz
  4754  0645  2E50               	goto	u695
  4755  0646  0874               	movf	___lldiv@divisor+2,w
  4756  0647  0278               	subwf	___lldiv@dividend+2,w
  4757  0648  1D03               	skipz
  4758  0649  2E50               	goto	u695
  4759  064A  0873               	movf	___lldiv@divisor+1,w
  4760  064B  0277               	subwf	___lldiv@dividend+1,w
  4761  064C  1D03               	skipz
  4762  064D  2E50               	goto	u695
  4763  064E  0872               	movf	___lldiv@divisor,w
  4764  064F  0276               	subwf	___lldiv@dividend,w
  4765  0650                     u695:	
  4766  0650  1C03               	skipc
  4767  0651  2E53               	goto	u691
  4768  0652  2E54               	goto	u690
  4769  0653                     u691:	
  4770  0653  2E63               	goto	l1738
  4771  0654                     u690:	
  4772  0654                     l1734:	
  4773  0654  0872               	movf	___lldiv@divisor,w
  4774  0655  02F6               	subwf	___lldiv@dividend,f
  4775  0656  0873               	movf	___lldiv@divisor+1,w
  4776  0657  1C03               	skipc
  4777  0658  0F73               	incfsz	___lldiv@divisor+1,w
  4778  0659  02F7               	subwf	___lldiv@dividend+1,f
  4779  065A  0874               	movf	___lldiv@divisor+2,w
  4780  065B  1C03               	skipc
  4781  065C  0F74               	incfsz	___lldiv@divisor+2,w
  4782  065D  02F8               	subwf	___lldiv@dividend+2,f
  4783  065E  0875               	movf	___lldiv@divisor+3,w
  4784  065F  1C03               	skipc
  4785  0660  0F75               	incfsz	___lldiv@divisor+3,w
  4786  0661  02F9               	subwf	___lldiv@dividend+3,f
  4787  0662                     l1736:	
  4788  0662  1420               	bsf	___lldiv@quotient,0
  4789  0663                     l1738:	
  4790  0663  3001               	movlw	1
  4791  0664                     u705:	
  4792  0664  1003               	clrc
  4793  0665  0CF5               	rrf	___lldiv@divisor+3,f
  4794  0666  0CF4               	rrf	___lldiv@divisor+2,f
  4795  0667  0CF3               	rrf	___lldiv@divisor+1,f
  4796  0668  0CF2               	rrf	___lldiv@divisor,f
  4797  0669  3EFF               	addlw	-1
  4798  066A  1D03               	skipz
  4799  066B  2E64               	goto	u705
  4800  066C                     l1740:	
  4801  066C  3001               	movlw	1
  4802  066D  02A4               	subwf	___lldiv@counter,f
  4803  066E  1D03               	btfss	3,2
  4804  066F  2E71               	goto	u711
  4805  0670  2E72               	goto	u710
  4806  0671                     u711:	
  4807  0671  2E39               	goto	l1730
  4808  0672                     u710:	
  4809  0672                     l1742:	
  4810  0672  0823               	movf	___lldiv@quotient+3,w
  4811  0673  00F5               	movwf	?___lldiv+3
  4812  0674  0822               	movf	___lldiv@quotient+2,w
  4813  0675  00F4               	movwf	?___lldiv+2
  4814  0676  0821               	movf	___lldiv@quotient+1,w
  4815  0677  00F3               	movwf	?___lldiv+1
  4816  0678  0820               	movf	___lldiv@quotient,w
  4817  0679  00F2               	movwf	?___lldiv
  4818  067A                     l469:	
  4819  067A  0008               	return
  4820  067B                     __end_of___lldiv:	
  4821                           
  4822                           	psect	text23
  4823  0789                     __ptext23:	
  4824 ;; *************** function _i2c_masterRead *****************
  4825 ;; Defined at:
  4826 ;;		line 82 in file "I2C.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  a               2    2[COMMON] unsigned short 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  temp            2    6[COMMON] unsigned short 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  2    2[COMMON] unsigned short 
  4833 ;; Registers used:
  4834 ;;		wreg, status,2, status,0, pclath, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4840 ;;      Params:         2       0       0       0       0
  4841 ;;      Locals:         2       0       0       0       0
  4842 ;;      Temps:          2       0       0       0       0
  4843 ;;      Totals:         6       0       0       0       0
  4844 ;;Total ram usage:        6 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:    2
  4847 ;; This function calls:
  4848 ;;		_i2c_masterWait
  4849 ;; This function is called by:
  4850 ;;		_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _i2c_masterRead
  4856  0789                     _i2c_masterRead:	
  4857  0789                     l1948:	
  4858                           ;incstack = 0
  4859                           ; Regs used in _i2c_masterRead: [wreg+status,2+status,0+pclath+cstack]
  4860                           
  4861                           
  4862                           ;I2C.c: 83:     unsigned short temp;;I2C.c: 84:     i2c_masterWait();
  4863  0789  120A  158A  26B8  120A  118A  	fcall	_i2c_masterWait
  4864  078E                     l1950:	
  4865                           
  4866                           ;I2C.c: 85:     SSPCON2bits.RCEN = 1;
  4867  078E  1683               	bsf	3,5	;RP0=1, select bank1
  4868  078F  1303               	bcf	3,6	;RP1=0, select bank1
  4869  0790  1591               	bsf	17,3	;volatile
  4870                           
  4871                           ;I2C.c: 86:     i2c_masterWait();
  4872  0791  120A  158A  26B8  120A  118A  	fcall	_i2c_masterWait
  4873  0796                     l1952:	
  4874                           
  4875                           ;I2C.c: 87:     temp = SSPBUF;
  4876  0796  1283               	bcf	3,5	;RP0=0, select bank0
  4877  0797  1303               	bcf	3,6	;RP1=0, select bank0
  4878  0798  0813               	movf	19,w	;volatile
  4879  0799  00F4               	movwf	??_i2c_masterRead
  4880  079A  01F5               	clrf	??_i2c_masterRead+1
  4881  079B  0874               	movf	??_i2c_masterRead,w
  4882  079C  00F6               	movwf	i2c_masterRead@temp
  4883  079D  0875               	movf	??_i2c_masterRead+1,w
  4884  079E  00F7               	movwf	i2c_masterRead@temp+1
  4885  079F                     l1954:	
  4886                           
  4887                           ;I2C.c: 88:     i2c_masterWait();
  4888  079F  120A  158A  26B8  120A  118A  	fcall	_i2c_masterWait
  4889  07A4                     l1956:	
  4890                           
  4891                           ;I2C.c: 89:     if (a == 0){
  4892  07A4  0872               	movf	i2c_masterRead@a,w
  4893  07A5  0473               	iorwf	i2c_masterRead@a+1,w
  4894  07A6  1D03               	btfss	3,2
  4895  07A7  2FA9               	goto	u861
  4896  07A8  2FAA               	goto	u860
  4897  07A9                     u861:	
  4898  07A9  2FAE               	goto	l1960
  4899  07AA                     u860:	
  4900  07AA                     l1958:	
  4901                           
  4902                           ;I2C.c: 90:         SSPCON2bits.ACKDT = 1;
  4903  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  4904  07AB  1303               	bcf	3,6	;RP1=0, select bank1
  4905  07AC  1691               	bsf	17,5	;volatile
  4906                           
  4907                           ;I2C.c: 91:     }
  4908  07AD  2FB7               	goto	l251
  4909  07AE                     l1960:	
  4910  07AE  0372               	decf	i2c_masterRead@a,w
  4911  07AF  0473               	iorwf	i2c_masterRead@a+1,w
  4912  07B0  1D03               	btfss	3,2
  4913  07B1  2FB3               	goto	u871
  4914  07B2  2FB4               	goto	u870
  4915  07B3                     u871:	
  4916  07B3  2FB7               	goto	l251
  4917  07B4                     u870:	
  4918  07B4                     l1962:	
  4919                           
  4920                           ;I2C.c: 93:         SSPCON2bits.ACKDT = 0;
  4921  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  4922  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  4923  07B6  1291               	bcf	17,5	;volatile
  4924  07B7                     l251:	
  4925                           
  4926                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
  4927  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  4928  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  4929  07B9  1611               	bsf	17,4	;volatile
  4930  07BA                     l1964:	
  4931                           
  4932                           ;I2C.c: 96:     return temp;
  4933  07BA  0877               	movf	i2c_masterRead@temp+1,w
  4934  07BB  00F3               	movwf	?_i2c_masterRead+1
  4935  07BC  0876               	movf	i2c_masterRead@temp,w
  4936  07BD  00F2               	movwf	?_i2c_masterRead
  4937  07BE                     l253:	
  4938  07BE  0008               	return
  4939  07BF                     __end_of_i2c_masterRead:	
  4940                           
  4941                           	psect	text24
  4942  0EB8                     __ptext24:	
  4943 ;; *************** function _i2c_masterWait *****************
  4944 ;; Defined at:
  4945 ;;		line 21 in file "I2C.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4959 ;;      Params:         0       0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0
  4962 ;;      Totals:         0       0       0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    1
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_i2c_addr_start
  4970 ;;		_i2c_masterStop
  4971 ;;		_i2c_masterWrite
  4972 ;;		_i2c_masterRead
  4973 ;;		_i2c_masterStart
  4974 ;;		_i2c_master_RStart
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           
  4979                           ;psect for function _i2c_masterWait
  4980  0EB8                     _i2c_masterWait:	
  4981  0EB8                     l1646:	
  4982                           ;incstack = 0
  4983                           ; Regs used in _i2c_masterWait: [wreg+status,2]
  4984                           
  4985  0EB8                     l229:	
  4986                           ;I2C.c: 22:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4987                           
  4988  0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  4989  0EB9  1303               	bcf	3,6	;RP1=0, select bank1
  4990  0EBA  1914               	btfsc	20,2	;volatile
  4991  0EBB  2EBD               	goto	u561
  4992  0EBC  2EBE               	goto	u560
  4993  0EBD                     u561:	
  4994  0EBD  2EB8               	goto	l229
  4995  0EBE                     u560:	
  4996  0EBE                     l1648:	
  4997  0EBE  0811               	movf	17,w	;volatile
  4998  0EBF  391F               	andlw	31
  4999  0EC0  1D03               	btfss	3,2
  5000  0EC1  2EC3               	goto	u571
  5001  0EC2  2EC4               	goto	u570
  5002  0EC3                     u571:	
  5003  0EC3  2EB8               	goto	l229
  5004  0EC4                     u570:	
  5005  0EC4                     l232:	
  5006  0EC4  0008               	return
  5007  0EC5                     __end_of_i2c_masterWait:	
  5008                           
  5009                           	psect	text25
  5010  0471                     __ptext25:	
  5011 ;; *************** function _analogInSel *****************
  5012 ;; Defined at:
  5013 ;;		line 32 in file "ADC.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  analogIn        1    wreg     unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  analogIn        1    4[COMMON] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      unsigned char 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5027 ;;      Params:         0       0       0       0       0
  5028 ;;      Locals:         1       0       0       0       0
  5029 ;;      Temps:          2       0       0       0       0
  5030 ;;      Totals:         3       0       0       0       0
  5031 ;;Total ram usage:        3 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    1
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_main
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           
  5042                           ;psect for function _analogInSel
  5043  0471                     _analogInSel:	
  5044                           
  5045                           ;incstack = 0
  5046                           ; Regs used in _analogInSel: [wreg-fsr0h+status,2+status,0]
  5047                           ;analogInSel@analogIn stored from wreg
  5048  0471  00F4               	movwf	analogInSel@analogIn
  5049  0472                     l1844:	
  5050                           
  5051                           ;ADC.c: 33:     switch(analogIn){
  5052  0472  2CD5               	goto	l1848
  5053  0473                     l289:	
  5054                           ;ADC.c: 34:         case 0:
  5055                           
  5056                           
  5057                           ;ADC.c: 35:             ADCON0bits.CHS3 = 0;
  5058  0473  1283               	bcf	3,5	;RP0=0, select bank0
  5059  0474  1303               	bcf	3,6	;RP1=0, select bank0
  5060  0475  129F               	bcf	31,5	;volatile
  5061                           
  5062                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  5063  0476  121F               	bcf	31,4	;volatile
  5064                           
  5065                           ;ADC.c: 37:             ADCON0bits.CHS1 = 0;
  5066  0477  119F               	bcf	31,3	;volatile
  5067                           
  5068                           ;ADC.c: 38:             ADCON0bits.CHS0 = 0;
  5069  0478  111F               	bcf	31,2	;volatile
  5070                           
  5071                           ;ADC.c: 39:             break;
  5072  0479  2D09               	goto	l304
  5073  047A                     l291:	
  5074                           ;ADC.c: 40:         case 1:
  5075                           
  5076                           
  5077                           ;ADC.c: 41:             ADCON0bits.CHS3 = 0;
  5078  047A  1283               	bcf	3,5	;RP0=0, select bank0
  5079  047B  1303               	bcf	3,6	;RP1=0, select bank0
  5080  047C  129F               	bcf	31,5	;volatile
  5081                           
  5082                           ;ADC.c: 42:             ADCON0bits.CHS2 = 0;
  5083  047D  121F               	bcf	31,4	;volatile
  5084                           
  5085                           ;ADC.c: 43:             ADCON0bits.CHS1 = 0;
  5086  047E  119F               	bcf	31,3	;volatile
  5087                           
  5088                           ;ADC.c: 44:             ADCON0bits.CHS0 = 1;
  5089  047F  151F               	bsf	31,2	;volatile
  5090                           
  5091                           ;ADC.c: 45:             break;
  5092  0480  2D09               	goto	l304
  5093  0481                     l292:	
  5094                           ;ADC.c: 46:         case 2:
  5095                           
  5096                           
  5097                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  5098  0481  1283               	bcf	3,5	;RP0=0, select bank0
  5099  0482  1303               	bcf	3,6	;RP1=0, select bank0
  5100  0483  129F               	bcf	31,5	;volatile
  5101                           
  5102                           ;ADC.c: 48:             ADCON0bits.CHS2 = 0;
  5103  0484  121F               	bcf	31,4	;volatile
  5104                           
  5105                           ;ADC.c: 49:             ADCON0bits.CHS1 = 1;
  5106  0485  159F               	bsf	31,3	;volatile
  5107                           
  5108                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
  5109  0486  111F               	bcf	31,2	;volatile
  5110                           
  5111                           ;ADC.c: 51:             break;
  5112  0487  2D09               	goto	l304
  5113  0488                     l293:	
  5114                           ;ADC.c: 52:         case 3:
  5115                           
  5116                           
  5117                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
  5118  0488  1283               	bcf	3,5	;RP0=0, select bank0
  5119  0489  1303               	bcf	3,6	;RP1=0, select bank0
  5120  048A  129F               	bcf	31,5	;volatile
  5121                           
  5122                           ;ADC.c: 54:             ADCON0bits.CHS2 = 0;
  5123  048B  121F               	bcf	31,4	;volatile
  5124                           
  5125                           ;ADC.c: 55:             ADCON0bits.CHS1 = 1;
  5126  048C  159F               	bsf	31,3	;volatile
  5127                           
  5128                           ;ADC.c: 56:             ADCON0bits.CHS0 = 1;
  5129  048D  151F               	bsf	31,2	;volatile
  5130                           
  5131                           ;ADC.c: 57:             break;
  5132  048E  2D09               	goto	l304
  5133  048F                     l294:	
  5134                           ;ADC.c: 58:         case 4:
  5135                           
  5136                           
  5137                           ;ADC.c: 59:             ADCON0bits.CHS3 = 0;
  5138  048F  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0490  1303               	bcf	3,6	;RP1=0, select bank0
  5140  0491  129F               	bcf	31,5	;volatile
  5141                           
  5142                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  5143  0492  161F               	bsf	31,4	;volatile
  5144                           
  5145                           ;ADC.c: 61:             ADCON0bits.CHS1 = 0;
  5146  0493  119F               	bcf	31,3	;volatile
  5147                           
  5148                           ;ADC.c: 62:             ADCON0bits.CHS0 = 0;
  5149  0494  111F               	bcf	31,2	;volatile
  5150                           
  5151                           ;ADC.c: 63:             break;
  5152  0495  2D09               	goto	l304
  5153  0496                     l295:	
  5154                           ;ADC.c: 64:         case 5:
  5155                           
  5156                           
  5157                           ;ADC.c: 65:             ADCON0bits.CHS3 = 0;
  5158  0496  1283               	bcf	3,5	;RP0=0, select bank0
  5159  0497  1303               	bcf	3,6	;RP1=0, select bank0
  5160  0498  129F               	bcf	31,5	;volatile
  5161                           
  5162                           ;ADC.c: 66:             ADCON0bits.CHS2 = 1;
  5163  0499  161F               	bsf	31,4	;volatile
  5164                           
  5165                           ;ADC.c: 67:             ADCON0bits.CHS1 = 0;
  5166  049A  119F               	bcf	31,3	;volatile
  5167                           
  5168                           ;ADC.c: 68:             ADCON0bits.CHS0 = 1;
  5169  049B  151F               	bsf	31,2	;volatile
  5170                           
  5171                           ;ADC.c: 69:             break;
  5172  049C  2D09               	goto	l304
  5173  049D                     l296:	
  5174                           ;ADC.c: 70:         case 6:
  5175                           
  5176                           
  5177                           ;ADC.c: 71:             ADCON0bits.CHS3 = 0;
  5178  049D  1283               	bcf	3,5	;RP0=0, select bank0
  5179  049E  1303               	bcf	3,6	;RP1=0, select bank0
  5180  049F  129F               	bcf	31,5	;volatile
  5181                           
  5182                           ;ADC.c: 72:             ADCON0bits.CHS2 = 1;
  5183  04A0  161F               	bsf	31,4	;volatile
  5184                           
  5185                           ;ADC.c: 73:             ADCON0bits.CHS1 = 1;
  5186  04A1  159F               	bsf	31,3	;volatile
  5187                           
  5188                           ;ADC.c: 74:             ADCON0bits.CHS0 = 0;
  5189  04A2  111F               	bcf	31,2	;volatile
  5190                           
  5191                           ;ADC.c: 75:             break;
  5192  04A3  2D09               	goto	l304
  5193  04A4                     l297:	
  5194                           ;ADC.c: 76:         case 7:
  5195                           
  5196                           
  5197                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;
  5198  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  5199  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  5200  04A6  129F               	bcf	31,5	;volatile
  5201                           
  5202                           ;ADC.c: 78:             ADCON0bits.CHS2 = 1;
  5203  04A7  161F               	bsf	31,4	;volatile
  5204                           
  5205                           ;ADC.c: 79:             ADCON0bits.CHS1 = 1;
  5206  04A8  159F               	bsf	31,3	;volatile
  5207                           
  5208                           ;ADC.c: 80:             ADCON0bits.CHS0 = 1;
  5209  04A9  151F               	bsf	31,2	;volatile
  5210                           
  5211                           ;ADC.c: 81:             break;
  5212  04AA  2D09               	goto	l304
  5213  04AB                     l298:	
  5214                           ;ADC.c: 82:         case 8:
  5215                           
  5216                           
  5217                           ;ADC.c: 83:             ADCON0bits.CHS3 = 1;
  5218  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  5219  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  5220  04AD  169F               	bsf	31,5	;volatile
  5221                           
  5222                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  5223  04AE  121F               	bcf	31,4	;volatile
  5224                           
  5225                           ;ADC.c: 85:             ADCON0bits.CHS1 = 0;
  5226  04AF  119F               	bcf	31,3	;volatile
  5227                           
  5228                           ;ADC.c: 86:             ADCON0bits.CHS0 = 0;
  5229  04B0  111F               	bcf	31,2	;volatile
  5230                           
  5231                           ;ADC.c: 87:             break;
  5232  04B1  2D09               	goto	l304
  5233  04B2                     l299:	
  5234                           ;ADC.c: 88:         case 9:
  5235                           
  5236                           
  5237                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  5238  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  5239  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  5240  04B4  169F               	bsf	31,5	;volatile
  5241                           
  5242                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  5243  04B5  121F               	bcf	31,4	;volatile
  5244                           
  5245                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;
  5246  04B6  119F               	bcf	31,3	;volatile
  5247                           
  5248                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  5249  04B7  151F               	bsf	31,2	;volatile
  5250                           
  5251                           ;ADC.c: 93:             break;
  5252  04B8  2D09               	goto	l304
  5253  04B9                     l300:	
  5254                           ;ADC.c: 94:         case 10:
  5255                           
  5256                           
  5257                           ;ADC.c: 95:             ADCON0bits.CHS3 = 1;
  5258  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  5259  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  5260  04BB  169F               	bsf	31,5	;volatile
  5261                           
  5262                           ;ADC.c: 96:             ADCON0bits.CHS2 = 0;
  5263  04BC  121F               	bcf	31,4	;volatile
  5264                           
  5265                           ;ADC.c: 97:             ADCON0bits.CHS1 = 1;
  5266  04BD  159F               	bsf	31,3	;volatile
  5267                           
  5268                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  5269  04BE  111F               	bcf	31,2	;volatile
  5270                           
  5271                           ;ADC.c: 99:             break;
  5272  04BF  2D09               	goto	l304
  5273  04C0                     l301:	
  5274                           ;ADC.c: 100:         case 11:
  5275                           
  5276                           
  5277                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  5278  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  5279  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  5280  04C2  169F               	bsf	31,5	;volatile
  5281                           
  5282                           ;ADC.c: 102:             ADCON0bits.CHS2 = 0;
  5283  04C3  121F               	bcf	31,4	;volatile
  5284                           
  5285                           ;ADC.c: 103:             ADCON0bits.CHS1 = 1;
  5286  04C4  159F               	bsf	31,3	;volatile
  5287                           
  5288                           ;ADC.c: 104:             ADCON0bits.CHS0 = 1;
  5289  04C5  151F               	bsf	31,2	;volatile
  5290                           
  5291                           ;ADC.c: 105:             break;
  5292  04C6  2D09               	goto	l304
  5293  04C7                     l302:	
  5294                           ;ADC.c: 106:         case 12:
  5295                           
  5296                           
  5297                           ;ADC.c: 107:             ADCON0bits.CHS3 = 1;
  5298  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  5299  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  5300  04C9  169F               	bsf	31,5	;volatile
  5301                           
  5302                           ;ADC.c: 108:             ADCON0bits.CHS2 = 1;
  5303  04CA  161F               	bsf	31,4	;volatile
  5304                           
  5305                           ;ADC.c: 109:             ADCON0bits.CHS1 = 0;
  5306  04CB  119F               	bcf	31,3	;volatile
  5307                           
  5308                           ;ADC.c: 110:             ADCON0bits.CHS0 = 0;
  5309  04CC  111F               	bcf	31,2	;volatile
  5310                           
  5311                           ;ADC.c: 111:             break;
  5312  04CD  2D09               	goto	l304
  5313  04CE                     l303:	
  5314                           ;ADC.c: 112:         case 13:
  5315                           
  5316                           
  5317                           ;ADC.c: 113:             ADCON0bits.CHS3 = 1;
  5318  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  5319  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  5320  04D0  169F               	bsf	31,5	;volatile
  5321                           
  5322                           ;ADC.c: 114:             ADCON0bits.CHS2 = 1;
  5323  04D1  161F               	bsf	31,4	;volatile
  5324                           
  5325                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;
  5326  04D2  119F               	bcf	31,3	;volatile
  5327                           
  5328                           ;ADC.c: 116:             ADCON0bits.CHS0 = 1;
  5329  04D3  151F               	bsf	31,2	;volatile
  5330                           
  5331                           ;ADC.c: 117:             break;
  5332  04D4  2D09               	goto	l304
  5333  04D5                     l1848:	
  5334  04D5  0874               	movf	analogInSel@analogIn,w
  5335  04D6  00F2               	movwf	??_analogInSel
  5336  04D7  01F3               	clrf	??_analogInSel+1
  5337                           
  5338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5339                           ; Switch size 1, requested type "simple"
  5340                           ; Number of cases is 1, Range of values is 0 to 0
  5341                           ; switch strategies available:
  5342                           ; Name         Instructions Cycles
  5343                           ; simple_byte            4     3 (average)
  5344                           ; direct_byte           11     8 (fixed)
  5345                           ; jumptable            260     6 (fixed)
  5346                           ;	Chosen strategy is simple_byte
  5347  04D8  0873               	movf	??_analogInSel+1,w
  5348  04D9  3A00               	xorlw	0	; case 0
  5349  04DA  1903               	skipnz
  5350  04DB  2CDD               	goto	l2700
  5351  04DC  2D09               	goto	l304
  5352  04DD                     l2700:	
  5353                           
  5354                           ; Switch size 1, requested type "simple"
  5355                           ; Number of cases is 14, Range of values is 0 to 13
  5356                           ; switch strategies available:
  5357                           ; Name         Instructions Cycles
  5358                           ; simple_byte           43    22 (average)
  5359                           ; direct_byte           50     8 (fixed)
  5360                           ; jumptable            260     6 (fixed)
  5361                           ;	Chosen strategy is simple_byte
  5362  04DD  0872               	movf	??_analogInSel,w
  5363  04DE  3A00               	xorlw	0	; case 0
  5364  04DF  1903               	skipnz
  5365  04E0  2C73               	goto	l289
  5366  04E1  3A01               	xorlw	1	; case 1
  5367  04E2  1903               	skipnz
  5368  04E3  2C7A               	goto	l291
  5369  04E4  3A03               	xorlw	3	; case 2
  5370  04E5  1903               	skipnz
  5371  04E6  2C81               	goto	l292
  5372  04E7  3A01               	xorlw	1	; case 3
  5373  04E8  1903               	skipnz
  5374  04E9  2C88               	goto	l293
  5375  04EA  3A07               	xorlw	7	; case 4
  5376  04EB  1903               	skipnz
  5377  04EC  2C8F               	goto	l294
  5378  04ED  3A01               	xorlw	1	; case 5
  5379  04EE  1903               	skipnz
  5380  04EF  2C96               	goto	l295
  5381  04F0  3A03               	xorlw	3	; case 6
  5382  04F1  1903               	skipnz
  5383  04F2  2C9D               	goto	l296
  5384  04F3  3A01               	xorlw	1	; case 7
  5385  04F4  1903               	skipnz
  5386  04F5  2CA4               	goto	l297
  5387  04F6  3A0F               	xorlw	15	; case 8
  5388  04F7  1903               	skipnz
  5389  04F8  2CAB               	goto	l298
  5390  04F9  3A01               	xorlw	1	; case 9
  5391  04FA  1903               	skipnz
  5392  04FB  2CB2               	goto	l299
  5393  04FC  3A03               	xorlw	3	; case 10
  5394  04FD  1903               	skipnz
  5395  04FE  2CB9               	goto	l300
  5396  04FF  3A01               	xorlw	1	; case 11
  5397  0500  1903               	skipnz
  5398  0501  2CC0               	goto	l301
  5399  0502  3A07               	xorlw	7	; case 12
  5400  0503  1903               	skipnz
  5401  0504  2CC7               	goto	l302
  5402  0505  3A01               	xorlw	1	; case 13
  5403  0506  1903               	skipnz
  5404  0507  2CCE               	goto	l303
  5405  0508  2D09               	goto	l304
  5406  0509                     l304:	
  5407  0509  0008               	return
  5408  050A                     __end_of_analogInSel:	
  5409                           
  5410                           	psect	text26
  5411  0E8F                     __ptext26:	
  5412 ;; *************** function _adcSetup *****************
  5413 ;; Defined at:
  5414 ;;		line 12 in file "ADC.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		None
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5428 ;;      Params:         0       0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0
  5431 ;;      Totals:         0       0       0       0       0
  5432 ;;Total ram usage:        0 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    1
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_main
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           
  5443                           ;psect for function _adcSetup
  5444  0E8F                     _adcSetup:	
  5445  0E8F                     l1832:	
  5446                           ;incstack = 0
  5447                           ; Regs used in _adcSetup: []
  5448                           
  5449                           
  5450                           ;ADC.c: 13:     ADCON0bits.ADON = 1;
  5451  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0E91  141F               	bsf	31,0	;volatile
  5454                           
  5455                           ;ADC.c: 14:     ADCON1bits.ADFM = 0;
  5456  0E92  1683               	bsf	3,5	;RP0=1, select bank1
  5457  0E93  1303               	bcf	3,6	;RP1=0, select bank1
  5458  0E94  139F               	bcf	31,7	;volatile
  5459                           
  5460                           ;ADC.c: 15:     ADCON1bits.VCFG1 = 0;
  5461  0E95  129F               	bcf	31,5	;volatile
  5462                           
  5463                           ;ADC.c: 16:     ADCON1bits.VCFG0 = 0;
  5464  0E96  121F               	bcf	31,4	;volatile
  5465  0E97                     l278:	
  5466  0E97  0008               	return
  5467  0E98                     __end_of_adcSetup:	
  5468                           
  5469                           	psect	text27
  5470  0F3C                     __ptext27:	
  5471 ;; *************** function _adcInterrupt *****************
  5472 ;; Defined at:
  5473 ;;		line 19 in file "ADC.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  en              1    wreg     unsigned char 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  en              1    4[COMMON] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5487 ;;      Params:         0       0       0       0       0
  5488 ;;      Locals:         1       0       0       0       0
  5489 ;;      Temps:          2       0       0       0       0
  5490 ;;      Totals:         3       0       0       0       0
  5491 ;;Total ram usage:        3 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    1
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_main
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           
  5502                           ;psect for function _adcInterrupt
  5503  0F3C                     _adcInterrupt:	
  5504                           
  5505                           ;incstack = 0
  5506                           ; Regs used in _adcInterrupt: [wreg-fsr0h+status,2+status,0]
  5507                           ;adcInterrupt@en stored from wreg
  5508  0F3C  00F4               	movwf	adcInterrupt@en
  5509  0F3D                     l1854:	
  5510                           
  5511                           ;ADC.c: 20:     switch(en){
  5512  0F3D  2F4C               	goto	l1858
  5513  0F3E                     l282:	
  5514                           ;ADC.c: 21:         case 0:
  5515                           
  5516                           
  5517                           ;ADC.c: 22:             PIE1bits.ADIE = 0;
  5518  0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  5519  0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  5520  0F40  130C               	bcf	12,6	;volatile
  5521                           
  5522                           ;ADC.c: 23:             PIR1bits.ADIF = 0;
  5523  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  5524  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  5525  0F43  130C               	bcf	12,6	;volatile
  5526                           
  5527                           ;ADC.c: 24:             break;
  5528  0F44  2F5C               	goto	l285
  5529  0F45                     l284:	
  5530                           ;ADC.c: 25:         case 1:
  5531                           
  5532                           
  5533                           ;ADC.c: 26:             PIE1bits.ADIE = 1;
  5534  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  5535  0F46  1303               	bcf	3,6	;RP1=0, select bank1
  5536  0F47  170C               	bsf	12,6	;volatile
  5537                           
  5538                           ;ADC.c: 27:             PIR1bits.ADIF = 0;
  5539  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0F4A  130C               	bcf	12,6	;volatile
  5542                           
  5543                           ;ADC.c: 28:             break;
  5544  0F4B  2F5C               	goto	l285
  5545  0F4C                     l1858:	
  5546  0F4C  0874               	movf	adcInterrupt@en,w
  5547  0F4D  00F2               	movwf	??_adcInterrupt
  5548  0F4E  01F3               	clrf	??_adcInterrupt+1
  5549                           
  5550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5551                           ; Switch size 1, requested type "simple"
  5552                           ; Number of cases is 1, Range of values is 0 to 0
  5553                           ; switch strategies available:
  5554                           ; Name         Instructions Cycles
  5555                           ; simple_byte            4     3 (average)
  5556                           ; direct_byte           11     8 (fixed)
  5557                           ; jumptable            260     6 (fixed)
  5558                           ;	Chosen strategy is simple_byte
  5559  0F4F  0873               	movf	??_adcInterrupt+1,w
  5560  0F50  3A00               	xorlw	0	; case 0
  5561  0F51  1903               	skipnz
  5562  0F52  2F54               	goto	l2702
  5563  0F53  2F5C               	goto	l285
  5564  0F54                     l2702:	
  5565                           
  5566                           ; Switch size 1, requested type "simple"
  5567                           ; Number of cases is 2, Range of values is 0 to 1
  5568                           ; switch strategies available:
  5569                           ; Name         Instructions Cycles
  5570                           ; simple_byte            7     4 (average)
  5571                           ; direct_byte           14     8 (fixed)
  5572                           ; jumptable            260     6 (fixed)
  5573                           ;	Chosen strategy is simple_byte
  5574  0F54  0872               	movf	??_adcInterrupt,w
  5575  0F55  3A00               	xorlw	0	; case 0
  5576  0F56  1903               	skipnz
  5577  0F57  2F3E               	goto	l282
  5578  0F58  3A01               	xorlw	1	; case 1
  5579  0F59  1903               	skipnz
  5580  0F5A  2F45               	goto	l284
  5581  0F5B  2F5C               	goto	l285
  5582  0F5C                     l285:	
  5583  0F5C  0008               	return
  5584  0F5D                     __end_of_adcInterrupt:	
  5585                           
  5586                           	psect	text28
  5587  0F5D                     __ptext28:	
  5588 ;; *************** function _adcFoscSel *****************
  5589 ;; Defined at:
  5590 ;;		line 122 in file "ADC.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  fosc            1    wreg     unsigned char 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  fosc            1    4[COMMON] unsigned char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  1    wreg      unsigned char 
  5597 ;; Registers used:
  5598 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5604 ;;      Params:         0       0       0       0       0
  5605 ;;      Locals:         1       0       0       0       0
  5606 ;;      Temps:          2       0       0       0       0
  5607 ;;      Totals:         3       0       0       0       0
  5608 ;;Total ram usage:        3 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    1
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_main
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           
  5619                           ;psect for function _adcFoscSel
  5620  0F5D                     _adcFoscSel:	
  5621                           
  5622                           ;incstack = 0
  5623                           ; Regs used in _adcFoscSel: [wreg-fsr0h+status,2+status,0]
  5624                           ;adcFoscSel@fosc stored from wreg
  5625  0F5D  00F4               	movwf	adcFoscSel@fosc
  5626  0F5E                     l1834:	
  5627                           
  5628                           ;ADC.c: 123:     switch(fosc){
  5629  0F5E  2F6E               	goto	l1838
  5630  0F5F                     l308:	
  5631                           ;ADC.c: 124:         case 0:
  5632                           
  5633                           
  5634                           ;ADC.c: 125:             ADCON0bits.ADCS1 = 0;
  5635  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  5636  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  5637  0F61  139F               	bcf	31,7	;volatile
  5638                           
  5639                           ;ADC.c: 126:             ADCON0bits.ADCS0 = 0;
  5640  0F62  131F               	bcf	31,6	;volatile
  5641                           
  5642                           ;ADC.c: 127:             break;
  5643  0F63  2F81               	goto	l312
  5644  0F64                     l310:	
  5645                           ;ADC.c: 128:         case 1:
  5646                           
  5647                           
  5648                           ;ADC.c: 129:             ADCON0bits.ADCS1 = 0;
  5649  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  5650  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  5651  0F66  139F               	bcf	31,7	;volatile
  5652                           
  5653                           ;ADC.c: 130:             ADCON0bits.ADCS0 = 1;
  5654  0F67  171F               	bsf	31,6	;volatile
  5655                           
  5656                           ;ADC.c: 131:             break;
  5657  0F68  2F81               	goto	l312
  5658  0F69                     l311:	
  5659                           ;ADC.c: 132:         case 3:
  5660                           
  5661                           
  5662                           ;ADC.c: 133:             ADCON0bits.ADCS1 = 1;
  5663  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  5664  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  5665  0F6B  179F               	bsf	31,7	;volatile
  5666                           
  5667                           ;ADC.c: 134:             ADCON0bits.ADCS0 = 0;
  5668  0F6C  131F               	bcf	31,6	;volatile
  5669                           
  5670                           ;ADC.c: 135:             break;
  5671  0F6D  2F81               	goto	l312
  5672  0F6E                     l1838:	
  5673  0F6E  0874               	movf	adcFoscSel@fosc,w
  5674  0F6F  00F2               	movwf	??_adcFoscSel
  5675  0F70  01F3               	clrf	??_adcFoscSel+1
  5676                           
  5677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5678                           ; Switch size 1, requested type "simple"
  5679                           ; Number of cases is 1, Range of values is 0 to 0
  5680                           ; switch strategies available:
  5681                           ; Name         Instructions Cycles
  5682                           ; simple_byte            4     3 (average)
  5683                           ; direct_byte           11     8 (fixed)
  5684                           ; jumptable            260     6 (fixed)
  5685                           ;	Chosen strategy is simple_byte
  5686  0F71  0873               	movf	??_adcFoscSel+1,w
  5687  0F72  3A00               	xorlw	0	; case 0
  5688  0F73  1903               	skipnz
  5689  0F74  2F76               	goto	l2704
  5690  0F75  2F81               	goto	l312
  5691  0F76                     l2704:	
  5692                           
  5693                           ; Switch size 1, requested type "simple"
  5694                           ; Number of cases is 3, Range of values is 0 to 3
  5695                           ; switch strategies available:
  5696                           ; Name         Instructions Cycles
  5697                           ; simple_byte           10     6 (average)
  5698                           ; direct_byte           20     8 (fixed)
  5699                           ; jumptable            260     6 (fixed)
  5700                           ;	Chosen strategy is simple_byte
  5701  0F76  0872               	movf	??_adcFoscSel,w
  5702  0F77  3A00               	xorlw	0	; case 0
  5703  0F78  1903               	skipnz
  5704  0F79  2F5F               	goto	l308
  5705  0F7A  3A01               	xorlw	1	; case 1
  5706  0F7B  1903               	skipnz
  5707  0F7C  2F64               	goto	l310
  5708  0F7D  3A02               	xorlw	2	; case 3
  5709  0F7E  1903               	skipnz
  5710  0F7F  2F69               	goto	l311
  5711  0F80  2F81               	goto	l312
  5712  0F81                     l312:	
  5713  0F81  0008               	return
  5714  0F82                     __end_of_adcFoscSel:	
  5715                           
  5716                           	psect	text29
  5717  0E80                     __ptext29:	
  5718 ;; *************** function _isr *****************
  5719 ;; Defined at:
  5720 ;;		line 53 in file "master.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		None
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5734 ;;      Params:         0       0       0       0       0
  5735 ;;      Locals:         0       0       0       0       0
  5736 ;;      Temps:          2       0       0       0       0
  5737 ;;      Totals:         2       0       0       0       0
  5738 ;;Total ram usage:        2 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		Interrupt level 1
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function _isr
  5749  0E80                     _isr:	
  5750  0E80                     i1l99:	
  5751  0E80  0871               	movf	??_isr+1,w
  5752  0E81  008A               	movwf	10
  5753  0E82  0E70               	swapf	??_isr^(0+4294967168),w
  5754  0E83  0083               	movwf	3
  5755  0E84  0EFE               	swapf	btemp,f
  5756  0E85  0E7E               	swapf	btemp,w
  5757  0E86  0009               	retfie
  5758  0E87                     __end_of_isr:	
  5759  007E                     btemp	set	126	;btemp
  5760  007E                     wtemp0	set	126
  5761                           
  5762                           	psect	intentry
  5763  0004                     __pintentry:	
  5764                           ;incstack = 0
  5765                           ; Regs used in _isr: []
  5766                           
  5767  0004                     interrupt_function:	
  5768  007E                     saved_w	set	btemp
  5769  0004  00FE               	movwf	btemp
  5770  0005  0E03               	swapf	3,w
  5771  0006  00F0               	movwf	??_isr
  5772  0007  080A               	movf	10,w
  5773  0008  00F1               	movwf	??_isr+1
  5774  0009  120A  158A  2E80   	ljmp	_isr


Data Sizes:
    Strings     21
    Constant    10
    Data        1
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     55      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[4]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@A(BANK0[10]), main@G(BANK0[10]), main@F(BANK0[5]), main@D(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd8_dispString@value	PTR unsigned char  size(2) Largest target is 10
		 -> STR_9(CODE[4]), main@A(BANK0[10]), STR_7(CODE[4]), main@G(BANK0[10]), 
		 -> STR_5(CODE[3]), main@F(BANK0[5]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> main@D(BANK0[5]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _mpu6050_init->_i2c_addr_start
    _i2c_addr_start->_i2c_masterWrite
    _lcd8_setCursor->_lcd8_cmd
    _lcd8_init->_lcd8_cmd
    _lcd8_cmd->_delay_1ms
    _lcd8_dispString->_lcd8_write
    _lcd8_write->_delay_1ms
    _i2c_master_init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _i2c_master_init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0    6388
                                             20 BANK0     35    35      0
                            ___lwdiv
                         _adcFoscSel
                       _adcInterrupt
                           _adcSetup
                        _analogInSel
                          _delay_1ms
                     _i2c_addr_start
                     _i2c_masterRead
                     _i2c_masterStop
                    _i2c_masterWrite
                    _i2c_master_init
                    _lcd8_dispString
                          _lcd8_init
                     _lcd8_setCursor
                       _mpu6050_init
                            _oscInit
                              _setup
                            _sprintf
                          _tmr1_Init
                     _tmr1_Interrupt
                     _tmr1_Prescaler
 ---------------------------------------------------------------------------------
 (1) _tmr1_Prescaler                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _tmr1_Interrupt                                       1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _tmr1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2594
                                              5 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             10 COMMON     1     1      0
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscInit                                              3     3      0      28
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _mpu6050_init                                         2     2      0      66
                                              4 COMMON     2     2      0
                     _i2c_addr_start
                     _i2c_masterStop
                    _i2c_masterWrite
 ---------------------------------------------------------------------------------
 (2) _i2c_masterStop                                       0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_addr_start                                       1     1      0      44
                                              3 COMMON     1     1      0
                     _i2c_masterWait
                    _i2c_masterWrite
 ---------------------------------------------------------------------------------
 (2) _i2c_masterWrite                                      1     1      0      22
                                              2 COMMON     1     1      0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (1) _lcd8_setCursor                                       2     1      1     840
                                              5 COMMON     2     1      1
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd8_init                                            2     2      0      68
                                              5 COMMON     2     2      0
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd8_cmd                                             1     1      0      68
                                              4 COMMON     1     1      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _lcd8_dispString                                      4     2      2     949
                                              6 COMMON     4     2      2
                         _lcd8_write
 ---------------------------------------------------------------------------------
 (2) _lcd8_write                                           2     0      2     220
                                              4 COMMON     2     0      2
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (3) _delay_1ms                                            2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _i2c_masterRead                                       6     4      2     295
                                              2 COMMON     6     4      2
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (3) _i2c_masterWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analogInSel                                          3     3      0      28
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInterrupt                                         3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcFoscSel                                           3     3      0      28
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   _adcFoscSel
   _adcInterrupt
   _adcSetup
   _analogInSel
   _delay_1ms
   _i2c_addr_start
     _i2c_masterWait
     _i2c_masterWrite
       _i2c_masterWait
   _i2c_masterRead
     _i2c_masterWait
   _i2c_masterStop
     _i2c_masterWait
   _i2c_masterWrite
     _i2c_masterWait
   _i2c_master_init
     ___lldiv
   _lcd8_dispString
     _lcd8_write
       _delay_1ms
   _lcd8_init
     _lcd8_cmd
       _delay_1ms
   _lcd8_setCursor
     _lcd8_cmd
       _delay_1ms
   _mpu6050_init
     _i2c_addr_start
       _i2c_masterWait
       _i2c_masterWrite
         _i2c_masterWait
     _i2c_masterStop
       _i2c_masterWait
     _i2c_masterWrite
       _i2c_masterWait
   _oscInit
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _tmr1_Init
   _tmr1_Interrupt
   _tmr1_Prescaler

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     37      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 17 00:09:10 2020

           ?_mpu6050_init 0070                         _T 005D                         _i 007B  
                       pc 0002        i2c_addr_start@addr 0073               __CFG_CP$OFF 0000  
                      _Ax 0063                        _Ay 0061                        _Az 005F  
                      _Gx 005B                        _Gy 0059                        _Gz 0057  
                      fsr 0004       ___wmul@multiplicand 0074                       l111 0114  
                     l112 0115                       l201 0EB7                       l114 0119  
                     l131 05AA                       l123 0F09                       l115 016D  
                     l300 04B9                       l132 05B4                       l116 019E  
                     l301 04C0                       l133 05BE                       l109 0110  
                     l310 0F64                       l302 04C7                       l134 05C8  
                     l311 0F69                       l303 04CE                       l151 06D0  
                     l135 05D2                       l312 0F81                       l304 0509  
                     l232 0EC4                       l136 05DC                       l137 05E6  
                     l129 05A0                       l226 0788                       l154 0EF5  
                     l138 0612                       l251 07B7                       l163 0FD2  
                     l308 0F5F                       l180 0F1F                       l172 0F3B  
                     l244 0EA0                       l229 0EB8                       l253 07BE  
                     l157 0ED4                       l238 0EE4                       l247 0EAB  
                     l433 0F8E                       l193 0FD5                       l282 0F3E  
                     l291 047A                       l267 059D                       l435 0FA6  
                     l195 0FDA                       l284 0F45                       l292 0481  
                     l196 0FDF                       l285 0F5C                       l293 0488  
                     l429 0470                       l189 0E7F                       l197 0FE4  
                     l278 0E97                       l294 048F                       l198 0FFF  
                     l295 0496                       l296 049D                       l297 04A4  
                     l289 0473                       l705 0714                       l298 04AB  
                     l299 04B2                       l715 0750                       l469 067A  
                     l880 07FF                       u600 07FC                       u601 07FB  
                     u610 0F88              __CFG_CPD$OFF 0000                       u611 0F87  
                     u710 0672                       u711 0671                       u560 0EBE  
                     u720 06D9                       u640 0FA2                       u561 0EBD  
                     u705 0664                       u721 06D8                       u641 0FA1  
                     u625 0F8F                       u570 0EC4                       u650 0625  
                     u571 0EC3                       u651 0624                       u635 0F96  
                     u580 0F1F                       u740 06EB                       u581 0F1E  
                     u741 06EA                       u670 0639                       u590 07F6  
                     u671 0638                       u735 06DD                       u591 07F5  
                     u760 06FC                       u665 062A                       u585 0F1B  
                     u761 06FB                       u690 0654                       u850 0768  
                     u691 0653                       u755 06EC                       u860 07AA  
                     u780 0710                       u861 07A9                       u685 063B  
                     u781 070F                       u765 06F8                       u870 07B4  
                     u871 07B3                       u695 0650                       u855 0763  
                     u775 0704                       u980 0F26                       u981 0F25  
                     u990 0F34                       u991 0F33              _adcInterrupt 0F3C  
                     _isr 0E80                       _luz 006B                       fsr0 0004  
                     indf 0000       analogInSel@analogIn 0074              __CFG_LVP$OFF 0000  
  __end_of_i2c_addr_start 0EE5                      l2050 0F2E                      l2060 0FC2  
                    l2052 0F34                      l2054 0FA7                      l2046 0F21  
                    l2056 0FA8                      l2048 0F26                      l2400 03D9  
                    l2058 0FBC                      l2410 0401                      l2402 03E4  
                    l2340 0727                      l1700 07F6                      l2420 044D  
                    l2412 0405                      l2404 03F0                      l2500 014B  
                    l2350 0746                      l2342 072B                      l2334 0715  
                    l1710 0F84                      l1702 07FC                      l2422 0451  
                    l2414 0411                      l2406 03F4                      l2510 0182  
                    l2502 014C                      l1800 0EFB                      l2344 072F  
                    l2336 071D                      l2352 074C                      l1712 0F88  
                    l1704 07FE                      l2416 0416                      l2408 03FA  
                    l2360 0324                      l2424 045A                      l2520 01BF  
                    l2512 0191                      l2504 015B                      l2440 0038  
                    l1730 0639                      l1722 0613                      l1650 0EA2  
                    l1810 05F0                      l1802 0EFC                      l2346 0739  
                    l2338 0720                      l1714 0F95                      l2418 0446  
                    l2426 046C                      l2370 0347                      l2362 032B  
                    l2530 0202                      l2522 01CD                      l2514 01A9  
                    l2506 0178                      l2450 0055                      l2442 003E  
                    l2434 0022                      l2700 04DD                      l1740 066C  
                    l1732 0642                      l1724 0625                      l1660 0F0C  
                    l1652 0EA7                      l1900 0553                      l1804 0EFD  
                    l2348 073F                      l1716 0F9C                      l1708 0F82  
                    l2372 035C                      l2364 0330                      l2356 0319  
                    l2540 0242                      l2532 020B                      l2524 01D2  
                    l2516 01AA                      l2508 0181                      l2460 0075  
                    l2452 0064                      l2444 0043                      l2436 0027  
                    l2702 0F54                      l1646 0EB8                      l1734 0654  
                    l1726 0628                      l1742 0672                      l1662 0F12  
                    l1654 0F0A                      l1670 0E9D                      l1910 056F  
                    l1902 0558                      l1806 059F                      l1750 06D9  
                    l1718 0FA2                      l2374 036F                      l2382 0389  
                    l2366 0333                      l2358 031E                      l1830 0EB4  
                    l1822 0FE9                      l2550 027B                      l2542 024E  
                    l2534 0223                      l2526 01DE                      l2518 01B8  
                    l2470 009C                      l2462 0079                      l2454 0069  
                    l2446 0049                      l2438 002D                      l2704 0F76  
                    l1832 0E8F                      l1648 0EBE                      l1736 0662  
                    l1728 0635                      l1680 0EED                      l1672 0EE6  
                    l1664 0ED6                      l1920 058C                      l1912 0575  
                    l1904 055E                      l1760 06FC                      l1752 06DC  
                    l2384 03A5                      l2376 0373                      l2368 0343  
                    l1816 0E7A                      l2560 02CA                      l2552 0280  
                    l2544 0253                      l2536 022F                      l2528 01E3  
                    l2480 0101                      l2472 00A4                      l2464 007F  
                    l2456 006E                      l2448 004F                      l1834 0F5E  
                    l1738 0663                      l1690 0ECB                      l1682 0EF2  
                    l1674 0EEA                      l1930 068A                      l1666 0EDB  
                    l1922 0592                      l1914 057B                      l1906 0564  
                    l1762 0702                      l1754 06E3                      l1746 06D1  
                    l2394 03B3                      l2386 03AD                      l2378 0384  
                    l1818 0FD4                      l2570 02F5                      l2562 02D6  
                    l2554 029F                      l2546 0261                      l2538 023D  
                    l2490 011A                      l2482 0104                      l2474 00A6  
                    l2466 008D                      l2458 0074                      l1844 0472  
                    l1692 0ECC                      l1684 0EC5                      l1676 0EEB  
                    l1940 06B8                      l1932 0698                      l1668 0E98  
                    l1924 0598                      l1916 0581                      l1908 056A  
                    l1764 0703                      l1756 06E7                      l1748 06D3  
                    l2388 03B1                      l1828 0EAD                      l2572 02FA  
                    l2564 02DB                      l2556 02A8                      l2548 0274  
                    l2492 011E                      l2484 0105                      l2476 00AC  
                    l2468 0092                      l1838 0F6E                      l1854 0F3D  
                    l1950 078E                      l1870 0785                      l1694 0ED1  
                    l1686 0EC9                      l1678 0EEC                      l1942 06BE  
                    l1934 069F                      l1926 067B                      l1918 0586  
                    l1766 070A                      l1758 06EB                      l2398 03CF  
                    l2566 02E4                      l2558 02B7                      l2494 0131  
                    l2486 0106                      l2478 00AD                      l1848 04D5  
                    l1960 07AE                      l1952 0796                      l1872 0786  
                    l1864 0751                      l1688 0ECA                      l1944 06C4  
                    l1936 06AC                      l1928 0684                      l1880 0519  
                    l1768 0710                      l1696 07EF                      l2568 02E9  
                    l2496 0139                      l2488 010D                      l1858 0F4C  
                    l1962 07B4                      l1954 079F                      l1874 0787  
                    l1866 0755                      l1946 06CA                      l1938 06B2  
                    l1890 0536                      l1882 051F                      l1794 0EF6  
                    l1698 07F0                      l2498 0142                      l1964 07BA  
                    l1956 07A4                      l1948 0789                      l1868 0758  
                    l1892 053C                      l1884 0525                      l1876 050A  
                    l1796 0EF9                      l1958 07AA                      l1894 0541  
                    l1886 052A                      l1878 0513                      l1798 0EFA  
                    l2694 0FF1                      l1896 0547                      l1888 0530  
                    l2696 039D                      l1898 054D                      l2698 05F8  
                    ?_isr 0070                      STR_1 07E1                      STR_2 07E5  
                    STR_3 07EB                      STR_4 07E1                      STR_5 07E8  
                    STR_6 07E1                      STR_7 07D9                      STR_8 07E1  
                    STR_9 07DD                      u1000 0FD2                      u1001 0FD1  
                    u1110 071D                      u1111 071C                      u1200 03CE  
                    u1201 03CD                      u1130 072F                      u1210 03D9  
                    u1131 072E                      u1211 03D8                      u1140 0739  
                    u1220 03E4                      u1300 0114                      u1141 0738  
                    u1125 0721                      u1221 03E3                      u1205 03CA  
                    u1301 0113                      u1230 03FA                      u1310 0119  
                    u1231 03F9                      u1311 0118                      u1160 074C  
                    u1240 0411                      u1320 0142                      u1161 074B  
                    u1145 0735                      u1241 0410                      u1225 03E0  
                    u1321 0141                      u1250 045A                      u1170 0324  
                    u1330 014B                      u1155 0740                      u1251 0459  
                    u1171 0323                      u1331 014A                      u1260 046C  
                    u1180 0343                      u1340 0178                      u1261 046B  
                    u1181 0342                      u1341 0177                      u1190 0383  
                    u1350 0181                      u1270 0074                      u1191 0382  
                    u1351 0180                      u1407 0166                      u1271 0073  
                    u1360 01A9                      u1280 00A4                      u1361 01A8  
                    u1417 018A                      u1281 00A3                      u1290 00AC  
                    u1427 019A                      u1291 00AB                      u1437 02B0  
                    u1447 030B                      u1457 050E                      u1377 0098  
                    u1467 067F                      u1387 010A                      u1477 068E  
                    u1397 0154                      u1487 069A                      u1497 06A7  
                    i1l99 0E80              __CFG_WRT$OFF 0000                      _acel 0067  
                    _main 0022                      _gyro 0065                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000      lcd8_dispString@value 0076  
          ??_mpu6050_init 0074                     ??_isr 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188           __end_of___lldiv 067B  
         __end_of___lwdiv 0715            _tmr1_Interrupt 0EAC           __end_of___lwmod 0751  
                   _TMR1H 000F                     _TMR1L 000E                     _PORTA 0005  
                   _PORTD 0008                     _TRISA 0085                     _TRISD 0088  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000            _i2c_masterRead 0789  
          _i2c_masterWait 0EB8            _i2c_masterStop 0E98           __end_of_dpowers 07D9  
         ?_i2c_addr_start 0070           __end_of_isdigit 0800                     _setup 0EF6  
                   main@A 0041                     main@D 004B                     main@F 0050  
                   main@G 0037           __end_of_oscInit 0613            _tmr1_Prescaler 0FD3  
          __CFG_BOREN$OFF 0000                     pclath 000A            _lcd8_setCursor 0F20  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0471  
    __size_of_analogInSel 0099            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0316           _lcd8_dispString 0FA7    __end_of_tmr1_Interrupt 0EB8  
                  ??_main 0034    __end_of_i2c_masterRead 07BF    __end_of_i2c_masterWait 0EC5  
  __end_of_i2c_masterStop 0EA1    __end_of_tmr1_Prescaler 1000                    _ADRESH 001E  
  __end_of_lcd8_setCursor 0F3C                    ?_setup 0070          __end_of_adcSetup 0E98  
                  _ANSELH 0189                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of_lcd8_cmd 0EF6            __CFG_PWRTE$OFF 0000  
                  ___wmul 0F82           _i2c_masterWrite 0EA1           _i2c_master_init 0751  
               ??___lldiv 007A                 ??___lwdiv 0076                 ??___lwmod 007A  
                  _fuerza 006C           ?_tmr1_Interrupt 0070              __pdataCOMMON 007B  
               ??_isdigit 0072           ?_i2c_masterRead 0072           ?_i2c_masterWait 0070  
         ?_i2c_masterStop 0070                 ??_oscInit 0072                    saved_w 007E  
    __end_of_mpu6050_init 059E           ?_tmr1_Prescaler 0070                 ??_sprintf 0028  
         ?_lcd8_setCursor 0075                _adcFoscSel 0F5D   __end_of__initialization 001E  
 __end_of_lcd8_dispString 0FD3            __pcstackCOMMON 0070        __size_of_lcd8_init 0056  
           __end_of_setup 0F0A        __size_of_delay_1ms 0016               oscInit@freq 0074  
            sprintf@width 0030                   ??_setup 0072                __pbssBANK0 0057  
              _lcd8_write 0EC5   __end_of_i2c_masterWrite 0EAC   __end_of_i2c_master_init 0789  
      lcd8_setCursor@fila 0076                __pmaintext 0022                   ?___wmul 0072  
      __size_of_tmr1_Init 0006                __pintentry 0004                 ?_adcSetup 0070  
  tmr1_Interrupt@tmr1_Int 0072          ??_i2c_addr_start 0073                 ?_lcd8_cmd 0070  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 07BF  
       __end_of_lcd8_init 06D1         __end_of_delay_1ms 0F20               ?_adcFoscSel 0070  
        ?_lcd8_dispString 0076                   ___lldiv 0613           __size_of___wmul 0025  
                 ___lwdiv 06D1                   ___lwmod 0715                ??_adcSetup 0072  
                 __ptext1 0FD3                   __ptext2 0EAC                   __ptext3 0E7A  
                 __ptext4 0316                   __ptext5 07EE                   __ptext6 0F82  
                 __ptext7 0715                   __ptext8 06D1                   __ptext9 0EF6  
               _T1CONbits 0010     __size_of_mpu6050_init 0094                   _dpowers 07CF  
                 _isdigit 07EE              __size_of_isr 0007                delay_1ms@i 0072  
              ??_lcd8_cmd 0074                   _oscInit 059E             lcd8_write@dat 0074  
                 main@Ayh 0055                   main@Gxh 0056                   _sprintf 0316  
                 clrloop0 0E88         __end_of_tmr1_Init 0E80             ??_analogInSel 0072  
    end_of_initialization 001E               ?_lcd8_write 0074          ?_i2c_masterWrite 0070  
        ?_i2c_master_init 0025           ___lldiv@divisor 0072           ___lldiv@counter 0024  
        ??_tmr1_Interrupt 0072              _mpu6050_init 050A          ??_i2c_masterRead 0074  
        ??_i2c_masterWait 0072          ??_i2c_masterStop 0072           i2c_masterRead@a 0072  
               _PORTBbits 0006                 _PORTEbits 0009       __size_of_adcFoscSel 0025  
        ??_tmr1_Prescaler 0072          ??_lcd8_setCursor 0076                 _TRISBbits 0086  
               _TRISCbits 0087       __end_of_analogInSel 050A            adcFoscSel@fosc 0074  
          __end_of___wmul 0FA7             __pidataCOMMON 0003             ?_adcInterrupt 0070  
     __size_of_lcd8_write 0010       start_initialization 000F               __end_of_isr 0E87  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___wmul 0076            ??_adcInterrupt 0072  
       __size_of_adcSetup 0009                 ___latbits 0002             __pcstackBANK0 0020  
       __size_of_lcd8_cmd 0011              _isdigit$1177 0072               _analogInSel 0471  
            ??_adcFoscSel 0072               sprintf@flag 002B               sprintf@prec 002F  
               _lcd8_init 067B     lcd8_setCursor@columna 0075                 _delay_1ms 0F0A  
        ___lwdiv@dividend 0074                  ?___lldiv 0072   tmr1_Prescaler@prescaler 0074  
                ?___lwdiv 0072                  ?___lwmod 0020                 __pstrings 07BF  
               _distancia 0069        __end_of_adcFoscSel 0F82                  ?_isdigit 0070  
                ?_oscInit 0070          ___lwdiv@quotient 0077                  ?_sprintf 0025  
          __size_of_setup 0014         interrupt_function 0004            ___wmul@product 0076  
               _tmr1_Init 0E7A              ??_lcd8_write 0076                 clear_ram0 0E87  
                _PIE1bits 008C                ?_lcd8_init 0070                ?_delay_1ms 0070  
                _PIR1bits 000C            adcInterrupt@en 0074                _ADCON0bits 001F  
             __stringbase 07CE                _ADCON1bits 009F  __size_of_lcd8_dispString 002C  
       ___wmul@multiplier 0072        __end_of_lcd8_write 0ED5   __size_of_i2c_addr_start 0010  
              ?_tmr1_Init 0070      __end_of_adcInterrupt 0F5D  __size_of_i2c_masterWrite 000B  
__size_of_i2c_master_init 0038          __size_of___lldiv 0068          __size_of___lwdiv 0044  
        __size_of___lwmod 003C                  _adcSetup 0E8F        __end_of__stringtab 07CF  
              sprintf@val 002D               lcd8_cmd@cmd 0074                  _lcd8_cmd 0EE5  
        __size_of_isdigit 0012           ___lwdiv@divisor 0072          __size_of_oscInit 0075  
         ___lwdiv@counter 0079                  __ptext10 059E                  __ptext11 050A  
                __ptext20 0F0A                  __ptext12 0E98                  __ptext21 0751  
                __ptext13 0ED5                  __ptext22 0613                  __ptext14 0EA1  
                __ptext23 0789                  __ptext15 0F20                  __ptext24 0EB8  
                __ptext16 067B                  __ptext25 0471                  __ptext17 0EE5  
                __ptext26 0E8F                  __ptext18 0FA7                  __ptext27 0F3C  
                __ptext19 0EC5                  __ptext28 0F5D                  __ptext29 0E80  
       __CFG_BOR4V$BOR40V 0000          __size_of_sprintf 015B             __size_of_main 02F4  
             ??_lcd8_init 0075               ??_delay_1ms 0072        i2c_masterRead@temp 0076  
     i2c_masterWrite@data 0072   __size_of_tmr1_Interrupt 000C                _INTCONbits 000B  
                isdigit@c 0073   __size_of_i2c_masterRead 0036         ??_lcd8_dispString 0078  
 __size_of_i2c_masterWait 000D   __size_of_i2c_masterStop 0009                  intlevel1 0000  
            ?_analogInSel 0070                 sprintf@ap 002C                 sprintf@sp 0032  
 __size_of_tmr1_Prescaler 002D   __size_of_lcd8_setCursor 001C          ___lwmod@dividend 0022  
        ___lldiv@dividend 0076               ??_tmr1_Init 0072                 stringcode 07C9  
              _OSCCONbits 008F                  sprintf@c 0033                  sprintf@f 0025  
        ___lldiv@quotient 0020           ___lwmod@divisor 0020         ??_i2c_masterWrite 0072  
         ___lwmod@counter 0024         ??_i2c_master_init 0029                  stringdir 07C9  
                stringtab 07BF               _SSPCON2bits 0091     __size_of_adcInterrupt 0021  
          _i2c_addr_start 0ED5          i2c_master_init@c 0025  
