

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 09 17:15:43 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  000E                     	;# 
   475  000F                     	;# 
   476  0010                     	;# 
   477  0011                     	;# 
   478  0012                     	;# 
   479  0013                     	;# 
   480  0014                     	;# 
   481  0015                     	;# 
   482  0015                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  001D                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  0081                     	;# 
   495  0085                     	;# 
   496  0086                     	;# 
   497  0087                     	;# 
   498  0088                     	;# 
   499  0089                     	;# 
   500  008C                     	;# 
   501  008D                     	;# 
   502  008E                     	;# 
   503  008F                     	;# 
   504  0090                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  0105                     	;# 
   523  0107                     	;# 
   524  0108                     	;# 
   525  0109                     	;# 
   526  010C                     	;# 
   527  010C                     	;# 
   528  010D                     	;# 
   529  010E                     	;# 
   530  010F                     	;# 
   531  0185                     	;# 
   532  0187                     	;# 
   533  0188                     	;# 
   534  0189                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537                           
   538                           	psect	strings
   539  0003                     __pstrings:	
   540  0003                     stringtab:	
   541  0003                     __stringtab:	
   542                           
   543                           ;	String table - string pointers are 1 byte each
   544  0003  1BFF               	btfsc	btemp+1,7
   545  0004  280D               	ljmp	stringcode
   546  0005  1383               	bcf	3,7
   547  0006  187F               	btfsc	btemp+1,0
   548  0007  1783               	bsf	3,7
   549  0008  0800               	movf	0,w
   550  0009  0A84               	incf	4,f
   551  000A  1903               	skipnz
   552  000B  0AFF               	incf	btemp+1,f
   553  000C  0008               	return
   554  000D                     stringcode:	
   555  000D                     stringdir:	
   556  000D  3000               	movlw	high stringdir
   557  000E  008A               	movwf	10
   558  000F  0804               	movf	4,w
   559  0010  0A84               	incf	4,f
   560  0011  0782               	addwf	2,f
   561  0012                     __stringbase:	
   562  0012  3400               	retlw	0
   563  0013                     __end_of__stringtab:	
   564  0013                     _dpowers:	
   565  0013  3401               	retlw	1
   566  0014  3400               	retlw	0
   567  0015  340A               	retlw	10
   568  0016  3400               	retlw	0
   569  0017  3464               	retlw	100
   570  0018  3400               	retlw	0
   571  0019  34E8               	retlw	232
   572  001A  3403               	retlw	3
   573  001B  3410               	retlw	16
   574  001C  3427               	retlw	39
   575  001D                     __end_of_dpowers:	
   576  000B                     _INTCONbits	set	11
   577  0013                     _SSPBUF	set	19
   578  0014                     _SSPCON	set	20
   579  000C                     _PIR1bits	set	12
   580  0009                     _PORTEbits	set	9
   581  0005                     _PORTA	set	5
   582  0010                     _T1CONbits	set	16
   583  0006                     _PORTBbits	set	6
   584  000E                     _TMR1L	set	14
   585  000F                     _TMR1H	set	15
   586  0091                     _SSPCON2bits	set	145
   587  0087                     _TRISCbits	set	135
   588  0094                     _SSPSTAT	set	148
   589  0093                     _SSPADD	set	147
   590  0091                     _SSPCON2	set	145
   591  008C                     _PIE1bits	set	140
   592  008F                     _OSCCONbits	set	143
   593  0089                     _TRISE	set	137
   594  0086                     _TRISBbits	set	134
   595  0085                     _TRISA	set	133
   596  048C                     _ACKEN	set	1164
   597  0189                     _ANSELH	set	393
   598  0188                     _ANSEL	set	392
   599  001D                     STR_1:	
   600  001D  3425               	retlw	37	;'%'
   601  001E  3433               	retlw	51	;'3'
   602  001F  3475               	retlw	117	;'u'
   603  0020  3400               	retlw	0
   604  0021                     STR_2:	
   605  0021  3464               	retlw	100	;'d'
   606  0022  343A               	retlw	58	;':'
   607  0023  3400               	retlw	0
   608  0024                     STR_5:	
   609  0024  3466               	retlw	102	;'f'
   610  0025  343A               	retlw	58	;':'
   611  0026  3400               	retlw	0
   612  0027                     STR_3:	
   613  0027  3463               	retlw	99	;'c'
   614  0028  346D               	retlw	109	;'m'
   615  0029  3400               	retlw	0
   616  001D                     
   617                           ; #config settings
   618  0000                     
   619                           	psect	cinit
   620  07F6                     start_initialization:	
   621  07F6                     __initialization:	
   622                           
   623                           ; Clear objects allocated to BANK0
   624  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   625  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   626  07F8  01BC               	clrf	__pbssBANK0& (0+127)
   627  07F9  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   628  07FA  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   629  07FB  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   630  07FC                     end_of_initialization:	
   631                           ;End of C runtime variable initialization code
   632                           
   633  07FC                     __end_of__initialization:	
   634  07FC  0183               	clrf	3
   635  07FD  120A  118A  2E3D   	ljmp	_main	;jump to C main() function
   636                           
   637                           	psect	bssBANK0
   638  003C                     __pbssBANK0:	
   639  003C                     _fuerza:	
   640  003C                     	ds	2
   641  003E                     _distancia:	
   642  003E                     	ds	2
   643                           
   644                           	psect	cstackCOMMON
   645  0070                     __pcstackCOMMON:	
   646  0070                     ?_isdigit:	
   647  0070                     ?_setup:	
   648                           ; 1 bit 
   649                           
   650  0070                     ??_setup:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_oscInit:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_oscInit:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_tmr1_Init:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_tmr1_Init:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_tmr1_Prescaler:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_tmr1_Prescaler:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_tmr1_Interrupt:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ??_tmr1_Interrupt:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_lcd8_init:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_i2c_masterStart:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ??_i2c_masterStart:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_i2c_masterWrite:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_i2c_masterStop:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_i2c_masterStop:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_delay_1ms:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ??_delay_1ms:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_lcd8_cmd:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ??_isdigit:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_main:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_i2c_masterWait:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ??_i2c_masterWait:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_i2c_masterRead:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?___wmul:	
   720                           ; 2 bytes @ 0x0
   721                           
   722  0070                     ?___lwdiv:	
   723                           ; 2 bytes @ 0x0
   724                           
   725  0070                     ?___lldiv:	
   726                           ; 2 bytes @ 0x0
   727                           
   728  0070                     tmr1_Interrupt@tmr1_Int:	
   729                           ; 4 bytes @ 0x0
   730                           
   731  0070                     _isdigit$982:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     delay_1ms@i:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     i2c_masterWrite@data:	
   738                           ; 2 bytes @ 0x0
   739                           
   740  0070                     i2c_masterRead@a:	
   741                           ; 2 bytes @ 0x0
   742                           
   743  0070                     ___wmul@multiplier:	
   744                           ; 2 bytes @ 0x0
   745                           
   746  0070                     ___lwdiv@divisor:	
   747                           ; 2 bytes @ 0x0
   748                           
   749  0070                     ___lldiv@divisor:	
   750                           ; 2 bytes @ 0x0
   751                           
   752                           
   753                           ; 4 bytes @ 0x0
   754  0070                     	ds	1
   755  0071                     isdigit@c:	
   756                           
   757                           ; 1 bytes @ 0x1
   758  0071                     	ds	1
   759  0072                     ??_i2c_masterWrite:	
   760  0072                     ??_i2c_masterRead:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ??_lcd8_cmd:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ?_lcd8_write:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0072                     oscInit@freq:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0072                     lcd8_cmd@cmd:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0072                     tmr1_Prescaler@prescaler:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0072                     lcd8_write@dat:	
   779                           ; 1 bytes @ 0x2
   780                           
   781  0072                     ___wmul@multiplicand:	
   782                           ; 2 bytes @ 0x2
   783                           
   784  0072                     ___lwdiv@dividend:	
   785                           ; 2 bytes @ 0x2
   786                           
   787                           
   788                           ; 2 bytes @ 0x2
   789  0072                     	ds	1
   790  0073                     ??_lcd8_init:	
   791  0073                     ?_lcd8_setCursor:	
   792                           ; 1 bytes @ 0x3
   793                           
   794  0073                     lcd8_setCursor@columna:	
   795                           ; 1 bytes @ 0x3
   796                           
   797                           
   798                           ; 1 bytes @ 0x3
   799  0073                     	ds	1
   800  0074                     ??_lcd8_setCursor:	
   801  0074                     ?_lcd8_dispString:	
   802                           ; 1 bytes @ 0x4
   803                           
   804  0074                     ??_lcd8_write:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0074                     ??___wmul:	
   808                           ; 1 bytes @ 0x4
   809                           
   810  0074                     ??___lwdiv:	
   811                           ; 1 bytes @ 0x4
   812                           
   813  0074                     lcd8_setCursor@fila:	
   814                           ; 1 bytes @ 0x4
   815                           
   816  0074                     lcd8_dispString@value:	
   817                           ; 1 bytes @ 0x4
   818                           
   819  0074                     i2c_masterRead@temp:	
   820                           ; 2 bytes @ 0x4
   821                           
   822  0074                     ___wmul@product:	
   823                           ; 2 bytes @ 0x4
   824                           
   825  0074                     ___lldiv@dividend:	
   826                           ; 2 bytes @ 0x4
   827                           
   828                           
   829                           ; 4 bytes @ 0x4
   830  0074                     	ds	1
   831  0075                     ___lwdiv@quotient:	
   832                           
   833                           ; 2 bytes @ 0x5
   834  0075                     	ds	1
   835  0076                     ??_lcd8_dispString:	
   836                           
   837                           ; 1 bytes @ 0x6
   838  0076                     	ds	1
   839  0077                     ___lwdiv@counter:	
   840                           
   841                           ; 1 bytes @ 0x7
   842  0077                     	ds	1
   843  0078                     ??___lldiv:	
   844  0078                     ?___lwmod:	
   845                           ; 1 bytes @ 0x8
   846                           
   847  0078                     ___lwmod@divisor:	
   848                           ; 2 bytes @ 0x8
   849                           
   850                           
   851                           ; 2 bytes @ 0x8
   852  0078                     	ds	1
   853  0079                     ___lldiv@quotient:	
   854                           
   855                           ; 4 bytes @ 0x9
   856  0079                     	ds	1
   857  007A                     ___lwmod@dividend:	
   858                           
   859                           ; 2 bytes @ 0xA
   860  007A                     	ds	2
   861  007C                     ??___lwmod:	
   862                           
   863                           ; 1 bytes @ 0xC
   864  007C                     	ds	1
   865  007D                     ___lldiv@counter:	
   866  007D                     ___lwmod@counter:	
   867                           ; 1 bytes @ 0xD
   868                           
   869                           
   870                           ; 1 bytes @ 0xD
   871  007D                     	ds	1
   872                           
   873                           	psect	cstackBANK0
   874  0020                     __pcstackBANK0:	
   875  0020                     ?_i2c_master_init:	
   876  0020                     ?_sprintf:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0020                     sprintf@f:	
   880                           ; 2 bytes @ 0x0
   881                           
   882  0020                     i2c_master_init@c:	
   883                           ; 1 bytes @ 0x0
   884                           
   885                           
   886                           ; 4 bytes @ 0x0
   887  0020                     	ds	3
   888  0023                     ??_sprintf:	
   889                           
   890                           ; 1 bytes @ 0x3
   891  0023                     	ds	1
   892  0024                     ??_i2c_master_init:	
   893                           
   894                           ; 1 bytes @ 0x4
   895  0024                     	ds	2
   896  0026                     sprintf@flag:	
   897                           
   898                           ; 1 bytes @ 0x6
   899  0026                     	ds	1
   900  0027                     sprintf@ap:	
   901                           
   902                           ; 1 bytes @ 0x7
   903  0027                     	ds	1
   904  0028                     sprintf@val:	
   905                           
   906                           ; 2 bytes @ 0x8
   907  0028                     	ds	2
   908  002A                     sprintf@prec:	
   909                           
   910                           ; 1 bytes @ 0xA
   911  002A                     	ds	1
   912  002B                     sprintf@width:	
   913                           
   914                           ; 2 bytes @ 0xB
   915  002B                     	ds	2
   916  002D                     sprintf@sp:	
   917                           
   918                           ; 1 bytes @ 0xD
   919  002D                     	ds	1
   920  002E                     sprintf@c:	
   921                           
   922                           ; 1 bytes @ 0xE
   923  002E                     	ds	1
   924  002F                     ??_main:	
   925                           
   926                           ; 1 bytes @ 0xF
   927  002F                     	ds	3
   928  0032                     main@D:	
   929                           
   930                           ; 5 bytes @ 0x12
   931  0032                     	ds	5
   932  0037                     main@F:	
   933                           
   934                           ; 5 bytes @ 0x17
   935  0037                     	ds	5
   936                           
   937                           	psect	maintext
   938  063D                     __pmaintext:	
   939 ;;
   940 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   941 ;;
   942 ;; *************** function _main *****************
   943 ;; Defined at:
   944 ;;		line 48 in file "master.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  F               5   23[BANK0 ] unsigned char [5]
   949 ;;  D               5   18[BANK0 ] unsigned char [5]
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : B00/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0      10       0       0       0
   961 ;;      Temps:          0       3       0       0       0
   962 ;;      Totals:         0      13       0       0       0
   963 ;;Total ram usage:       13 bytes
   964 ;; Hardware stack levels required when called:    3
   965 ;; This function calls:
   966 ;;		___lwdiv
   967 ;;		_delay_1ms
   968 ;;		_i2c_masterRead
   969 ;;		_i2c_masterStart
   970 ;;		_i2c_masterStop
   971 ;;		_i2c_masterWrite
   972 ;;		_i2c_master_init
   973 ;;		_lcd8_dispString
   974 ;;		_lcd8_init
   975 ;;		_lcd8_setCursor
   976 ;;		_oscInit
   977 ;;		_setup
   978 ;;		_sprintf
   979 ;;		_tmr1_Init
   980 ;;		_tmr1_Interrupt
   981 ;;		_tmr1_Prescaler
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _main
   989  063D                     _main:	
   990  063D                     l1659:	
   991                           ;incstack = 0
   992                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   993                           
   994                           
   995                           ;master.c: 49:     setup();
   996  063D  120A  118A  21BF  120A  118A  	fcall	_setup
   997  0642                     l1661:	
   998                           
   999                           ;master.c: 50:     oscInit(1);
  1000  0642  3001               	movlw	1
  1001  0643  120A  118A  246F  120A  118A  	fcall	_oscInit
  1002  0648                     l1663:	
  1003                           
  1004                           ;master.c: 51:     tmr1_Init();
  1005  0648  120A  118A  219D  120A  118A  	fcall	_tmr1_Init
  1006                           
  1007                           ;master.c: 52:     tmr1_Prescaler(1);
  1008  064D  3001               	movlw	1
  1009  064E  120A  118A  229A  120A  118A  	fcall	_tmr1_Prescaler
  1010  0653                     l1665:	
  1011                           
  1012                           ;master.c: 53:     tmr1_Interrupt(0);
  1013  0653  3000               	movlw	0
  1014  0654  120A  118A  21CB  120A  118A  	fcall	_tmr1_Interrupt
  1015  0659                     l1667:	
  1016                           
  1017                           ;master.c: 54:     i2c_master_init(100000);
  1018  0659  3000               	movlw	0
  1019  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1020  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1021  065C  00A3               	movwf	i2c_master_init@c+3
  1022  065D  3001               	movlw	1
  1023  065E  00A2               	movwf	i2c_master_init@c+2
  1024  065F  3086               	movlw	134
  1025  0660  00A1               	movwf	i2c_master_init@c+1
  1026  0661  30A0               	movlw	160
  1027  0662  00A0               	movwf	i2c_master_init@c
  1028  0663  120A  118A  22FD  120A  118A  	fcall	_i2c_master_init
  1029  0668                     l1669:	
  1030                           
  1031                           ;master.c: 55:     lcd8_init();
  1032  0668  120A  118A  23B3  120A  118A  	fcall	_lcd8_init
  1033  066D                     l1671:	
  1034                           
  1035                           ;master.c: 58:         i2c_masterStart();
  1036  066D  120A  118A  21A3  120A  118A  	fcall	_i2c_masterStart
  1037  0672                     l1673:	
  1038                           
  1039                           ;master.c: 59:         i2c_masterWrite(0x11);
  1040  0672  3011               	movlw	17
  1041  0673  00F0               	movwf	i2c_masterWrite@data
  1042  0674  3000               	movlw	0
  1043  0675  00F1               	movwf	i2c_masterWrite@data+1
  1044  0676  120A  118A  21B5  120A  118A  	fcall	_i2c_masterWrite
  1045  067B                     l1675:	
  1046                           
  1047                           ;master.c: 60:         fuerza = i2c_masterRead(0);
  1048  067B  3000               	movlw	0
  1049  067C  00F0               	movwf	i2c_masterRead@a
  1050  067D  00F1               	movwf	i2c_masterRead@a+1
  1051  067E  120A  118A  22C7  120A  118A  	fcall	_i2c_masterRead
  1052  0683  0871               	movf	?_i2c_masterRead+1,w
  1053  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0686  00BD               	movwf	_fuerza+1
  1056  0687  0870               	movf	?_i2c_masterRead,w
  1057  0688  00BC               	movwf	_fuerza
  1058  0689                     l1677:	
  1059                           
  1060                           ;master.c: 61:         i2c_masterStop();
  1061  0689  120A  118A  21AC  120A  118A  	fcall	_i2c_masterStop
  1062  068E                     l1679:	
  1063                           
  1064                           ;master.c: 62:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1065  068E  30C7               	movlw	199
  1066  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0691  00AF               	movwf	??_main
  1069  0692                     u1057:	
  1070  0692  2E93               	nop2
  1071  0693  0BAF               	decfsz	??_main,f
  1072  0694  2E92               	goto	u1057
  1073  0695  2E96               	nop2
  1074  0696                     l1681:	
  1075                           
  1076                           ;master.c: 64:         TMR1H = 0;
  1077  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0698  018F               	clrf	15	;volatile
  1080  0699                     l1683:	
  1081                           
  1082                           ;master.c: 65:         TMR1L = 0;
  1083  0699  018E               	clrf	14	;volatile
  1084  069A                     l1685:	
  1085                           
  1086                           ;master.c: 66:         PORTBbits.RB0 = 1;
  1087  069A  1406               	bsf	6,0	;volatile
  1088  069B                     l1687:	
  1089                           
  1090                           ;master.c: 67:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  1091  069B  3002               	movlw	2
  1092  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1093  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1094  069E  00AF               	movwf	??_main
  1095  069F                     u1067:	
  1096  069F  0BAF               	decfsz	??_main,f
  1097  06A0  2E9F               	goto	u1067
  1098  06A1  0000               	nop
  1099  06A2                     l1689:	
  1100                           
  1101                           ;master.c: 68:         PORTBbits.RB0 = 0;
  1102  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1103  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1104  06A4  1006               	bcf	6,0	;volatile
  1105  06A5                     l60:	
  1106                           ;master.c: 69:         while(!PORTBbits.RB1);
  1107                           
  1108  06A5  1C86               	btfss	6,1	;volatile
  1109  06A6  2EA8               	goto	u981
  1110  06A7  2EA9               	goto	u980
  1111  06A8                     u981:	
  1112  06A8  2EA5               	goto	l60
  1113  06A9                     u980:	
  1114  06A9                     l62:	
  1115                           
  1116                           ;master.c: 70:         T1CONbits.TMR1ON = 1;
  1117  06A9  1410               	bsf	16,0	;volatile
  1118  06AA                     l63:	
  1119                           ;master.c: 71:         while(PORTBbits.RB1);
  1120                           
  1121  06AA  1886               	btfsc	6,1	;volatile
  1122  06AB  2EAD               	goto	u991
  1123  06AC  2EAE               	goto	u990
  1124  06AD                     u991:	
  1125  06AD  2EAA               	goto	l63
  1126  06AE                     u990:	
  1127  06AE                     l65:	
  1128                           
  1129                           ;master.c: 72:         T1CONbits.TMR1ON = 0;
  1130  06AE  1010               	bcf	16,0	;volatile
  1131  06AF                     l1691:	
  1132                           
  1133                           ;master.c: 74:         distancia = (TMR1L | (TMR1H<<8));
  1134  06AF  080F               	movf	15,w	;volatile
  1135  06B0  00BF               	movwf	_distancia+1
  1136  06B1  080E               	movf	14,w	;volatile
  1137  06B2  00BE               	movwf	_distancia
  1138  06B3                     l1693:	
  1139                           
  1140                           ;master.c: 75:         distancia = distancia/29;
  1141  06B3  301D               	movlw	29
  1142  06B4  00F0               	movwf	___lwdiv@divisor
  1143  06B5  3000               	movlw	0
  1144  06B6  00F1               	movwf	___lwdiv@divisor+1
  1145  06B7  083F               	movf	_distancia+1,w
  1146  06B8  00F3               	movwf	___lwdiv@dividend+1
  1147  06B9  083E               	movf	_distancia,w
  1148  06BA  00F2               	movwf	___lwdiv@dividend
  1149  06BB  120A  118A  236F  120A  118A  	fcall	___lwdiv
  1150  06C0  0871               	movf	?___lwdiv+1,w
  1151  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1152  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1153  06C3  00BF               	movwf	_distancia+1
  1154  06C4  0870               	movf	?___lwdiv,w
  1155  06C5  00BE               	movwf	_distancia
  1156  06C6                     l1695:	
  1157                           
  1158                           ;master.c: 76:         distancia = distancia + 1;
  1159  06C6  083E               	movf	_distancia,w
  1160  06C7  3E01               	addlw	1
  1161  06C8  00BE               	movwf	_distancia
  1162  06C9  083F               	movf	_distancia+1,w
  1163  06CA  1803               	skipnc
  1164  06CB  3E01               	addlw	1
  1165  06CC  3E00               	addlw	0
  1166  06CD  00BF               	movwf	_distancia+1
  1167  06CE                     l1697:	
  1168                           
  1169                           ;master.c: 78:         if (distancia <= 10 && distancia >= 9){
  1170  06CE  3000               	movlw	0
  1171  06CF  023F               	subwf	_distancia+1,w
  1172  06D0  300B               	movlw	11
  1173  06D1  1903               	skipnz
  1174  06D2  023E               	subwf	_distancia,w
  1175  06D3  1803               	skipnc
  1176  06D4  2ED6               	goto	u1001
  1177  06D5  2ED7               	goto	u1000
  1178  06D6                     u1001:	
  1179  06D6  2F01               	goto	l66
  1180  06D7                     u1000:	
  1181  06D7                     l1699:	
  1182  06D7  3000               	movlw	0
  1183  06D8  023F               	subwf	_distancia+1,w
  1184  06D9  3009               	movlw	9
  1185  06DA  1903               	skipnz
  1186  06DB  023E               	subwf	_distancia,w
  1187  06DC  1C03               	skipc
  1188  06DD  2EDF               	goto	u1011
  1189  06DE  2EE0               	goto	u1010
  1190  06DF                     u1011:	
  1191  06DF  2F01               	goto	l66
  1192  06E0                     u1010:	
  1193  06E0                     l1701:	
  1194                           
  1195                           ;master.c: 79:             PORTBbits.RB2 = 1;
  1196  06E0  1506               	bsf	6,2	;volatile
  1197  06E1                     l1703:	
  1198                           
  1199                           ;master.c: 80:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1200  06E1  3002               	movlw	2
  1201  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1202  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1203  06E4  00B1               	movwf	??_main+2
  1204  06E5  3086               	movlw	134
  1205  06E6  00B0               	movwf	??_main+1
  1206  06E7  3098               	movlw	152
  1207  06E8  00AF               	movwf	??_main
  1208  06E9                     u1077:	
  1209  06E9  0BAF               	decfsz	??_main,f
  1210  06EA  2EE9               	goto	u1077
  1211  06EB  0BB0               	decfsz	??_main+1,f
  1212  06EC  2EE9               	goto	u1077
  1213  06ED  0BB1               	decfsz	??_main+2,f
  1214  06EE  2EE9               	goto	u1077
  1215  06EF  0000               	nop
  1216  06F0                     l1705:	
  1217                           
  1218                           ;master.c: 81:             PORTBbits.RB2 = 0;
  1219  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1220  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1221  06F2  1106               	bcf	6,2	;volatile
  1222                           
  1223                           ;master.c: 82:             _delay((unsigned long)((600)*(4000000/4000.0)));
  1224  06F3  3004               	movlw	4
  1225  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1226  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1227  06F6  00B1               	movwf	??_main+2
  1228  06F7  300C               	movlw	12
  1229  06F8  00B0               	movwf	??_main+1
  1230  06F9  3033               	movlw	51
  1231  06FA  00AF               	movwf	??_main
  1232  06FB                     u1087:	
  1233  06FB  0BAF               	decfsz	??_main,f
  1234  06FC  2EFB               	goto	u1087
  1235  06FD  0BB0               	decfsz	??_main+1,f
  1236  06FE  2EFB               	goto	u1087
  1237  06FF  0BB1               	decfsz	??_main+2,f
  1238  0700  2EFB               	goto	u1087
  1239  0701                     l66:	
  1240                           ;master.c: 83:         }
  1241                           
  1242                           
  1243                           ;master.c: 84:         if (distancia <= 8 && distancia >= 6){
  1244  0701  3000               	movlw	0
  1245  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0704  023F               	subwf	_distancia+1,w
  1248  0705  3009               	movlw	9
  1249  0706  1903               	skipnz
  1250  0707  023E               	subwf	_distancia,w
  1251  0708  1803               	skipnc
  1252  0709  2F0B               	goto	u1021
  1253  070A  2F0C               	goto	u1020
  1254  070B                     u1021:	
  1255  070B  2F37               	goto	l67
  1256  070C                     u1020:	
  1257  070C                     l1707:	
  1258  070C  3000               	movlw	0
  1259  070D  023F               	subwf	_distancia+1,w
  1260  070E  3006               	movlw	6
  1261  070F  1903               	skipnz
  1262  0710  023E               	subwf	_distancia,w
  1263  0711  1C03               	skipc
  1264  0712  2F14               	goto	u1031
  1265  0713  2F15               	goto	u1030
  1266  0714                     u1031:	
  1267  0714  2F37               	goto	l67
  1268  0715                     u1030:	
  1269  0715                     l1709:	
  1270                           
  1271                           ;master.c: 85:             PORTBbits.RB2 = 1;
  1272  0715  1506               	bsf	6,2	;volatile
  1273  0716                     l1711:	
  1274                           
  1275                           ;master.c: 86:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1276  0716  3002               	movlw	2
  1277  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0719  00B1               	movwf	??_main+2
  1280  071A  3086               	movlw	134
  1281  071B  00B0               	movwf	??_main+1
  1282  071C  3098               	movlw	152
  1283  071D  00AF               	movwf	??_main
  1284  071E                     u1097:	
  1285  071E  0BAF               	decfsz	??_main,f
  1286  071F  2F1E               	goto	u1097
  1287  0720  0BB0               	decfsz	??_main+1,f
  1288  0721  2F1E               	goto	u1097
  1289  0722  0BB1               	decfsz	??_main+2,f
  1290  0723  2F1E               	goto	u1097
  1291  0724  0000               	nop
  1292  0725                     l1713:	
  1293                           
  1294                           ;master.c: 87:             PORTBbits.RB2 = 0;
  1295  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0727  1106               	bcf	6,2	;volatile
  1298                           
  1299                           ;master.c: 88:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1300  0728  3002               	movlw	2
  1301  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1302  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1303  072B  00B1               	movwf	??_main+2
  1304  072C  3086               	movlw	134
  1305  072D  00B0               	movwf	??_main+1
  1306  072E  3098               	movlw	152
  1307  072F  00AF               	movwf	??_main
  1308  0730                     u1107:	
  1309  0730  0BAF               	decfsz	??_main,f
  1310  0731  2F30               	goto	u1107
  1311  0732  0BB0               	decfsz	??_main+1,f
  1312  0733  2F30               	goto	u1107
  1313  0734  0BB1               	decfsz	??_main+2,f
  1314  0735  2F30               	goto	u1107
  1315  0736  0000               	nop
  1316  0737                     l67:	
  1317                           ;master.c: 89:         }
  1318                           
  1319                           
  1320                           ;master.c: 90:         if (distancia < 6){
  1321  0737  3000               	movlw	0
  1322  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1324  073A  023F               	subwf	_distancia+1,w
  1325  073B  3006               	movlw	6
  1326  073C  1903               	skipnz
  1327  073D  023E               	subwf	_distancia,w
  1328  073E  1803               	skipnc
  1329  073F  2F41               	goto	u1041
  1330  0740  2F42               	goto	u1040
  1331  0741                     u1041:	
  1332  0741  2F43               	goto	l1717
  1333  0742                     u1040:	
  1334  0742                     l1715:	
  1335                           
  1336                           ;master.c: 91:             PORTBbits.RB2 = 1;
  1337  0742  1506               	bsf	6,2	;volatile
  1338  0743                     l1717:	
  1339                           
  1340                           ;master.c: 94:         char D[5];;master.c: 95:         sprintf(D ,"%3u", distancia);
  1341  0743  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1342  0744  00AF               	movwf	??_main
  1343  0745  082F               	movf	??_main,w
  1344  0746  00A0               	movwf	sprintf@f
  1345  0747  083F               	movf	_distancia+1,w
  1346  0748  00A2               	movwf	?_sprintf+2
  1347  0749  083E               	movf	_distancia,w
  1348  074A  00A1               	movwf	?_sprintf+1
  1349  074B  3032               	movlw	(low (main@D| 0))& (0+255)
  1350  074C  120A  118A  24E4  120A  118A  	fcall	_sprintf
  1351  0751                     l1719:	
  1352                           
  1353                           ;master.c: 96:         lcd8_setCursor(1,0);
  1354  0751  01F3               	clrf	lcd8_setCursor@columna
  1355  0752  3001               	movlw	1
  1356  0753  120A  118A  222D  120A  118A  	fcall	_lcd8_setCursor
  1357  0758                     l1721:	
  1358                           
  1359                           ;master.c: 97:         delay_1ms();
  1360  0758  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  1361                           
  1362                           ;master.c: 98:         lcd8_dispString("d:");
  1363  075D  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1364  075E  00F4               	movwf	lcd8_dispString@value
  1365  075F  3080               	movlw	128
  1366  0760  00F5               	movwf	lcd8_dispString@value+1
  1367  0761  120A  118A  226E  120A  118A  	fcall	_lcd8_dispString
  1368  0766                     l1723:	
  1369                           
  1370                           ;master.c: 99:         delay_1ms();
  1371  0766  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  1372  076B                     l1725:	
  1373                           
  1374                           ;master.c: 100:         lcd8_setCursor(1,2);
  1375  076B  3002               	movlw	2
  1376  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1377  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1378  076E  00AF               	movwf	??_main
  1379  076F  082F               	movf	??_main,w
  1380  0770  00F3               	movwf	lcd8_setCursor@columna
  1381  0771  3001               	movlw	1
  1382  0772  120A  118A  222D  120A  118A  	fcall	_lcd8_setCursor
  1383  0777                     l1727:	
  1384                           
  1385                           ;master.c: 101:         delay_1ms();
  1386  0777  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  1387  077C                     l1729:	
  1388                           
  1389                           ;master.c: 102:         lcd8_dispString(D);
  1390  077C  3032               	movlw	(low (main@D| 0))& (0+255)
  1391  077D  00F4               	movwf	lcd8_dispString@value
  1392  077E  3000               	movlw	0
  1393  077F  00F5               	movwf	lcd8_dispString@value+1
  1394  0780  120A  118A  226E  120A  118A  	fcall	_lcd8_dispString
  1395                           
  1396                           ;master.c: 103:         delay_1ms();
  1397  0785  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  1398                           
  1399                           ;master.c: 104:         lcd8_setCursor(1,5);
  1400  078A  3005               	movlw	5
  1401  078B  1283               	bcf	3,5	;RP0=0, select bank0
  1402  078C  1303               	bcf	3,6	;RP1=0, select bank0
  1403  078D  00AF               	movwf	??_main
  1404  078E  082F               	movf	??_main,w
  1405  078F  00F3               	movwf	lcd8_setCursor@columna
  1406  0790  3001               	movlw	1
  1407  0791  120A  118A  222D  120A  118A  	fcall	_lcd8_setCursor
  1408                           
  1409                           ;master.c: 105:         delay_1ms();
  1410  0796  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  1411  079B                     l1731:	
  1412                           
  1413                           ;master.c: 106:         lcd8_dispString("cm");
  1414  079B  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1415  079C  00F4               	movwf	lcd8_dispString@value
  1416  079D  3080               	movlw	128
  1417  079E  00F5               	movwf	lcd8_dispString@value+1
  1418  079F  120A  118A  226E  120A  118A  	fcall	_lcd8_dispString
  1419  07A4                     l1733:	
  1420                           
  1421                           ;master.c: 108:         char F[5];;master.c: 109:         sprintf(F, "%3u", fuerza);
  1422  07A4  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1423  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1424  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1425  07A7  00AF               	movwf	??_main
  1426  07A8  082F               	movf	??_main,w
  1427  07A9  00A0               	movwf	sprintf@f
  1428  07AA  083D               	movf	_fuerza+1,w
  1429  07AB  00A2               	movwf	?_sprintf+2
  1430  07AC  083C               	movf	_fuerza,w
  1431  07AD  00A1               	movwf	?_sprintf+1
  1432  07AE  3037               	movlw	(low (main@F| 0))& (0+255)
  1433  07AF  120A  118A  24E4  120A  118A  	fcall	_sprintf
  1434                           
  1435                           ;master.c: 110:         lcd8_setCursor(1,8);
  1436  07B4  3008               	movlw	8
  1437  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1438  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1439  07B7  00AF               	movwf	??_main
  1440  07B8  082F               	movf	??_main,w
  1441  07B9  00F3               	movwf	lcd8_setCursor@columna
  1442  07BA  3001               	movlw	1
  1443  07BB  120A  118A  222D  120A  118A  	fcall	_lcd8_setCursor
  1444                           
  1445                           ;master.c: 111:         delay_1ms();
  1446  07C0  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  1447  07C5                     l1735:	
  1448                           
  1449                           ;master.c: 112:         lcd8_dispString("f:");
  1450  07C5  3012               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1451  07C6  00F4               	movwf	lcd8_dispString@value
  1452  07C7  3080               	movlw	128
  1453  07C8  00F5               	movwf	lcd8_dispString@value+1
  1454  07C9  120A  118A  226E  120A  118A  	fcall	_lcd8_dispString
  1455  07CE                     l1737:	
  1456                           
  1457                           ;master.c: 113:         delay_1ms();
  1458  07CE  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  1459  07D3                     l1739:	
  1460                           
  1461                           ;master.c: 114:         lcd8_setCursor(1,10);
  1462  07D3  300A               	movlw	10
  1463  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1464  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1465  07D6  00AF               	movwf	??_main
  1466  07D7  082F               	movf	??_main,w
  1467  07D8  00F3               	movwf	lcd8_setCursor@columna
  1468  07D9  3001               	movlw	1
  1469  07DA  120A  118A  222D  120A  118A  	fcall	_lcd8_setCursor
  1470  07DF                     l1741:	
  1471                           
  1472                           ;master.c: 115:         delay_1ms();
  1473  07DF  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  1474                           
  1475                           ;master.c: 116:         lcd8_dispString(F);
  1476  07E4  3037               	movlw	(low (main@F| 0))& (0+255)
  1477  07E5  00F4               	movwf	lcd8_dispString@value
  1478  07E6  3000               	movlw	0
  1479  07E7  00F5               	movwf	lcd8_dispString@value+1
  1480  07E8  120A  118A  226E  120A  118A  	fcall	_lcd8_dispString
  1481  07ED                     l1743:	
  1482                           
  1483                           ;master.c: 117:         delay_1ms();
  1484  07ED  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  1485  07F2  2E6D               	goto	l1671
  1486  07F3  120A  118A  2800   	ljmp	start
  1487  07F6                     __end_of_main:	
  1488                           
  1489                           	psect	text1
  1490  029A                     __ptext1:	
  1491 ;; *************** function _tmr1_Prescaler *****************
  1492 ;; Defined at:
  1493 ;;		line 22 in file "TMR1.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  prescaler       1    wreg     unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  prescaler       1    2[COMMON] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0
  1509 ;;      Temps:          2       0       0       0       0
  1510 ;;      Totals:         3       0       0       0       0
  1511 ;;Total ram usage:        3 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _tmr1_Prescaler
  1522  029A                     _tmr1_Prescaler:	
  1523                           
  1524                           ;incstack = 0
  1525                           ; Regs used in _tmr1_Prescaler: [wreg-fsr0h+status,2+status,0]
  1526                           ;tmr1_Prescaler@prescaler stored from wreg
  1527  029A  00F2               	movwf	tmr1_Prescaler@prescaler
  1528  029B                     l1485:	
  1529                           
  1530                           ;TMR1.c: 23:     switch(prescaler){
  1531  029B  2AB0               	goto	l1489
  1532  029C                     l141:	
  1533                           ;TMR1.c: 24:         case 0:
  1534                           
  1535                           
  1536                           ;TMR1.c: 25:             T1CONbits.T1CKPS1 = 0;
  1537  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1538  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1539  029E  1290               	bcf	16,5	;volatile
  1540                           
  1541                           ;TMR1.c: 26:             T1CONbits.T1CKPS0 = 0;
  1542  029F  1210               	bcf	16,4	;volatile
  1543                           
  1544                           ;TMR1.c: 27:             break;
  1545  02A0  2AC6               	goto	l146
  1546  02A1                     l143:	
  1547                           ;TMR1.c: 28:         case 1:
  1548                           
  1549                           
  1550                           ;TMR1.c: 29:             T1CONbits.T1CKPS1 = 0;
  1551  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1552  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1553  02A3  1290               	bcf	16,5	;volatile
  1554                           
  1555                           ;TMR1.c: 30:             T1CONbits.T1CKPS0 = 1;
  1556  02A4  1610               	bsf	16,4	;volatile
  1557                           
  1558                           ;TMR1.c: 31:             break;
  1559  02A5  2AC6               	goto	l146
  1560  02A6                     l144:	
  1561                           ;TMR1.c: 32:         case 2:
  1562                           
  1563                           
  1564                           ;TMR1.c: 33:             T1CONbits.T1CKPS1 = 1;
  1565  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1566  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1567  02A8  1690               	bsf	16,5	;volatile
  1568                           
  1569                           ;TMR1.c: 34:             T1CONbits.T1CKPS0 = 0;
  1570  02A9  1210               	bcf	16,4	;volatile
  1571                           
  1572                           ;TMR1.c: 35:             break;
  1573  02AA  2AC6               	goto	l146
  1574  02AB                     l145:	
  1575                           ;TMR1.c: 36:         case 3:
  1576                           
  1577                           
  1578                           ;TMR1.c: 37:             T1CONbits.T1CKPS1 = 1;
  1579  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1580  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1581  02AD  1690               	bsf	16,5	;volatile
  1582                           
  1583                           ;TMR1.c: 38:             T1CONbits.T1CKPS0 = 1;
  1584  02AE  1610               	bsf	16,4	;volatile
  1585                           
  1586                           ;TMR1.c: 39:             break;
  1587  02AF  2AC6               	goto	l146
  1588  02B0                     l1489:	
  1589  02B0  0872               	movf	tmr1_Prescaler@prescaler,w
  1590  02B1  00F0               	movwf	??_tmr1_Prescaler
  1591  02B2  01F1               	clrf	??_tmr1_Prescaler+1
  1592                           
  1593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1594                           ; Switch size 1, requested type "simple"
  1595                           ; Number of cases is 1, Range of values is 0 to 0
  1596                           ; switch strategies available:
  1597                           ; Name         Instructions Cycles
  1598                           ; simple_byte            4     3 (average)
  1599                           ; direct_byte           11     8 (fixed)
  1600                           ; jumptable            260     6 (fixed)
  1601                           ;	Chosen strategy is simple_byte
  1602  02B3  0871               	movf	??_tmr1_Prescaler+1,w
  1603  02B4  3A00               	xorlw	0	; case 0
  1604  02B5  1903               	skipnz
  1605  02B6  2AB8               	goto	l1811
  1606  02B7  2AC6               	goto	l146
  1607  02B8                     l1811:	
  1608                           
  1609                           ; Switch size 1, requested type "simple"
  1610                           ; Number of cases is 4, Range of values is 0 to 3
  1611                           ; switch strategies available:
  1612                           ; Name         Instructions Cycles
  1613                           ; simple_byte           13     7 (average)
  1614                           ; direct_byte           20     8 (fixed)
  1615                           ; jumptable            260     6 (fixed)
  1616                           ;	Chosen strategy is simple_byte
  1617  02B8  0870               	movf	??_tmr1_Prescaler,w
  1618  02B9  3A00               	xorlw	0	; case 0
  1619  02BA  1903               	skipnz
  1620  02BB  2A9C               	goto	l141
  1621  02BC  3A01               	xorlw	1	; case 1
  1622  02BD  1903               	skipnz
  1623  02BE  2AA1               	goto	l143
  1624  02BF  3A03               	xorlw	3	; case 2
  1625  02C0  1903               	skipnz
  1626  02C1  2AA6               	goto	l144
  1627  02C2  3A01               	xorlw	1	; case 3
  1628  02C3  1903               	skipnz
  1629  02C4  2AAB               	goto	l145
  1630  02C5  2AC6               	goto	l146
  1631  02C6                     l146:	
  1632  02C6  0008               	return
  1633  02C7                     __end_of_tmr1_Prescaler:	
  1634                           
  1635                           	psect	text2
  1636  01CB                     __ptext2:	
  1637 ;; *************** function _tmr1_Interrupt *****************
  1638 ;; Defined at:
  1639 ;;		line 43 in file "TMR1.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  tmr1_Int        1    wreg     unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  tmr1_Int        1    0[COMMON] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         0       0       0       0       0
  1654 ;;      Locals:         1       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0
  1656 ;;      Totals:         1       0       0       0       0
  1657 ;;Total ram usage:        1 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _tmr1_Interrupt
  1668  01CB                     _tmr1_Interrupt:	
  1669                           
  1670                           ;incstack = 0
  1671                           ; Regs used in _tmr1_Interrupt: [wreg+status,0]
  1672                           ;tmr1_Interrupt@tmr1_Int stored from wreg
  1673  01CB  00F0               	movwf	tmr1_Interrupt@tmr1_Int
  1674  01CC                     l1495:	
  1675                           
  1676                           ;TMR1.c: 44:     PIE1bits.TMR1IE = tmr1_Int;
  1677  01CC  0C70               	rrf	tmr1_Interrupt@tmr1_Int,w
  1678  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  1679  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  1680  01CF  1C03               	skipc
  1681  01D0  100C               	bcf	12,0	;volatile
  1682  01D1  1803               	skipnc
  1683  01D2  140C               	bsf	12,0	;volatile
  1684  01D3                     l1497:	
  1685                           
  1686                           ;TMR1.c: 45:     PIR1bits.TMR1IF = 0;
  1687  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1688  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1689  01D5  100C               	bcf	12,0	;volatile
  1690  01D6                     l149:	
  1691  01D6  0008               	return
  1692  01D7                     __end_of_tmr1_Interrupt:	
  1693                           
  1694                           	psect	text3
  1695  019D                     __ptext3:	
  1696 ;; *************** function _tmr1_Init *****************
  1697 ;; Defined at:
  1698 ;;		line 16 in file "TMR1.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		None
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _tmr1_Init
  1727  019D                     _tmr1_Init:	
  1728  019D                     l1483:	
  1729                           ;incstack = 0
  1730                           ; Regs used in _tmr1_Init: []
  1731                           
  1732                           
  1733                           ;TMR1.c: 17:     T1CONbits.T1OSCEN = 0;
  1734  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1735  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1736  019F  1190               	bcf	16,3	;volatile
  1737                           
  1738                           ;TMR1.c: 18:     T1CONbits.TMR1CS = 0;
  1739  01A0  1090               	bcf	16,1	;volatile
  1740                           
  1741                           ;TMR1.c: 19:     T1CONbits.TMR1ON = 1;
  1742  01A1  1410               	bsf	16,0	;volatile
  1743  01A2                     l137:	
  1744  01A2  0008               	return
  1745  01A3                     __end_of_tmr1_Init:	
  1746                           
  1747                           	psect	text4
  1748  04E4                     __ptext4:	
  1749 ;; *************** function _sprintf *****************
  1750 ;; Defined at:
  1751 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  sp              1    wreg     PTR unsigned char 
  1754 ;;		 -> main@F(5), main@D(5), 
  1755 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1756 ;;		 -> STR_4(4), STR_1(4), 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  1759 ;;		 -> main@F(5), main@D(5), 
  1760 ;;  tmpval          4    0        struct .
  1761 ;;  width           2   11[BANK0 ] int 
  1762 ;;  val             2    8[BANK0 ] unsigned int 
  1763 ;;  cp              2    0        PTR const unsigned char 
  1764 ;;  len             2    0        unsigned int 
  1765 ;;  c               1   14[BANK0 ] unsigned char 
  1766 ;;  prec            1   10[BANK0 ] char 
  1767 ;;  ap              1    7[BANK0 ] PTR void [1]
  1768 ;;		 -> ?_sprintf(2), 
  1769 ;;  flag            1    6[BANK0 ] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  2    0[BANK0 ] int 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         0       3       0       0       0
  1780 ;;      Locals:         0       9       0       0       0
  1781 ;;      Temps:          0       3       0       0       0
  1782 ;;      Totals:         0      15       0       0       0
  1783 ;;Total ram usage:       15 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    1
  1786 ;; This function calls:
  1787 ;;		___lwdiv
  1788 ;;		___lwmod
  1789 ;;		___wmul
  1790 ;;		_isdigit
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _sprintf
  1798  04E4                     _sprintf:	
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1802                           ;sprintf@sp stored from wreg
  1803  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1804  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1805  04E6  00AD               	movwf	sprintf@sp
  1806  04E7                     l1565:	
  1807                           
  1808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;
  1809  04E7  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1810  04E8  00A3               	movwf	??_sprintf
  1811  04E9  0823               	movf	??_sprintf,w
  1812  04EA  00A7               	movwf	sprintf@ap
  1813                           
  1814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1815  04EB  2E26               	goto	l1633
  1816  04EC                     l1567:	
  1817                           
  1818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1819  04EC  3025               	movlw	37
  1820  04ED  062E               	xorwf	sprintf@c,w
  1821  04EE  1903               	btfsc	3,2
  1822  04EF  2CF1               	goto	u851
  1823  04F0  2CF2               	goto	u850
  1824  04F1                     u851:	
  1825  04F1  2CFE               	goto	l1573
  1826  04F2                     u850:	
  1827  04F2                     l1569:	
  1828                           
  1829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1830  04F2  082E               	movf	sprintf@c,w
  1831  04F3  00A3               	movwf	??_sprintf
  1832  04F4  082D               	movf	sprintf@sp,w
  1833  04F5  0084               	movwf	4
  1834  04F6  0823               	movf	??_sprintf,w
  1835  04F7  1383               	bcf	3,7	;select IRP bank0
  1836  04F8  0080               	movwf	0
  1837  04F9                     l1571:	
  1838  04F9  3001               	movlw	1
  1839  04FA  00A3               	movwf	??_sprintf
  1840  04FB  0823               	movf	??_sprintf,w
  1841  04FC  07AD               	addwf	sprintf@sp,f
  1842                           
  1843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1844  04FD  2E26               	goto	l1633
  1845  04FE                     l1573:	
  1846                           
  1847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  1848  04FE  01AB               	clrf	sprintf@width
  1849  04FF  01AC               	clrf	sprintf@width+1
  1850                           
  1851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1852  0500  01A6               	clrf	sprintf@flag
  1853  0501                     l1575:	
  1854                           
  1855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  1856  0501  0820               	movf	sprintf@f,w
  1857  0502  0084               	movwf	4
  1858  0503  120A  118A  200D  120A  118A  	fcall	stringdir
  1859  0508  120A  118A  2205  120A  118A  	fcall	_isdigit
  1860  050D  1C03               	btfss	3,0
  1861  050E  2D10               	goto	u861
  1862  050F  2D11               	goto	u860
  1863  0510                     u861:	
  1864  0510  2D57               	goto	l1591
  1865  0511                     u860:	
  1866  0511                     l1577:	
  1867                           
  1868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  1869  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0513  01AB               	clrf	sprintf@width
  1872  0514  01AC               	clrf	sprintf@width+1
  1873  0515                     l1579:	
  1874                           
  1875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  1876  0515  300A               	movlw	10
  1877  0516  00F0               	movwf	___wmul@multiplier
  1878  0517  3000               	movlw	0
  1879  0518  00F1               	movwf	___wmul@multiplier+1
  1880  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1881  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1882  051B  082C               	movf	sprintf@width+1,w
  1883  051C  00F3               	movwf	___wmul@multiplicand+1
  1884  051D  082B               	movf	sprintf@width,w
  1885  051E  00F2               	movwf	___wmul@multiplicand
  1886  051F  120A  118A  2249  120A  118A  	fcall	___wmul
  1887  0524  0871               	movf	?___wmul+1,w
  1888  0525  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0526  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0527  00AC               	movwf	sprintf@width+1
  1891  0528  0870               	movf	?___wmul,w
  1892  0529  00AB               	movwf	sprintf@width
  1893  052A                     l1581:	
  1894                           
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  1896  052A  0820               	movf	sprintf@f,w
  1897  052B  0084               	movwf	4
  1898  052C  120A  118A  200D  120A  118A  	fcall	stringdir
  1899  0531  3ED0               	addlw	208
  1900  0532  00A3               	movwf	??_sprintf
  1901  0533  30FF               	movlw	255
  1902  0534  1803               	skipnc
  1903  0535  3000               	movlw	0
  1904  0536  00A4               	movwf	??_sprintf+1
  1905  0537  0823               	movf	??_sprintf,w
  1906  0538  07AB               	addwf	sprintf@width,f
  1907  0539  1803               	skipnc
  1908  053A  0AAC               	incf	sprintf@width+1,f
  1909  053B  0824               	movf	??_sprintf+1,w
  1910  053C  07AC               	addwf	sprintf@width+1,f
  1911  053D                     l1583:	
  1912  053D  3001               	movlw	1
  1913  053E  00A3               	movwf	??_sprintf
  1914  053F  0823               	movf	??_sprintf,w
  1915  0540  07A0               	addwf	sprintf@f,f
  1916  0541                     l1585:	
  1917                           
  1918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  1919  0541  0820               	movf	sprintf@f,w
  1920  0542  0084               	movwf	4
  1921  0543  120A  118A  200D  120A  118A  	fcall	stringdir
  1922  0548  120A  118A  2205  120A  118A  	fcall	_isdigit
  1923  054D  1803               	btfsc	3,0
  1924  054E  2D50               	goto	u871
  1925  054F  2D51               	goto	u870
  1926  0550                     u871:	
  1927  0550  2D15               	goto	l1579
  1928  0551                     u870:	
  1929  0551  2D57               	goto	l1591
  1930  0552                     l1587:	
  1931                           
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 844:    fla
      +                          g |= 0xC0;
  1933  0552  30C0               	movlw	192
  1934  0553  00A3               	movwf	??_sprintf
  1935  0554  0823               	movf	??_sprintf,w
  1936  0555  04A6               	iorwf	sprintf@flag,f
  1937                           
  1938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 845:    bre
      +                          ak;
  1939  0556  2D73               	goto	l1593
  1940  0557                     l1591:	
  1941  0557  3001               	movlw	1
  1942  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1944  055A  07A0               	addwf	sprintf@f,f
  1945  055B  30FF               	movlw	-1
  1946  055C  0720               	addwf	sprintf@f,w
  1947  055D  0084               	movwf	4
  1948  055E  120A  118A  200D  120A  118A  	fcall	stringdir
  1949  0563  00AE               	movwf	sprintf@c
  1950  0564  00A3               	movwf	??_sprintf
  1951  0565  01A4               	clrf	??_sprintf+1
  1952                           
  1953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1954                           ; Switch size 1, requested type "simple"
  1955                           ; Number of cases is 1, Range of values is 0 to 0
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte            4     3 (average)
  1959                           ; direct_byte           11     8 (fixed)
  1960                           ; jumptable            260     6 (fixed)
  1961                           ;	Chosen strategy is simple_byte
  1962  0566  0824               	movf	??_sprintf+1,w
  1963  0567  3A00               	xorlw	0	; case 0
  1964  0568  1903               	skipnz
  1965  0569  2D6B               	goto	l1813
  1966  056A  2E26               	goto	l1633
  1967  056B                     l1813:	
  1968                           
  1969                           ; Switch size 1, requested type "simple"
  1970                           ; Number of cases is 2, Range of values is 0 to 117
  1971                           ; switch strategies available:
  1972                           ; Name         Instructions Cycles
  1973                           ; simple_byte            7     4 (average)
  1974                           ; jumptable            260     6 (fixed)
  1975                           ;	Chosen strategy is simple_byte
  1976  056B  0823               	movf	??_sprintf,w
  1977  056C  3A00               	xorlw	0	; case 0
  1978  056D  1903               	skipnz
  1979  056E  2E38               	goto	l1635
  1980  056F  3A75               	xorlw	117	; case 117
  1981  0570  1903               	skipnz
  1982  0571  2D52               	goto	l1587
  1983  0572  2E26               	goto	l1633
  1984  0573                     l1593:	
  1985                           
  1986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1299:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1312:     val
      +                           = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1987  0573  0827               	movf	sprintf@ap,w
  1988  0574  0084               	movwf	4
  1989  0575  1383               	bcf	3,7	;select IRP bank0
  1990  0576  0800               	movf	0,w
  1991  0577  00A8               	movwf	sprintf@val
  1992  0578  0A84               	incf	4,f
  1993  0579  0800               	movf	0,w
  1994  057A  00A9               	movwf	sprintf@val+1
  1995  057B                     l1595:	
  1996  057B  3002               	movlw	2
  1997  057C  00A3               	movwf	??_sprintf
  1998  057D  0823               	movf	??_sprintf,w
  1999  057E  07A7               	addwf	sprintf@ap,f
  2000  057F                     l1597:	
  2001                           
  2002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1313:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2003  057F  01AE               	clrf	sprintf@c
  2004  0580  0AAE               	incf	sprintf@c,f
  2005  0581                     l1603:	
  2006                           
  2007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  2008  0581  082E               	movf	sprintf@c,w
  2009  0582  00A3               	movwf	??_sprintf
  2010  0583  0723               	addwf	??_sprintf,w
  2011  0584  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2012  0585  0084               	movwf	4
  2013  0586  120A  118A  200D  120A  118A  	fcall	stringdir
  2014  058B  00A4               	movwf	??_sprintf+1
  2015  058C  120A  118A  200D  120A  118A  	fcall	stringdir
  2016  0591  00A5               	movwf	??_sprintf+2
  2017  0592  0825               	movf	??_sprintf+2,w
  2018  0593  0229               	subwf	sprintf@val+1,w
  2019  0594  1D03               	skipz
  2020  0595  2D98               	goto	u885
  2021  0596  0824               	movf	??_sprintf+1,w
  2022  0597  0228               	subwf	sprintf@val,w
  2023  0598                     u885:	
  2024  0598  1803               	skipnc
  2025  0599  2D9B               	goto	u881
  2026  059A  2D9C               	goto	u880
  2027  059B                     u881:	
  2028  059B  2D9D               	goto	l1607
  2029  059C                     u880:	
  2030  059C  2DA7               	goto	l1609
  2031  059D                     l1607:	
  2032  059D  3001               	movlw	1
  2033  059E  00A3               	movwf	??_sprintf
  2034  059F  0823               	movf	??_sprintf,w
  2035  05A0  07AE               	addwf	sprintf@c,f
  2036  05A1  3005               	movlw	5
  2037  05A2  062E               	xorwf	sprintf@c,w
  2038  05A3  1D03               	btfss	3,2
  2039  05A4  2DA6               	goto	u891
  2040  05A5  2DA7               	goto	u890
  2041  05A6                     u891:	
  2042  05A6  2D81               	goto	l1603
  2043  05A7                     u890:	
  2044  05A7                     l1609:	
  2045                           
  2046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  2047  05A7  082C               	movf	sprintf@width+1,w
  2048  05A8  3A80               	xorlw	128
  2049  05A9  3C80               	sublw	128
  2050  05AA  1D03               	skipz
  2051  05AB  2DAE               	goto	u905
  2052  05AC  082B               	movf	sprintf@width,w
  2053  05AD  022E               	subwf	sprintf@c,w
  2054  05AE                     u905:	
  2055  05AE  1803               	skipnc
  2056  05AF  2DB1               	goto	u901
  2057  05B0  2DB2               	goto	u900
  2058  05B1                     u901:	
  2059  05B1  2DBE               	goto	l1613
  2060  05B2                     u900:	
  2061  05B2                     l1611:	
  2062                           
  2063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  2064  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  2065  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  2066  05B4  082E               	movf	sprintf@c,w
  2067  05B5  00A3               	movwf	??_sprintf
  2068  05B6  01A4               	clrf	??_sprintf+1
  2069  05B7  0823               	movf	??_sprintf,w
  2070  05B8  02AB               	subwf	sprintf@width,f
  2071  05B9  0824               	movf	??_sprintf+1,w
  2072  05BA  1C03               	skipc
  2073  05BB  03AC               	decf	sprintf@width+1,f
  2074  05BC  02AC               	subwf	sprintf@width+1,f
  2075  05BD  2DC2               	goto	l1615
  2076  05BE                     l1613:	
  2077                           
  2078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  2079  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2080  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2081  05C0  01AB               	clrf	sprintf@width
  2082  05C1  01AC               	clrf	sprintf@width+1
  2083  05C2                     l1615:	
  2084                           
  2085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  2086  05C2  082B               	movf	sprintf@width,w
  2087  05C3  042C               	iorwf	sprintf@width+1,w
  2088  05C4  1903               	btfsc	3,2
  2089  05C5  2DC7               	goto	u911
  2090  05C6  2DC8               	goto	u910
  2091  05C7                     u911:	
  2092  05C7  2DDF               	goto	l1623
  2093  05C8                     u910:	
  2094  05C8                     l1617:	
  2095                           
  2096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  2097  05C8  3020               	movlw	32
  2098  05C9  00A3               	movwf	??_sprintf
  2099  05CA  082D               	movf	sprintf@sp,w
  2100  05CB  0084               	movwf	4
  2101  05CC  0823               	movf	??_sprintf,w
  2102  05CD  1383               	bcf	3,7	;select IRP bank0
  2103  05CE  0080               	movwf	0
  2104  05CF                     l1619:	
  2105  05CF  3001               	movlw	1
  2106  05D0  00A3               	movwf	??_sprintf
  2107  05D1  0823               	movf	??_sprintf,w
  2108  05D2  07AD               	addwf	sprintf@sp,f
  2109  05D3                     l1621:	
  2110  05D3  30FF               	movlw	255
  2111  05D4  07AB               	addwf	sprintf@width,f
  2112  05D5  1803               	skipnc
  2113  05D6  0AAC               	incf	sprintf@width+1,f
  2114  05D7  30FF               	movlw	255
  2115  05D8  07AC               	addwf	sprintf@width+1,f
  2116  05D9  082B               	movf	sprintf@width,w
  2117  05DA  042C               	iorwf	sprintf@width+1,w
  2118  05DB  1D03               	btfss	3,2
  2119  05DC  2DDE               	goto	u921
  2120  05DD  2DDF               	goto	u920
  2121  05DE                     u921:	
  2122  05DE  2DC8               	goto	l1617
  2123  05DF                     u920:	
  2124  05DF                     l1623:	
  2125                           
  2126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  2127  05DF  082E               	movf	sprintf@c,w
  2128  05E0  00A3               	movwf	??_sprintf
  2129  05E1  0823               	movf	??_sprintf,w
  2130  05E2  00AA               	movwf	sprintf@prec
  2131                           
  2132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2133  05E3  2E1D               	goto	l1631
  2134  05E4                     l1625:	
  2135                           
  2136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2137  05E4  300A               	movlw	10
  2138  05E5  00F8               	movwf	___lwmod@divisor
  2139  05E6  3000               	movlw	0
  2140  05E7  00F9               	movwf	___lwmod@divisor+1
  2141  05E8  082A               	movf	sprintf@prec,w
  2142  05E9  00A3               	movwf	??_sprintf
  2143  05EA  0723               	addwf	??_sprintf,w
  2144  05EB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2145  05EC  0084               	movwf	4
  2146  05ED  120A  118A  200D  120A  118A  	fcall	stringdir
  2147  05F2  00F0               	movwf	___lwdiv@divisor
  2148  05F3  120A  118A  200D  120A  118A  	fcall	stringdir
  2149  05F8  00F1               	movwf	___lwdiv@divisor+1
  2150  05F9  0829               	movf	sprintf@val+1,w
  2151  05FA  00F3               	movwf	___lwdiv@dividend+1
  2152  05FB  0828               	movf	sprintf@val,w
  2153  05FC  00F2               	movwf	___lwdiv@dividend
  2154  05FD  120A  118A  236F  120A  118A  	fcall	___lwdiv
  2155  0602  0871               	movf	?___lwdiv+1,w
  2156  0603  00FB               	movwf	___lwmod@dividend+1
  2157  0604  0870               	movf	?___lwdiv,w
  2158  0605  00FA               	movwf	___lwmod@dividend
  2159  0606  120A  118A  2335  120A  118A  	fcall	___lwmod
  2160  060B  0878               	movf	?___lwmod,w
  2161  060C  3E30               	addlw	48
  2162  060D  1283               	bcf	3,5	;RP0=0, select bank0
  2163  060E  1303               	bcf	3,6	;RP1=0, select bank0
  2164  060F  00A4               	movwf	??_sprintf+1
  2165  0610  0824               	movf	??_sprintf+1,w
  2166  0611  00AE               	movwf	sprintf@c
  2167  0612                     l1627:	
  2168                           
  2169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  2170  0612  082E               	movf	sprintf@c,w
  2171  0613  00A3               	movwf	??_sprintf
  2172  0614  082D               	movf	sprintf@sp,w
  2173  0615  0084               	movwf	4
  2174  0616  0823               	movf	??_sprintf,w
  2175  0617  1383               	bcf	3,7	;select IRP bank0
  2176  0618  0080               	movwf	0
  2177  0619                     l1629:	
  2178  0619  3001               	movlw	1
  2179  061A  00A3               	movwf	??_sprintf
  2180  061B  0823               	movf	??_sprintf,w
  2181  061C  07AD               	addwf	sprintf@sp,f
  2182  061D                     l1631:	
  2183                           
  2184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2185  061D  30FF               	movlw	255
  2186  061E  00A3               	movwf	??_sprintf
  2187  061F  0823               	movf	??_sprintf,w
  2188  0620  07AA               	addwf	sprintf@prec,f
  2189  0621  0A2A               	incf	sprintf@prec,w
  2190  0622  1D03               	btfss	3,2
  2191  0623  2E25               	goto	u931
  2192  0624  2E26               	goto	u930
  2193  0625                     u931:	
  2194  0625  2DE4               	goto	l1625
  2195  0626                     u930:	
  2196  0626                     l1633:	
  2197                           
  2198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2199  0626  3001               	movlw	1
  2200  0627  07A0               	addwf	sprintf@f,f
  2201  0628  30FF               	movlw	-1
  2202  0629  0720               	addwf	sprintf@f,w
  2203  062A  0084               	movwf	4
  2204  062B  120A  118A  200D  120A  118A  	fcall	stringdir
  2205  0630  00A3               	movwf	??_sprintf
  2206  0631  0823               	movf	??_sprintf,w
  2207  0632  00AE               	movwf	sprintf@c
  2208  0633  082E               	movf	sprintf@c,w
  2209  0634  1D03               	btfss	3,2
  2210  0635  2E37               	goto	u941
  2211  0636  2E38               	goto	u940
  2212  0637                     u941:	
  2213  0637  2CEC               	goto	l1567
  2214  0638                     u940:	
  2215  0638                     l1635:	
  2216                           
  2217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  2218  0638  082D               	movf	sprintf@sp,w
  2219  0639  0084               	movwf	4
  2220  063A  1383               	bcf	3,7	;select IRP bank0
  2221  063B  0180               	clrf	0
  2222  063C                     l318:	
  2223  063C  0008               	return
  2224  063D                     __end_of_sprintf:	
  2225                           
  2226                           	psect	text5
  2227  0205                     __ptext5:	
  2228 ;; *************** function _isdigit *****************
  2229 ;; Defined at:
  2230 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  c               1    wreg     unsigned char 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  c               1    1[COMMON] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;		None               void
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         0       0       0       0       0
  2245 ;;      Locals:         2       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0
  2247 ;;      Totals:         2       0       0       0       0
  2248 ;;Total ram usage:        2 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_sprintf
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           
  2258                           ;psect for function _isdigit
  2259  0205                     _isdigit:	
  2260                           
  2261                           ;incstack = 0
  2262                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2263                           ;isdigit@c stored from wreg
  2264  0205  00F1               	movwf	isdigit@c
  2265  0206                     l1367:	
  2266  0206  01F0               	clrf	_isdigit$982
  2267  0207                     l1369:	
  2268  0207  303A               	movlw	58
  2269  0208  0271               	subwf	isdigit@c,w
  2270  0209  1803               	skipnc
  2271  020A  2A0C               	goto	u561
  2272  020B  2A0D               	goto	u560
  2273  020C                     u561:	
  2274  020C  2A15               	goto	l1375
  2275  020D                     u560:	
  2276  020D                     l1371:	
  2277  020D  3030               	movlw	48
  2278  020E  0271               	subwf	isdigit@c,w
  2279  020F  1C03               	skipc
  2280  0210  2A12               	goto	u571
  2281  0211  2A13               	goto	u570
  2282  0212                     u571:	
  2283  0212  2A15               	goto	l1375
  2284  0213                     u570:	
  2285  0213                     l1373:	
  2286  0213  01F0               	clrf	_isdigit$982
  2287  0214  0AF0               	incf	_isdigit$982,f
  2288  0215                     l1375:	
  2289  0215  0C70               	rrf	_isdigit$982,w
  2290  0216                     l769:	
  2291  0216  0008               	return
  2292  0217                     __end_of_isdigit:	
  2293                           
  2294                           	psect	text6
  2295  0249                     __ptext6:	
  2296 ;; *************** function ___wmul *****************
  2297 ;; Defined at:
  2298 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  multiplier      2    0[COMMON] unsigned int 
  2301 ;;  multiplicand    2    2[COMMON] unsigned int 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  product         2    4[COMMON] unsigned int 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2    0[COMMON] unsigned int 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         4       0       0       0       0
  2314 ;;      Locals:         2       0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0
  2316 ;;      Totals:         6       0       0       0       0
  2317 ;;Total ram usage:        6 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_sprintf
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function ___wmul
  2328  0249                     ___wmul:	
  2329  0249                     l1379:	
  2330                           ;incstack = 0
  2331                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2332                           
  2333  0249  01F4               	clrf	___wmul@product
  2334  024A  01F5               	clrf	___wmul@product+1
  2335  024B                     l1381:	
  2336  024B  1C70               	btfss	___wmul@multiplier,0
  2337  024C  2A4E               	goto	u581
  2338  024D  2A4F               	goto	u580
  2339  024E                     u581:	
  2340  024E  2A55               	goto	l322
  2341  024F                     u580:	
  2342  024F                     l1383:	
  2343  024F  0872               	movf	___wmul@multiplicand,w
  2344  0250  07F4               	addwf	___wmul@product,f
  2345  0251  1803               	skipnc
  2346  0252  0AF5               	incf	___wmul@product+1,f
  2347  0253  0873               	movf	___wmul@multiplicand+1,w
  2348  0254  07F5               	addwf	___wmul@product+1,f
  2349  0255                     l322:	
  2350  0255  3001               	movlw	1
  2351  0256                     u595:	
  2352  0256  1003               	clrc
  2353  0257  0DF2               	rlf	___wmul@multiplicand,f
  2354  0258  0DF3               	rlf	___wmul@multiplicand+1,f
  2355  0259  3EFF               	addlw	-1
  2356  025A  1D03               	skipz
  2357  025B  2A56               	goto	u595
  2358  025C                     l1385:	
  2359  025C  3001               	movlw	1
  2360  025D                     u605:	
  2361  025D  1003               	clrc
  2362  025E  0CF1               	rrf	___wmul@multiplier+1,f
  2363  025F  0CF0               	rrf	___wmul@multiplier,f
  2364  0260  3EFF               	addlw	-1
  2365  0261  1D03               	skipz
  2366  0262  2A5D               	goto	u605
  2367  0263                     l1387:	
  2368  0263  0870               	movf	___wmul@multiplier,w
  2369  0264  0471               	iorwf	___wmul@multiplier+1,w
  2370  0265  1D03               	btfss	3,2
  2371  0266  2A68               	goto	u611
  2372  0267  2A69               	goto	u610
  2373  0268                     u611:	
  2374  0268  2A4B               	goto	l1381
  2375  0269                     u610:	
  2376  0269                     l1389:	
  2377  0269  0875               	movf	___wmul@product+1,w
  2378  026A  00F1               	movwf	?___wmul+1
  2379  026B  0874               	movf	___wmul@product,w
  2380  026C  00F0               	movwf	?___wmul
  2381  026D                     l324:	
  2382  026D  0008               	return
  2383  026E                     __end_of___wmul:	
  2384                           
  2385                           	psect	text7
  2386  0335                     __ptext7:	
  2387 ;; *************** function ___lwmod *****************
  2388 ;; Defined at:
  2389 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  divisor         2    8[COMMON] unsigned int 
  2392 ;;  dividend        2   10[COMMON] unsigned int 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  counter         1   13[COMMON] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  2    8[COMMON] unsigned int 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         4       0       0       0       0
  2405 ;;      Locals:         1       0       0       0       0
  2406 ;;      Temps:          1       0       0       0       0
  2407 ;;      Totals:         6       0       0       0       0
  2408 ;;Total ram usage:        6 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_sprintf
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function ___lwmod
  2419  0335                     ___lwmod:	
  2420  0335                     l1443:	
  2421                           ;incstack = 0
  2422                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2423                           
  2424  0335  0878               	movf	___lwmod@divisor,w
  2425  0336  0479               	iorwf	___lwmod@divisor+1,w
  2426  0337  1903               	btfsc	3,2
  2427  0338  2B3A               	goto	u761
  2428  0339  2B3B               	goto	u760
  2429  033A                     u761:	
  2430  033A  2B6A               	goto	l1461
  2431  033B                     u760:	
  2432  033B                     l1445:	
  2433  033B  01FD               	clrf	___lwmod@counter
  2434  033C  0AFD               	incf	___lwmod@counter,f
  2435  033D  2B49               	goto	l1451
  2436  033E                     l1447:	
  2437  033E  3001               	movlw	1
  2438  033F                     u775:	
  2439  033F  1003               	clrc
  2440  0340  0DF8               	rlf	___lwmod@divisor,f
  2441  0341  0DF9               	rlf	___lwmod@divisor+1,f
  2442  0342  3EFF               	addlw	-1
  2443  0343  1D03               	skipz
  2444  0344  2B3F               	goto	u775
  2445  0345                     l1449:	
  2446  0345  3001               	movlw	1
  2447  0346  00FC               	movwf	??___lwmod
  2448  0347  087C               	movf	??___lwmod,w
  2449  0348  07FD               	addwf	___lwmod@counter,f
  2450  0349                     l1451:	
  2451  0349  1FF9               	btfss	___lwmod@divisor+1,7
  2452  034A  2B4C               	goto	u781
  2453  034B  2B4D               	goto	u780
  2454  034C                     u781:	
  2455  034C  2B3E               	goto	l1447
  2456  034D                     u780:	
  2457  034D                     l1453:	
  2458  034D  0879               	movf	___lwmod@divisor+1,w
  2459  034E  027B               	subwf	___lwmod@dividend+1,w
  2460  034F  1D03               	skipz
  2461  0350  2B53               	goto	u795
  2462  0351  0878               	movf	___lwmod@divisor,w
  2463  0352  027A               	subwf	___lwmod@dividend,w
  2464  0353                     u795:	
  2465  0353  1C03               	skipc
  2466  0354  2B56               	goto	u791
  2467  0355  2B57               	goto	u790
  2468  0356                     u791:	
  2469  0356  2B5D               	goto	l1457
  2470  0357                     u790:	
  2471  0357                     l1455:	
  2472  0357  0878               	movf	___lwmod@divisor,w
  2473  0358  02FA               	subwf	___lwmod@dividend,f
  2474  0359  0879               	movf	___lwmod@divisor+1,w
  2475  035A  1C03               	skipc
  2476  035B  03FB               	decf	___lwmod@dividend+1,f
  2477  035C  02FB               	subwf	___lwmod@dividend+1,f
  2478  035D                     l1457:	
  2479  035D  3001               	movlw	1
  2480  035E                     u805:	
  2481  035E  1003               	clrc
  2482  035F  0CF9               	rrf	___lwmod@divisor+1,f
  2483  0360  0CF8               	rrf	___lwmod@divisor,f
  2484  0361  3EFF               	addlw	-1
  2485  0362  1D03               	skipz
  2486  0363  2B5E               	goto	u805
  2487  0364                     l1459:	
  2488  0364  3001               	movlw	1
  2489  0365  02FD               	subwf	___lwmod@counter,f
  2490  0366  1D03               	btfss	3,2
  2491  0367  2B69               	goto	u811
  2492  0368  2B6A               	goto	u810
  2493  0369                     u811:	
  2494  0369  2B4D               	goto	l1453
  2495  036A                     u810:	
  2496  036A                     l1461:	
  2497  036A  087B               	movf	___lwmod@dividend+1,w
  2498  036B  00F9               	movwf	?___lwmod+1
  2499  036C  087A               	movf	___lwmod@dividend,w
  2500  036D  00F8               	movwf	?___lwmod
  2501  036E                     l604:	
  2502  036E  0008               	return
  2503  036F                     __end_of___lwmod:	
  2504                           
  2505                           	psect	text8
  2506  036F                     __ptext8:	
  2507 ;; *************** function ___lwdiv *****************
  2508 ;; Defined at:
  2509 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  divisor         2    0[COMMON] unsigned int 
  2512 ;;  dividend        2    2[COMMON] unsigned int 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  quotient        2    5[COMMON] unsigned int 
  2515 ;;  counter         1    7[COMMON] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  2    0[COMMON] unsigned int 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         4       0       0       0       0
  2526 ;;      Locals:         3       0       0       0       0
  2527 ;;      Temps:          1       0       0       0       0
  2528 ;;      Totals:         8       0       0       0       0
  2529 ;;Total ram usage:        8 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;;		_sprintf
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function ___lwdiv
  2541  036F                     ___lwdiv:	
  2542  036F                     l1417:	
  2543                           ;incstack = 0
  2544                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2545                           
  2546  036F  01F5               	clrf	___lwdiv@quotient
  2547  0370  01F6               	clrf	___lwdiv@quotient+1
  2548  0371                     l1419:	
  2549  0371  0870               	movf	___lwdiv@divisor,w
  2550  0372  0471               	iorwf	___lwdiv@divisor+1,w
  2551  0373  1903               	btfsc	3,2
  2552  0374  2B76               	goto	u691
  2553  0375  2B77               	goto	u690
  2554  0376                     u691:	
  2555  0376  2BAE               	goto	l1439
  2556  0377                     u690:	
  2557  0377                     l1421:	
  2558  0377  01F7               	clrf	___lwdiv@counter
  2559  0378  0AF7               	incf	___lwdiv@counter,f
  2560  0379  2B85               	goto	l1427
  2561  037A                     l1423:	
  2562  037A  3001               	movlw	1
  2563  037B                     u705:	
  2564  037B  1003               	clrc
  2565  037C  0DF0               	rlf	___lwdiv@divisor,f
  2566  037D  0DF1               	rlf	___lwdiv@divisor+1,f
  2567  037E  3EFF               	addlw	-1
  2568  037F  1D03               	skipz
  2569  0380  2B7B               	goto	u705
  2570  0381                     l1425:	
  2571  0381  3001               	movlw	1
  2572  0382  00F4               	movwf	??___lwdiv
  2573  0383  0874               	movf	??___lwdiv,w
  2574  0384  07F7               	addwf	___lwdiv@counter,f
  2575  0385                     l1427:	
  2576  0385  1FF1               	btfss	___lwdiv@divisor+1,7
  2577  0386  2B88               	goto	u711
  2578  0387  2B89               	goto	u710
  2579  0388                     u711:	
  2580  0388  2B7A               	goto	l1423
  2581  0389                     u710:	
  2582  0389                     l1429:	
  2583  0389  3001               	movlw	1
  2584  038A                     u725:	
  2585  038A  1003               	clrc
  2586  038B  0DF5               	rlf	___lwdiv@quotient,f
  2587  038C  0DF6               	rlf	___lwdiv@quotient+1,f
  2588  038D  3EFF               	addlw	-1
  2589  038E  1D03               	skipz
  2590  038F  2B8A               	goto	u725
  2591  0390  0871               	movf	___lwdiv@divisor+1,w
  2592  0391  0273               	subwf	___lwdiv@dividend+1,w
  2593  0392  1D03               	skipz
  2594  0393  2B96               	goto	u735
  2595  0394  0870               	movf	___lwdiv@divisor,w
  2596  0395  0272               	subwf	___lwdiv@dividend,w
  2597  0396                     u735:	
  2598  0396  1C03               	skipc
  2599  0397  2B99               	goto	u731
  2600  0398  2B9A               	goto	u730
  2601  0399                     u731:	
  2602  0399  2BA1               	goto	l1435
  2603  039A                     u730:	
  2604  039A                     l1431:	
  2605  039A  0870               	movf	___lwdiv@divisor,w
  2606  039B  02F2               	subwf	___lwdiv@dividend,f
  2607  039C  0871               	movf	___lwdiv@divisor+1,w
  2608  039D  1C03               	skipc
  2609  039E  03F3               	decf	___lwdiv@dividend+1,f
  2610  039F  02F3               	subwf	___lwdiv@dividend+1,f
  2611  03A0                     l1433:	
  2612  03A0  1475               	bsf	___lwdiv@quotient,0
  2613  03A1                     l1435:	
  2614  03A1  3001               	movlw	1
  2615  03A2                     u745:	
  2616  03A2  1003               	clrc
  2617  03A3  0CF1               	rrf	___lwdiv@divisor+1,f
  2618  03A4  0CF0               	rrf	___lwdiv@divisor,f
  2619  03A5  3EFF               	addlw	-1
  2620  03A6  1D03               	skipz
  2621  03A7  2BA2               	goto	u745
  2622  03A8                     l1437:	
  2623  03A8  3001               	movlw	1
  2624  03A9  02F7               	subwf	___lwdiv@counter,f
  2625  03AA  1D03               	btfss	3,2
  2626  03AB  2BAD               	goto	u751
  2627  03AC  2BAE               	goto	u750
  2628  03AD                     u751:	
  2629  03AD  2B89               	goto	l1429
  2630  03AE                     u750:	
  2631  03AE                     l1439:	
  2632  03AE  0876               	movf	___lwdiv@quotient+1,w
  2633  03AF  00F1               	movwf	?___lwdiv+1
  2634  03B0  0875               	movf	___lwdiv@quotient,w
  2635  03B1  00F0               	movwf	?___lwdiv
  2636  03B2                     l594:	
  2637  03B2  0008               	return
  2638  03B3                     __end_of___lwdiv:	
  2639                           
  2640                           	psect	text9
  2641  01BF                     __ptext9:	
  2642 ;; *************** function _setup *****************
  2643 ;; Defined at:
  2644 ;;		line 122 in file "master.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		status,2
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2658 ;;      Params:         0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _setup
  2673  01BF                     _setup:	
  2674  01BF                     l1465:	
  2675                           ;incstack = 0
  2676                           ; Regs used in _setup: [status,2]
  2677                           
  2678                           
  2679                           ;master.c: 123:     TRISA = 0x00;
  2680  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  2681  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  2682  01C1  0185               	clrf	5	;volatile
  2683  01C2                     l1467:	
  2684                           
  2685                           ;master.c: 124:     TRISBbits.TRISB0 = 0;
  2686  01C2  1006               	bcf	6,0	;volatile
  2687  01C3                     l1469:	
  2688                           
  2689                           ;master.c: 125:     TRISBbits.TRISB1 = 1;
  2690  01C3  1486               	bsf	6,1	;volatile
  2691  01C4                     l1471:	
  2692                           
  2693                           ;master.c: 126:     TRISBbits.TRISB2 = 0;
  2694  01C4  1106               	bcf	6,2	;volatile
  2695                           
  2696                           ;master.c: 127:     TRISE = 0;
  2697  01C5  0189               	clrf	9	;volatile
  2698                           
  2699                           ;master.c: 128:     ANSEL = 0;
  2700  01C6  1683               	bsf	3,5	;RP0=1, select bank3
  2701  01C7  1703               	bsf	3,6	;RP1=1, select bank3
  2702  01C8  0188               	clrf	8	;volatile
  2703                           
  2704                           ;master.c: 129:     ANSELH = 0;
  2705  01C9  0189               	clrf	9	;volatile
  2706  01CA                     l74:	
  2707  01CA  0008               	return
  2708  01CB                     __end_of_setup:	
  2709                           
  2710                           	psect	text10
  2711  046F                     __ptext10:	
  2712 ;; *************** function _oscInit *****************
  2713 ;; Defined at:
  2714 ;;		line 11 in file "OSCCON.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  freq            1    wreg     unsigned char 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  freq            1    2[COMMON] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      unsigned char 
  2721 ;; Registers used:
  2722 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2728 ;;      Params:         0       0       0       0       0
  2729 ;;      Locals:         1       0       0       0       0
  2730 ;;      Temps:          2       0       0       0       0
  2731 ;;      Totals:         3       0       0       0       0
  2732 ;;Total ram usage:        3 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           
  2742                           ;psect for function _oscInit
  2743  046F                     _oscInit:	
  2744                           
  2745                           ;incstack = 0
  2746                           ; Regs used in _oscInit: [wreg-fsr0h+status,2+status,0]
  2747                           ;oscInit@freq stored from wreg
  2748  046F  00F2               	movwf	oscInit@freq
  2749  0470                     l1473:	
  2750                           
  2751                           ;OSCCON.c: 12:     switch(freq){
  2752  0470  2CC1               	goto	l1477
  2753  0471                     l80:	
  2754                           ;OSCCON.c: 13:         case 0:
  2755                           
  2756                           
  2757                           ;OSCCON.c: 14:             OSCCONbits.IRCF2 = 1;
  2758  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2759  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2760  0473  170F               	bsf	15,6	;volatile
  2761                           
  2762                           ;OSCCON.c: 15:             OSCCONbits.IRCF1 = 1;
  2763  0474  168F               	bsf	15,5	;volatile
  2764                           
  2765                           ;OSCCON.c: 16:             OSCCONbits.IRCF0 = 1;
  2766  0475  160F               	bsf	15,4	;volatile
  2767                           
  2768                           ;OSCCON.c: 17:             OSCCONbits.OSTS = 0;
  2769  0476  118F               	bcf	15,3	;volatile
  2770                           
  2771                           ;OSCCON.c: 18:             OSCCONbits.HTS = 1;
  2772  0477  150F               	bsf	15,2	;volatile
  2773                           
  2774                           ;OSCCON.c: 19:             OSCCONbits.LTS = 0;
  2775  0478  108F               	bcf	15,1	;volatile
  2776                           
  2777                           ;OSCCON.c: 20:             OSCCONbits.SCS = 1;
  2778  0479  140F               	bsf	15,0	;volatile
  2779                           
  2780                           ;OSCCON.c: 21:             break;
  2781  047A  2CE3               	goto	l89
  2782  047B                     l82:	
  2783                           ;OSCCON.c: 22:         case 1:
  2784                           
  2785                           
  2786                           ;OSCCON.c: 23:             OSCCONbits.IRCF2 = 1;
  2787  047B  1683               	bsf	3,5	;RP0=1, select bank1
  2788  047C  1303               	bcf	3,6	;RP1=0, select bank1
  2789  047D  170F               	bsf	15,6	;volatile
  2790                           
  2791                           ;OSCCON.c: 24:             OSCCONbits.IRCF1 = 1;
  2792  047E  168F               	bsf	15,5	;volatile
  2793                           
  2794                           ;OSCCON.c: 25:             OSCCONbits.IRCF0 = 0;
  2795  047F  120F               	bcf	15,4	;volatile
  2796                           
  2797                           ;OSCCON.c: 26:             OSCCONbits.OSTS = 0;
  2798  0480  118F               	bcf	15,3	;volatile
  2799                           
  2800                           ;OSCCON.c: 27:             OSCCONbits.HTS = 1;
  2801  0481  150F               	bsf	15,2	;volatile
  2802                           
  2803                           ;OSCCON.c: 28:             OSCCONbits.LTS = 0;
  2804  0482  108F               	bcf	15,1	;volatile
  2805                           
  2806                           ;OSCCON.c: 29:             OSCCONbits.SCS = 1;
  2807  0483  140F               	bsf	15,0	;volatile
  2808                           
  2809                           ;OSCCON.c: 30:             break;
  2810  0484  2CE3               	goto	l89
  2811  0485                     l83:	
  2812                           ;OSCCON.c: 31:         case 2:
  2813                           
  2814                           
  2815                           ;OSCCON.c: 32:             OSCCONbits.IRCF2 = 1;
  2816  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2817  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2818  0487  170F               	bsf	15,6	;volatile
  2819                           
  2820                           ;OSCCON.c: 33:             OSCCONbits.IRCF1 = 0;
  2821  0488  128F               	bcf	15,5	;volatile
  2822                           
  2823                           ;OSCCON.c: 34:             OSCCONbits.IRCF0 = 1;
  2824  0489  160F               	bsf	15,4	;volatile
  2825                           
  2826                           ;OSCCON.c: 35:             OSCCONbits.OSTS = 0;
  2827  048A  118F               	bcf	15,3	;volatile
  2828                           
  2829                           ;OSCCON.c: 36:             OSCCONbits.HTS = 1;
  2830  048B  150F               	bsf	15,2	;volatile
  2831                           
  2832                           ;OSCCON.c: 37:             OSCCONbits.LTS = 0;
  2833  048C  108F               	bcf	15,1	;volatile
  2834                           
  2835                           ;OSCCON.c: 38:             OSCCONbits.SCS = 1;
  2836  048D  140F               	bsf	15,0	;volatile
  2837                           
  2838                           ;OSCCON.c: 39:             break;
  2839  048E  2CE3               	goto	l89
  2840  048F                     l84:	
  2841                           ;OSCCON.c: 40:         case 3:
  2842                           
  2843                           
  2844                           ;OSCCON.c: 41:             OSCCONbits.IRCF2 = 1;
  2845  048F  1683               	bsf	3,5	;RP0=1, select bank1
  2846  0490  1303               	bcf	3,6	;RP1=0, select bank1
  2847  0491  170F               	bsf	15,6	;volatile
  2848                           
  2849                           ;OSCCON.c: 42:             OSCCONbits.IRCF1 = 0;
  2850  0492  128F               	bcf	15,5	;volatile
  2851                           
  2852                           ;OSCCON.c: 43:             OSCCONbits.IRCF0 = 0;
  2853  0493  120F               	bcf	15,4	;volatile
  2854                           
  2855                           ;OSCCON.c: 44:             OSCCONbits.OSTS = 0;
  2856  0494  118F               	bcf	15,3	;volatile
  2857                           
  2858                           ;OSCCON.c: 45:             OSCCONbits.HTS = 1;
  2859  0495  150F               	bsf	15,2	;volatile
  2860                           
  2861                           ;OSCCON.c: 46:             OSCCONbits.LTS = 0;
  2862  0496  108F               	bcf	15,1	;volatile
  2863                           
  2864                           ;OSCCON.c: 47:             OSCCONbits.SCS = 1;
  2865  0497  140F               	bsf	15,0	;volatile
  2866                           
  2867                           ;OSCCON.c: 48:             break;
  2868  0498  2CE3               	goto	l89
  2869  0499                     l85:	
  2870                           ;OSCCON.c: 49:         case 4:
  2871                           
  2872                           
  2873                           ;OSCCON.c: 50:             OSCCONbits.IRCF2 = 0;
  2874  0499  1683               	bsf	3,5	;RP0=1, select bank1
  2875  049A  1303               	bcf	3,6	;RP1=0, select bank1
  2876  049B  130F               	bcf	15,6	;volatile
  2877                           
  2878                           ;OSCCON.c: 51:             OSCCONbits.IRCF1 = 1;
  2879  049C  168F               	bsf	15,5	;volatile
  2880                           
  2881                           ;OSCCON.c: 52:             OSCCONbits.IRCF0 = 1;
  2882  049D  160F               	bsf	15,4	;volatile
  2883                           
  2884                           ;OSCCON.c: 53:             OSCCONbits.OSTS = 0;
  2885  049E  118F               	bcf	15,3	;volatile
  2886                           
  2887                           ;OSCCON.c: 54:             OSCCONbits.HTS = 1;
  2888  049F  150F               	bsf	15,2	;volatile
  2889                           
  2890                           ;OSCCON.c: 55:             OSCCONbits.LTS = 0;
  2891  04A0  108F               	bcf	15,1	;volatile
  2892                           
  2893                           ;OSCCON.c: 56:             OSCCONbits.SCS = 1;
  2894  04A1  140F               	bsf	15,0	;volatile
  2895                           
  2896                           ;OSCCON.c: 57:             break;
  2897  04A2  2CE3               	goto	l89
  2898  04A3                     l86:	
  2899                           ;OSCCON.c: 58:         case 5:
  2900                           
  2901                           
  2902                           ;OSCCON.c: 59:             OSCCONbits.IRCF2 = 0;
  2903  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  2904  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  2905  04A5  130F               	bcf	15,6	;volatile
  2906                           
  2907                           ;OSCCON.c: 60:             OSCCONbits.IRCF1 = 1;
  2908  04A6  168F               	bsf	15,5	;volatile
  2909                           
  2910                           ;OSCCON.c: 61:             OSCCONbits.IRCF0 = 0;
  2911  04A7  120F               	bcf	15,4	;volatile
  2912                           
  2913                           ;OSCCON.c: 62:             OSCCONbits.OSTS = 0;
  2914  04A8  118F               	bcf	15,3	;volatile
  2915                           
  2916                           ;OSCCON.c: 63:             OSCCONbits.HTS = 1;
  2917  04A9  150F               	bsf	15,2	;volatile
  2918                           
  2919                           ;OSCCON.c: 64:             OSCCONbits.LTS = 0;
  2920  04AA  108F               	bcf	15,1	;volatile
  2921                           
  2922                           ;OSCCON.c: 65:             OSCCONbits.SCS = 1;
  2923  04AB  140F               	bsf	15,0	;volatile
  2924                           
  2925                           ;OSCCON.c: 66:             break;
  2926  04AC  2CE3               	goto	l89
  2927  04AD                     l87:	
  2928                           ;OSCCON.c: 67:         case 6:
  2929                           
  2930                           
  2931                           ;OSCCON.c: 68:             OSCCONbits.IRCF2 = 0;
  2932  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  2933  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  2934  04AF  130F               	bcf	15,6	;volatile
  2935                           
  2936                           ;OSCCON.c: 69:             OSCCONbits.IRCF1 = 0;
  2937  04B0  128F               	bcf	15,5	;volatile
  2938                           
  2939                           ;OSCCON.c: 70:             OSCCONbits.IRCF0 = 1;
  2940  04B1  160F               	bsf	15,4	;volatile
  2941                           
  2942                           ;OSCCON.c: 71:             OSCCONbits.OSTS = 0;
  2943  04B2  118F               	bcf	15,3	;volatile
  2944                           
  2945                           ;OSCCON.c: 72:             OSCCONbits.HTS = 1;
  2946  04B3  150F               	bsf	15,2	;volatile
  2947                           
  2948                           ;OSCCON.c: 73:             OSCCONbits.LTS = 0;
  2949  04B4  108F               	bcf	15,1	;volatile
  2950                           
  2951                           ;OSCCON.c: 74:             OSCCONbits.SCS = 1;
  2952  04B5  140F               	bsf	15,0	;volatile
  2953                           
  2954                           ;OSCCON.c: 75:             break;
  2955  04B6  2CE3               	goto	l89
  2956  04B7                     l88:	
  2957                           ;OSCCON.c: 76:         case 7:
  2958                           
  2959                           
  2960                           ;OSCCON.c: 77:             OSCCONbits.IRCF2 = 0;
  2961  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2962  04B8  1303               	bcf	3,6	;RP1=0, select bank1
  2963  04B9  130F               	bcf	15,6	;volatile
  2964                           
  2965                           ;OSCCON.c: 78:             OSCCONbits.IRCF1 = 0;
  2966  04BA  128F               	bcf	15,5	;volatile
  2967                           
  2968                           ;OSCCON.c: 79:             OSCCONbits.IRCF0 = 0;
  2969  04BB  120F               	bcf	15,4	;volatile
  2970                           
  2971                           ;OSCCON.c: 80:             OSCCONbits.OSTS = 0;
  2972  04BC  118F               	bcf	15,3	;volatile
  2973                           
  2974                           ;OSCCON.c: 81:             OSCCONbits.HTS = 0;
  2975  04BD  110F               	bcf	15,2	;volatile
  2976                           
  2977                           ;OSCCON.c: 82:             OSCCONbits.LTS = 1;
  2978  04BE  148F               	bsf	15,1	;volatile
  2979                           
  2980                           ;OSCCON.c: 83:             OSCCONbits.SCS = 1;
  2981  04BF  140F               	bsf	15,0	;volatile
  2982                           
  2983                           ;OSCCON.c: 84:             break;
  2984  04C0  2CE3               	goto	l89
  2985  04C1                     l1477:	
  2986  04C1  0872               	movf	oscInit@freq,w
  2987  04C2  00F0               	movwf	??_oscInit
  2988  04C3  01F1               	clrf	??_oscInit+1
  2989                           
  2990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2991                           ; Switch size 1, requested type "simple"
  2992                           ; Number of cases is 1, Range of values is 0 to 0
  2993                           ; switch strategies available:
  2994                           ; Name         Instructions Cycles
  2995                           ; simple_byte            4     3 (average)
  2996                           ; direct_byte           11     8 (fixed)
  2997                           ; jumptable            260     6 (fixed)
  2998                           ;	Chosen strategy is simple_byte
  2999  04C4  0871               	movf	??_oscInit+1,w
  3000  04C5  3A00               	xorlw	0	; case 0
  3001  04C6  1903               	skipnz
  3002  04C7  2CC9               	goto	l1815
  3003  04C8  2CE3               	goto	l89
  3004  04C9                     l1815:	
  3005                           
  3006                           ; Switch size 1, requested type "simple"
  3007                           ; Number of cases is 8, Range of values is 0 to 7
  3008                           ; switch strategies available:
  3009                           ; Name         Instructions Cycles
  3010                           ; simple_byte           25    13 (average)
  3011                           ; direct_byte           32     8 (fixed)
  3012                           ; jumptable            260     6 (fixed)
  3013                           ;	Chosen strategy is simple_byte
  3014  04C9  0870               	movf	??_oscInit,w
  3015  04CA  3A00               	xorlw	0	; case 0
  3016  04CB  1903               	skipnz
  3017  04CC  2C71               	goto	l80
  3018  04CD  3A01               	xorlw	1	; case 1
  3019  04CE  1903               	skipnz
  3020  04CF  2C7B               	goto	l82
  3021  04D0  3A03               	xorlw	3	; case 2
  3022  04D1  1903               	skipnz
  3023  04D2  2C85               	goto	l83
  3024  04D3  3A01               	xorlw	1	; case 3
  3025  04D4  1903               	skipnz
  3026  04D5  2C8F               	goto	l84
  3027  04D6  3A07               	xorlw	7	; case 4
  3028  04D7  1903               	skipnz
  3029  04D8  2C99               	goto	l85
  3030  04D9  3A01               	xorlw	1	; case 5
  3031  04DA  1903               	skipnz
  3032  04DB  2CA3               	goto	l86
  3033  04DC  3A03               	xorlw	3	; case 6
  3034  04DD  1903               	skipnz
  3035  04DE  2CAD               	goto	l87
  3036  04DF  3A01               	xorlw	1	; case 7
  3037  04E0  1903               	skipnz
  3038  04E1  2CB7               	goto	l88
  3039  04E2  2CE3               	goto	l89
  3040  04E3                     l89:	
  3041  04E3  0008               	return
  3042  04E4                     __end_of_oscInit:	
  3043                           
  3044                           	psect	text11
  3045  022D                     __ptext11:	
  3046 ;; *************** function _lcd8_setCursor *****************
  3047 ;; Defined at:
  3048 ;;		line 62 in file "LCD.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  fila            1    wreg     unsigned char 
  3051 ;;  columna         1    3[COMMON] unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  fila            1    4[COMMON] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         1       0       0       0       0
  3064 ;;      Locals:         1       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0
  3066 ;;      Totals:         2       0       0       0       0
  3067 ;;Total ram usage:        2 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    2
  3070 ;; This function calls:
  3071 ;;		_lcd8_cmd
  3072 ;; This function is called by:
  3073 ;;		_main
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           
  3078                           ;psect for function _lcd8_setCursor
  3079  022D                     _lcd8_setCursor:	
  3080                           
  3081                           ;incstack = 0
  3082                           ; Regs used in _lcd8_setCursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3083                           ;lcd8_setCursor@fila stored from wreg
  3084  022D  00F4               	movwf	lcd8_setCursor@fila
  3085  022E                     l1643:	
  3086                           
  3087                           ;LCD.c: 63:     if (fila == 1){
  3088  022E  0374               	decf	lcd8_setCursor@fila,w
  3089  022F  1D03               	btfss	3,2
  3090  0230  2A32               	goto	u951
  3091  0231  2A33               	goto	u950
  3092  0232                     u951:	
  3093  0232  2A3B               	goto	l1647
  3094  0233                     u950:	
  3095  0233                     l1645:	
  3096                           
  3097                           ;LCD.c: 64:         lcd8_cmd(0x80 + columna);
  3098  0233  0873               	movf	lcd8_setCursor@columna,w
  3099  0234  3E80               	addlw	128
  3100  0235  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3101                           
  3102                           ;LCD.c: 65:     }
  3103  023A  2A48               	goto	l123
  3104  023B                     l1647:	
  3105  023B  3002               	movlw	2
  3106  023C  0674               	xorwf	lcd8_setCursor@fila,w
  3107  023D  1D03               	btfss	3,2
  3108  023E  2A40               	goto	u961
  3109  023F  2A41               	goto	u960
  3110  0240                     u961:	
  3111  0240  2A48               	goto	l123
  3112  0241                     u960:	
  3113  0241                     l1649:	
  3114                           
  3115                           ;LCD.c: 67:         lcd8_cmd(0xC0 + columna);
  3116  0241  0873               	movf	lcd8_setCursor@columna,w
  3117  0242  3EC0               	addlw	192
  3118  0243  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3119  0248                     l123:	
  3120  0248  0008               	return
  3121  0249                     __end_of_lcd8_setCursor:	
  3122                           
  3123                           	psect	text12
  3124  03B3                     __ptext12:	
  3125 ;; *************** function _lcd8_init *****************
  3126 ;; Defined at:
  3127 ;;		line 18 in file "LCD.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0
  3143 ;;      Temps:          2       0       0       0       0
  3144 ;;      Totals:         2       0       0       0       0
  3145 ;;Total ram usage:        2 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    2
  3148 ;; This function calls:
  3149 ;;		_lcd8_cmd
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _lcd8_init
  3157  03B3                     _lcd8_init:	
  3158  03B3                     l1511:	
  3159                           ;incstack = 0
  3160                           ; Regs used in _lcd8_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3161                           
  3162                           
  3163                           ;LCD.c: 19:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3164  03B3  301A               	movlw	26
  3165  03B4  00F4               	movwf	??_lcd8_init+1
  3166  03B5  30F8               	movlw	248
  3167  03B6  00F3               	movwf	??_lcd8_init
  3168  03B7                     u1117:	
  3169  03B7  0BF3               	decfsz	??_lcd8_init,f
  3170  03B8  2BB7               	goto	u1117
  3171  03B9  0BF4               	decfsz	??_lcd8_init+1,f
  3172  03BA  2BB7               	goto	u1117
  3173  03BB  0000               	nop
  3174  03BC                     l1513:	
  3175                           
  3176                           ;LCD.c: 20:     lcd8_cmd(0x30);
  3177  03BC  3030               	movlw	48
  3178  03BD  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3179  03C2                     l1515:	
  3180                           
  3181                           ;LCD.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3182  03C2  3007               	movlw	7
  3183  03C3  00F4               	movwf	??_lcd8_init+1
  3184  03C4  307D               	movlw	125
  3185  03C5  00F3               	movwf	??_lcd8_init
  3186  03C6                     u1127:	
  3187  03C6  0BF3               	decfsz	??_lcd8_init,f
  3188  03C7  2BC6               	goto	u1127
  3189  03C8  0BF4               	decfsz	??_lcd8_init+1,f
  3190  03C9  2BC6               	goto	u1127
  3191                           
  3192                           ;LCD.c: 22:     lcd8_cmd(0x30);
  3193  03CA  3030               	movlw	48
  3194  03CB  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3195  03D0                     l1517:	
  3196                           
  3197                           ;LCD.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3198  03D0  30C7               	movlw	199
  3199  03D1  00F3               	movwf	??_lcd8_init
  3200  03D2                     u1137:	
  3201  03D2  2BD3               	nop2
  3202  03D3  0BF3               	decfsz	??_lcd8_init,f
  3203  03D4  2BD2               	goto	u1137
  3204  03D5  2BD6               	nop2
  3205  03D6  2BD7               	nop2
  3206  03D7                     l1519:	
  3207                           
  3208                           ;LCD.c: 24:     lcd8_cmd(0x30);
  3209  03D7  3030               	movlw	48
  3210  03D8  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3211                           
  3212                           ;LCD.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3213  03DD  30C7               	movlw	199
  3214  03DE  00F3               	movwf	??_lcd8_init
  3215  03DF                     u1147:	
  3216  03DF  2BE0               	nop2
  3217  03E0  0BF3               	decfsz	??_lcd8_init,f
  3218  03E1  2BDF               	goto	u1147
  3219  03E2  2BE3               	nop2
  3220  03E3  2BE4               	nop2
  3221  03E4                     l1521:	
  3222                           
  3223                           ;LCD.c: 26:     lcd8_cmd(0x38);
  3224  03E4  3038               	movlw	56
  3225  03E5  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3226  03EA                     l1523:	
  3227                           
  3228                           ;LCD.c: 27:     lcd8_cmd(0x10);
  3229  03EA  3010               	movlw	16
  3230  03EB  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3231  03F0                     l1525:	
  3232                           
  3233                           ;LCD.c: 28:     lcd8_cmd(0x01);
  3234  03F0  3001               	movlw	1
  3235  03F1  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3236  03F6                     l1527:	
  3237                           
  3238                           ;LCD.c: 29:     lcd8_cmd(0x06);
  3239  03F6  3006               	movlw	6
  3240  03F7  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3241  03FC                     l1529:	
  3242                           
  3243                           ;LCD.c: 30:     lcd8_cmd(0x0C);
  3244  03FC  300C               	movlw	12
  3245  03FD  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3246  0402                     l1531:	
  3247                           
  3248                           ;LCD.c: 31:     lcd8_cmd(0x80);
  3249  0402  3080               	movlw	128
  3250  0403  120A  118A  21F4  120A  118A  	fcall	_lcd8_cmd
  3251  0408                     l102:	
  3252  0408  0008               	return
  3253  0409                     __end_of_lcd8_init:	
  3254                           
  3255                           	psect	text13
  3256  01F4                     __ptext13:	
  3257 ;; *************** function _lcd8_cmd *****************
  3258 ;; Defined at:
  3259 ;;		line 34 in file "LCD.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  cmd             1    wreg     unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  cmd             1    2[COMMON] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         1       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0
  3276 ;;      Totals:         1       0       0       0       0
  3277 ;;Total ram usage:        1 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    1
  3280 ;; This function calls:
  3281 ;;		_delay_1ms
  3282 ;; This function is called by:
  3283 ;;		_lcd8_init
  3284 ;;		_lcd8_setCursor
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function _lcd8_cmd
  3290  01F4                     _lcd8_cmd:	
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in _lcd8_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3294                           ;lcd8_cmd@cmd stored from wreg
  3295  01F4  00F2               	movwf	lcd8_cmd@cmd
  3296  01F5                     l1339:	
  3297                           
  3298                           ;LCD.c: 35:     PORTA = cmd;
  3299  01F5  0872               	movf	lcd8_cmd@cmd,w
  3300  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3301  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  3302  01F8  0085               	movwf	5	;volatile
  3303  01F9                     l1341:	
  3304                           
  3305                           ;LCD.c: 36:     PORTEbits.RE0 = 0;
  3306  01F9  1009               	bcf	9,0	;volatile
  3307  01FA                     l1343:	
  3308                           
  3309                           ;LCD.c: 37:     PORTEbits.RE1 = 0;
  3310  01FA  1089               	bcf	9,1	;volatile
  3311  01FB                     l1345:	
  3312                           
  3313                           ;LCD.c: 38:     PORTEbits.RE2 = 1;
  3314  01FB  1509               	bsf	9,2	;volatile
  3315  01FC                     l1347:	
  3316                           
  3317                           ;LCD.c: 39:     delay_1ms();
  3318  01FC  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  3319  0201                     l1349:	
  3320                           
  3321                           ;LCD.c: 40:     PORTEbits.RE2 = 0;
  3322  0201  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0202  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0203  1109               	bcf	9,2	;volatile
  3325  0204                     l105:	
  3326  0204  0008               	return
  3327  0205                     __end_of_lcd8_cmd:	
  3328                           
  3329                           	psect	text14
  3330  026E                     __ptext14:	
  3331 ;; *************** function _lcd8_dispString *****************
  3332 ;; Defined at:
  3333 ;;		line 52 in file "LCD.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  value           2    4[COMMON] PTR unsigned char 
  3336 ;;		 -> STR_5(3), main@F(5), STR_3(3), STR_2(3), 
  3337 ;;		 -> main@D(5), 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         2       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0
  3351 ;;      Temps:          2       0       0       0       0
  3352 ;;      Totals:         4       0       0       0       0
  3353 ;;Total ram usage:        4 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    2
  3356 ;; This function calls:
  3357 ;;		_lcd8_write
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _lcd8_dispString
  3365  026E                     _lcd8_dispString:	
  3366  026E                     l1651:	
  3367                           ;incstack = 0
  3368                           ; Regs used in _lcd8_dispString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3369                           
  3370                           
  3371                           ;LCD.c: 53:     while(*value){
  3372  026E  2A89               	goto	l1657
  3373  026F                     l1653:	
  3374                           
  3375                           ;LCD.c: 54:         lcd8_write(*value++);
  3376  026F  0875               	movf	lcd8_dispString@value+1,w
  3377  0270  00FF               	movwf	btemp+1
  3378  0271  0874               	movf	lcd8_dispString@value,w
  3379  0272  0084               	movwf	4
  3380  0273  120A  118A  2003  120A  118A  	fcall	stringtab
  3381  0278  00F6               	movwf	??_lcd8_dispString
  3382  0279  01F7               	clrf	??_lcd8_dispString+1
  3383  027A  0876               	movf	??_lcd8_dispString,w
  3384  027B  00F2               	movwf	lcd8_write@dat
  3385  027C  0877               	movf	??_lcd8_dispString+1,w
  3386  027D  00F3               	movwf	lcd8_write@dat+1
  3387  027E  120A  118A  21E4  120A  118A  	fcall	_lcd8_write
  3388  0283                     l1655:	
  3389  0283  3001               	movlw	1
  3390  0284  07F4               	addwf	lcd8_dispString@value,f
  3391  0285  1803               	skipnc
  3392  0286  0AF5               	incf	lcd8_dispString@value+1,f
  3393  0287  3000               	movlw	0
  3394  0288  07F5               	addwf	lcd8_dispString@value+1,f
  3395  0289                     l1657:	
  3396                           
  3397                           ;LCD.c: 53:     while(*value){
  3398  0289  0875               	movf	lcd8_dispString@value+1,w
  3399  028A  1283               	bcf	3,5	;RP0=0, select bank0
  3400  028B  1303               	bcf	3,6	;RP1=0, select bank0
  3401  028C  00FF               	movwf	btemp+1
  3402  028D  0874               	movf	lcd8_dispString@value,w
  3403  028E  0084               	movwf	4
  3404  028F  120A  118A  2003  120A  118A  	fcall	stringtab
  3405  0294  3A00               	xorlw	0
  3406  0295  1D03               	skipz
  3407  0296  2A98               	goto	u971
  3408  0297  2A99               	goto	u970
  3409  0298                     u971:	
  3410  0298  2A6F               	goto	l1653
  3411  0299                     u970:	
  3412  0299                     l114:	
  3413  0299  0008               	return
  3414  029A                     __end_of_lcd8_dispString:	
  3415                           
  3416                           	psect	text15
  3417  01E4                     __ptext15:	
  3418 ;; *************** function _lcd8_write *****************
  3419 ;; Defined at:
  3420 ;;		line 43 in file "LCD.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;  dat             2    2[COMMON] unsigned int 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;		None
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3434 ;;      Params:         2       0       0       0       0
  3435 ;;      Locals:         0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0
  3437 ;;      Totals:         2       0       0       0       0
  3438 ;;Total ram usage:        2 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    1
  3441 ;; This function calls:
  3442 ;;		_delay_1ms
  3443 ;; This function is called by:
  3444 ;;		_lcd8_dispString
  3445 ;;		_lcd8_dispChar
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _lcd8_write
  3451  01E4                     _lcd8_write:	
  3452  01E4                     l1351:	
  3453                           ;incstack = 0
  3454                           ; Regs used in _lcd8_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3455                           
  3456                           
  3457                           ;LCD.c: 44:     PORTA = dat;
  3458  01E4  0872               	movf	lcd8_write@dat,w
  3459  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3460  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3461  01E7  0085               	movwf	5	;volatile
  3462  01E8                     l1353:	
  3463                           
  3464                           ;LCD.c: 45:     PORTEbits.RE0 = 1;
  3465  01E8  1409               	bsf	9,0	;volatile
  3466  01E9                     l1355:	
  3467                           
  3468                           ;LCD.c: 46:     PORTEbits.RE1 = 0;
  3469  01E9  1089               	bcf	9,1	;volatile
  3470  01EA                     l1357:	
  3471                           
  3472                           ;LCD.c: 47:     PORTEbits.RE2 = 1;
  3473  01EA  1509               	bsf	9,2	;volatile
  3474  01EB                     l1359:	
  3475                           
  3476                           ;LCD.c: 48:     delay_1ms();
  3477  01EB  120A  118A  2217  120A  118A  	fcall	_delay_1ms
  3478  01F0                     l1361:	
  3479                           
  3480                           ;LCD.c: 49:     PORTEbits.RE2 = 0;
  3481  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  3482  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  3483  01F2  1109               	bcf	9,2	;volatile
  3484  01F3                     l108:	
  3485  01F3  0008               	return
  3486  01F4                     __end_of_lcd8_write:	
  3487                           
  3488                           	psect	text16
  3489  0217                     __ptext16:	
  3490 ;; *************** function _delay_1ms *****************
  3491 ;; Defined at:
  3492 ;;		line 71 in file "LCD.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  i               2    0[COMMON] int 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, btemp+1
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       0       0       0       0
  3507 ;;      Locals:         2       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0
  3509 ;;      Totals:         2       0       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_main
  3516 ;;		_lcd8_cmd
  3517 ;;		_lcd8_write
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function _delay_1ms
  3523  0217                     _delay_1ms:	
  3524  0217                     l1329:	
  3525                           ;incstack = 0
  3526                           ; Regs used in _delay_1ms: [wreg+status,2+btemp+1]
  3527                           
  3528                           
  3529                           ;LCD.c: 72:     for (int i = 0; i < 50; i++);
  3530  0217  01F0               	clrf	delay_1ms@i
  3531  0218  01F1               	clrf	delay_1ms@i+1
  3532  0219                     l1335:	
  3533  0219  3001               	movlw	1
  3534  021A  07F0               	addwf	delay_1ms@i,f
  3535  021B  1803               	skipnc
  3536  021C  0AF1               	incf	delay_1ms@i+1,f
  3537  021D  3000               	movlw	0
  3538  021E  07F1               	addwf	delay_1ms@i+1,f
  3539  021F                     l1337:	
  3540  021F  0871               	movf	delay_1ms@i+1,w
  3541  0220  3A80               	xorlw	128
  3542  0221  00FF               	movwf	btemp+1
  3543  0222  3080               	movlw	128
  3544  0223  027F               	subwf	btemp+1,w
  3545  0224  1D03               	skipz
  3546  0225  2A28               	goto	u535
  3547  0226  3032               	movlw	50
  3548  0227  0270               	subwf	delay_1ms@i,w
  3549  0228                     u535:	
  3550  0228  1C03               	skipc
  3551  0229  2A2B               	goto	u531
  3552  022A  2A2C               	goto	u530
  3553  022B                     u531:	
  3554  022B  2A19               	goto	l1335
  3555  022C                     u530:	
  3556  022C                     l128:	
  3557  022C  0008               	return
  3558  022D                     __end_of_delay_1ms:	
  3559                           
  3560                           	psect	text17
  3561  02FD                     __ptext17:	
  3562 ;; *************** function _i2c_master_init *****************
  3563 ;; Defined at:
  3564 ;;		line 12 in file "I2C.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  c               4    0[BANK0 ] unsigned long 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       4       0       0       0
  3579 ;;      Locals:         0       0       0       0       0
  3580 ;;      Temps:          0       4       0       0       0
  3581 ;;      Totals:         0       8       0       0       0
  3582 ;;Total ram usage:        8 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    1
  3585 ;; This function calls:
  3586 ;;		___lldiv
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function _i2c_master_init
  3594  02FD                     _i2c_master_init:	
  3595  02FD                     l1499:	
  3596                           ;incstack = 0
  3597                           ; Regs used in _i2c_master_init: [wreg+status,2+status,0+pclath+cstack]
  3598                           
  3599                           
  3600                           ;I2C.c: 13:     SSPCON = 0b00101000;
  3601  02FD  3028               	movlw	40
  3602  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  3603  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0300  0094               	movwf	20	;volatile
  3605  0301                     l1501:	
  3606                           
  3607                           ;I2C.c: 14:     SSPCON2 = 0;
  3608  0301  1683               	bsf	3,5	;RP0=1, select bank1
  3609  0302  1303               	bcf	3,6	;RP1=0, select bank1
  3610  0303  0191               	clrf	17	;volatile
  3611  0304                     l1503:	
  3612                           
  3613                           ;I2C.c: 15:     SSPADD = (4000000/(4*c))-1;
  3614  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0305  1303               	bcf	3,6	;RP1=0, select bank0
  3616  0306  0820               	movf	i2c_master_init@c,w
  3617  0307  00A4               	movwf	??_i2c_master_init
  3618  0308  0821               	movf	i2c_master_init@c+1,w
  3619  0309  00A5               	movwf	??_i2c_master_init+1
  3620  030A  0822               	movf	i2c_master_init@c+2,w
  3621  030B  00A6               	movwf	??_i2c_master_init+2
  3622  030C  0823               	movf	i2c_master_init@c+3,w
  3623  030D  00A7               	movwf	??_i2c_master_init+3
  3624  030E  3002               	movlw	2
  3625  030F                     u825:	
  3626  030F  1003               	clrc
  3627  0310  0DA4               	rlf	??_i2c_master_init,f
  3628  0311  0DA5               	rlf	??_i2c_master_init+1,f
  3629  0312  0DA6               	rlf	??_i2c_master_init+2,f
  3630  0313  0DA7               	rlf	??_i2c_master_init+3,f
  3631  0314                     u820:	
  3632  0314  3EFF               	addlw	-1
  3633  0315  1D03               	skipz
  3634  0316  2B0F               	goto	u825
  3635  0317  0827               	movf	??_i2c_master_init+3,w
  3636  0318  00F3               	movwf	___lldiv@divisor+3
  3637  0319  0826               	movf	??_i2c_master_init+2,w
  3638  031A  00F2               	movwf	___lldiv@divisor+2
  3639  031B  0825               	movf	??_i2c_master_init+1,w
  3640  031C  00F1               	movwf	___lldiv@divisor+1
  3641  031D  0824               	movf	??_i2c_master_init,w
  3642  031E  00F0               	movwf	___lldiv@divisor
  3643  031F  3000               	movlw	0
  3644  0320  00F7               	movwf	___lldiv@dividend+3
  3645  0321  303D               	movlw	61
  3646  0322  00F6               	movwf	___lldiv@dividend+2
  3647  0323  3009               	movlw	9
  3648  0324  00F5               	movwf	___lldiv@dividend+1
  3649  0325  3000               	movlw	0
  3650  0326  00F4               	movwf	___lldiv@dividend
  3651  0327  120A  118A  2409  120A  118A  	fcall	___lldiv
  3652  032C  0870               	movf	?___lldiv,w
  3653  032D  3EFF               	addlw	255
  3654  032E  1683               	bsf	3,5	;RP0=1, select bank1
  3655  032F  1303               	bcf	3,6	;RP1=0, select bank1
  3656  0330  0093               	movwf	19	;volatile
  3657  0331                     l1505:	
  3658                           
  3659                           ;I2C.c: 16:     SSPSTAT = 0;
  3660  0331  0194               	clrf	20	;volatile
  3661  0332                     l1507:	
  3662                           
  3663                           ;I2C.c: 17:     TRISCbits.TRISC3 = 1;
  3664  0332  1587               	bsf	7,3	;volatile
  3665  0333                     l1509:	
  3666                           
  3667                           ;I2C.c: 18:     TRISCbits.TRISC4 = 1;
  3668  0333  1607               	bsf	7,4	;volatile
  3669  0334                     l174:	
  3670  0334  0008               	return
  3671  0335                     __end_of_i2c_master_init:	
  3672                           
  3673                           	psect	text18
  3674  0409                     __ptext18:	
  3675 ;; *************** function ___lldiv *****************
  3676 ;; Defined at:
  3677 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  divisor         4    0[COMMON] unsigned long 
  3680 ;;  dividend        4    4[COMMON] unsigned long 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  quotient        4    9[COMMON] unsigned long 
  3683 ;;  counter         1   13[COMMON] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  4    0[COMMON] unsigned long 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         8       0       0       0       0
  3694 ;;      Locals:         5       0       0       0       0
  3695 ;;      Temps:          1       0       0       0       0
  3696 ;;      Totals:        14       0       0       0       0
  3697 ;;Total ram usage:       14 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_i2c_master_init
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function ___lldiv
  3708  0409                     ___lldiv:	
  3709  0409                     l1393:	
  3710                           ;incstack = 0
  3711                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3712                           
  3713  0409  3000               	movlw	0
  3714  040A  00FC               	movwf	___lldiv@quotient+3
  3715  040B  3000               	movlw	0
  3716  040C  00FB               	movwf	___lldiv@quotient+2
  3717  040D  3000               	movlw	0
  3718  040E  00FA               	movwf	___lldiv@quotient+1
  3719  040F  3000               	movlw	0
  3720  0410  00F9               	movwf	___lldiv@quotient
  3721  0411  0873               	movf	___lldiv@divisor+3,w
  3722  0412  0472               	iorwf	___lldiv@divisor+2,w
  3723  0413  0471               	iorwf	___lldiv@divisor+1,w
  3724  0414  0470               	iorwf	___lldiv@divisor,w
  3725  0415  1903               	skipnz
  3726  0416  2C18               	goto	u621
  3727  0417  2C19               	goto	u620
  3728  0418                     u621:	
  3729  0418  2C66               	goto	l1413
  3730  0419                     u620:	
  3731  0419                     l1395:	
  3732  0419  01FD               	clrf	___lldiv@counter
  3733  041A  0AFD               	incf	___lldiv@counter,f
  3734  041B  2C29               	goto	l1399
  3735  041C                     l1397:	
  3736  041C  3001               	movlw	1
  3737  041D  00F8               	movwf	??___lldiv
  3738  041E                     u635:	
  3739  041E  1003               	clrc
  3740  041F  0DF0               	rlf	___lldiv@divisor,f
  3741  0420  0DF1               	rlf	___lldiv@divisor+1,f
  3742  0421  0DF2               	rlf	___lldiv@divisor+2,f
  3743  0422  0DF3               	rlf	___lldiv@divisor+3,f
  3744  0423  0BF8               	decfsz	??___lldiv,f
  3745  0424  2C1E               	goto	u635
  3746  0425  3001               	movlw	1
  3747  0426  00F8               	movwf	??___lldiv
  3748  0427  0878               	movf	??___lldiv,w
  3749  0428  07FD               	addwf	___lldiv@counter,f
  3750  0429                     l1399:	
  3751  0429  1FF3               	btfss	___lldiv@divisor+3,7
  3752  042A  2C2C               	goto	u641
  3753  042B  2C2D               	goto	u640
  3754  042C                     u641:	
  3755  042C  2C1C               	goto	l1397
  3756  042D                     u640:	
  3757  042D                     l1401:	
  3758  042D  3001               	movlw	1
  3759  042E  00F8               	movwf	??___lldiv
  3760  042F                     u655:	
  3761  042F  1003               	clrc
  3762  0430  0DF9               	rlf	___lldiv@quotient,f
  3763  0431  0DFA               	rlf	___lldiv@quotient+1,f
  3764  0432  0DFB               	rlf	___lldiv@quotient+2,f
  3765  0433  0DFC               	rlf	___lldiv@quotient+3,f
  3766  0434  0BF8               	decfsz	??___lldiv,f
  3767  0435  2C2F               	goto	u655
  3768  0436                     l1403:	
  3769  0436  0873               	movf	___lldiv@divisor+3,w
  3770  0437  0277               	subwf	___lldiv@dividend+3,w
  3771  0438  1D03               	skipz
  3772  0439  2C44               	goto	u665
  3773  043A  0872               	movf	___lldiv@divisor+2,w
  3774  043B  0276               	subwf	___lldiv@dividend+2,w
  3775  043C  1D03               	skipz
  3776  043D  2C44               	goto	u665
  3777  043E  0871               	movf	___lldiv@divisor+1,w
  3778  043F  0275               	subwf	___lldiv@dividend+1,w
  3779  0440  1D03               	skipz
  3780  0441  2C44               	goto	u665
  3781  0442  0870               	movf	___lldiv@divisor,w
  3782  0443  0274               	subwf	___lldiv@dividend,w
  3783  0444                     u665:	
  3784  0444  1C03               	skipc
  3785  0445  2C47               	goto	u661
  3786  0446  2C48               	goto	u660
  3787  0447                     u661:	
  3788  0447  2C57               	goto	l1409
  3789  0448                     u660:	
  3790  0448                     l1405:	
  3791  0448  0870               	movf	___lldiv@divisor,w
  3792  0449  02F4               	subwf	___lldiv@dividend,f
  3793  044A  0871               	movf	___lldiv@divisor+1,w
  3794  044B  1C03               	skipc
  3795  044C  0F71               	incfsz	___lldiv@divisor+1,w
  3796  044D  02F5               	subwf	___lldiv@dividend+1,f
  3797  044E  0872               	movf	___lldiv@divisor+2,w
  3798  044F  1C03               	skipc
  3799  0450  0F72               	incfsz	___lldiv@divisor+2,w
  3800  0451  02F6               	subwf	___lldiv@dividend+2,f
  3801  0452  0873               	movf	___lldiv@divisor+3,w
  3802  0453  1C03               	skipc
  3803  0454  0F73               	incfsz	___lldiv@divisor+3,w
  3804  0455  02F7               	subwf	___lldiv@dividend+3,f
  3805  0456                     l1407:	
  3806  0456  1479               	bsf	___lldiv@quotient,0
  3807  0457                     l1409:	
  3808  0457  3001               	movlw	1
  3809  0458                     u675:	
  3810  0458  1003               	clrc
  3811  0459  0CF3               	rrf	___lldiv@divisor+3,f
  3812  045A  0CF2               	rrf	___lldiv@divisor+2,f
  3813  045B  0CF1               	rrf	___lldiv@divisor+1,f
  3814  045C  0CF0               	rrf	___lldiv@divisor,f
  3815  045D  3EFF               	addlw	-1
  3816  045E  1D03               	skipz
  3817  045F  2C58               	goto	u675
  3818  0460                     l1411:	
  3819  0460  3001               	movlw	1
  3820  0461  02FD               	subwf	___lldiv@counter,f
  3821  0462  1D03               	btfss	3,2
  3822  0463  2C65               	goto	u681
  3823  0464  2C66               	goto	u680
  3824  0465                     u681:	
  3825  0465  2C2D               	goto	l1401
  3826  0466                     u680:	
  3827  0466                     l1413:	
  3828  0466  087C               	movf	___lldiv@quotient+3,w
  3829  0467  00F3               	movwf	?___lldiv+3
  3830  0468  087B               	movf	___lldiv@quotient+2,w
  3831  0469  00F2               	movwf	?___lldiv+2
  3832  046A  087A               	movf	___lldiv@quotient+1,w
  3833  046B  00F1               	movwf	?___lldiv+1
  3834  046C  0879               	movf	___lldiv@quotient,w
  3835  046D  00F0               	movwf	?___lldiv
  3836  046E                     l358:	
  3837  046E  0008               	return
  3838  046F                     __end_of___lldiv:	
  3839                           
  3840                           	psect	text19
  3841  01B5                     __ptext19:	
  3842 ;; *************** function _i2c_masterWrite *****************
  3843 ;; Defined at:
  3844 ;;		line 40 in file "I2C.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  data            2    0[COMMON] unsigned int 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0, pclath, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3858 ;;      Params:         2       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0
  3861 ;;      Totals:         2       0       0       0       0
  3862 ;;Total ram usage:        2 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    1
  3865 ;; This function calls:
  3866 ;;		_i2c_masterWait
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           
  3873                           ;psect for function _i2c_masterWrite
  3874  01B5                     _i2c_masterWrite:	
  3875  01B5                     l1537:	
  3876                           ;incstack = 0
  3877                           ; Regs used in _i2c_masterWrite: [wreg+status,2+status,0+pclath+cstack]
  3878                           
  3879                           
  3880                           ;I2C.c: 41:     i2c_masterWait();
  3881  01B5  120A  118A  21D7  120A  118A  	fcall	_i2c_masterWait
  3882  01BA                     l1539:	
  3883                           
  3884                           ;I2C.c: 42:     SSPBUF = data;
  3885  01BA  0870               	movf	i2c_masterWrite@data,w
  3886  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  3887  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  3888  01BD  0093               	movwf	19	;volatile
  3889  01BE                     l192:	
  3890  01BE  0008               	return
  3891  01BF                     __end_of_i2c_masterWrite:	
  3892                           
  3893                           	psect	text20
  3894  01AC                     __ptext20:	
  3895 ;; *************** function _i2c_masterStop *****************
  3896 ;; Defined at:
  3897 ;;		line 35 in file "I2C.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;		None
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3911 ;;      Params:         0       0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0
  3913 ;;      Temps:          0       0       0       0       0
  3914 ;;      Totals:         0       0       0       0       0
  3915 ;;Total ram usage:        0 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    1
  3918 ;; This function calls:
  3919 ;;		_i2c_masterWait
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _i2c_masterStop
  3927  01AC                     _i2c_masterStop:	
  3928  01AC                     l1561:	
  3929                           ;incstack = 0
  3930                           ; Regs used in _i2c_masterStop: [wreg+status,2+status,0+pclath+cstack]
  3931                           
  3932                           
  3933                           ;I2C.c: 36:     i2c_masterWait();
  3934  01AC  120A  118A  21D7  120A  118A  	fcall	_i2c_masterWait
  3935  01B1                     l1563:	
  3936                           
  3937                           ;I2C.c: 37:     SSPCON2bits.PEN = 1;
  3938  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  3939  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  3940  01B3  1511               	bsf	17,2	;volatile
  3941  01B4                     l189:	
  3942  01B4  0008               	return
  3943  01B5                     __end_of_i2c_masterStop:	
  3944                           
  3945                           	psect	text21
  3946  01A3                     __ptext21:	
  3947 ;; *************** function _i2c_masterStart *****************
  3948 ;; Defined at:
  3949 ;;		line 25 in file "I2C.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0, pclath, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0
  3966 ;;      Totals:         0       0       0       0       0
  3967 ;;Total ram usage:        0 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    1
  3970 ;; This function calls:
  3971 ;;		_i2c_masterWait
  3972 ;; This function is called by:
  3973 ;;		_main
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function _i2c_masterStart
  3979  01A3                     _i2c_masterStart:	
  3980  01A3                     l1533:	
  3981                           ;incstack = 0
  3982                           ; Regs used in _i2c_masterStart: [wreg+status,2+status,0+pclath+cstack]
  3983                           
  3984                           
  3985                           ;I2C.c: 26:     i2c_masterWait();
  3986  01A3  120A  118A  21D7  120A  118A  	fcall	_i2c_masterWait
  3987  01A8                     l1535:	
  3988                           
  3989                           ;I2C.c: 27:     SSPCON2bits.SEN = 1;
  3990  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  3991  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  3992  01AA  1411               	bsf	17,0	;volatile
  3993  01AB                     l183:	
  3994  01AB  0008               	return
  3995  01AC                     __end_of_i2c_masterStart:	
  3996                           
  3997                           	psect	text22
  3998  02C7                     __ptext22:	
  3999 ;; *************** function _i2c_masterRead *****************
  4000 ;; Defined at:
  4001 ;;		line 45 in file "I2C.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  a               2    0[COMMON] unsigned short 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  temp            2    4[COMMON] unsigned short 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  2    0[COMMON] unsigned short 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         2       0       0       0       0
  4016 ;;      Locals:         2       0       0       0       0
  4017 ;;      Temps:          2       0       0       0       0
  4018 ;;      Totals:         6       0       0       0       0
  4019 ;;Total ram usage:        6 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    1
  4022 ;; This function calls:
  4023 ;;		_i2c_masterWait
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           
  4030                           ;psect for function _i2c_masterRead
  4031  02C7                     _i2c_masterRead:	
  4032  02C7                     l1541:	
  4033                           ;incstack = 0
  4034                           ; Regs used in _i2c_masterRead: [wreg+status,2+status,0+pclath+cstack]
  4035                           
  4036                           
  4037                           ;I2C.c: 46:     unsigned short temp;;I2C.c: 47:     i2c_masterWait();
  4038  02C7  120A  118A  21D7  120A  118A  	fcall	_i2c_masterWait
  4039  02CC                     l1543:	
  4040                           
  4041                           ;I2C.c: 48:     SSPCON2bits.RCEN = 1;
  4042  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  4043  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  4044  02CE  1591               	bsf	17,3	;volatile
  4045                           
  4046                           ;I2C.c: 49:     i2c_masterWait();
  4047  02CF  120A  118A  21D7  120A  118A  	fcall	_i2c_masterWait
  4048  02D4                     l1545:	
  4049                           
  4050                           ;I2C.c: 50:     temp = SSPBUF;
  4051  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  4052  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  4053  02D6  0813               	movf	19,w	;volatile
  4054  02D7  00F2               	movwf	??_i2c_masterRead
  4055  02D8  01F3               	clrf	??_i2c_masterRead+1
  4056  02D9  0872               	movf	??_i2c_masterRead,w
  4057  02DA  00F4               	movwf	i2c_masterRead@temp
  4058  02DB  0873               	movf	??_i2c_masterRead+1,w
  4059  02DC  00F5               	movwf	i2c_masterRead@temp+1
  4060  02DD                     l1547:	
  4061                           
  4062                           ;I2C.c: 51:     i2c_masterWait();
  4063  02DD  120A  118A  21D7  120A  118A  	fcall	_i2c_masterWait
  4064  02E2                     l1549:	
  4065                           
  4066                           ;I2C.c: 52:     if (a == 0){
  4067  02E2  0870               	movf	i2c_masterRead@a,w
  4068  02E3  0471               	iorwf	i2c_masterRead@a+1,w
  4069  02E4  1D03               	btfss	3,2
  4070  02E5  2AE7               	goto	u831
  4071  02E6  2AE8               	goto	u830
  4072  02E7                     u831:	
  4073  02E7  2AEC               	goto	l1553
  4074  02E8                     u830:	
  4075  02E8                     l1551:	
  4076                           
  4077                           ;I2C.c: 53:         SSPCON2bits.ACKDT = 1;
  4078  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  4079  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  4080  02EA  1691               	bsf	17,5	;volatile
  4081                           
  4082                           ;I2C.c: 54:     }
  4083  02EB  2AF5               	goto	l196
  4084  02EC                     l1553:	
  4085  02EC  0370               	decf	i2c_masterRead@a,w
  4086  02ED  0471               	iorwf	i2c_masterRead@a+1,w
  4087  02EE  1D03               	btfss	3,2
  4088  02EF  2AF1               	goto	u841
  4089  02F0  2AF2               	goto	u840
  4090  02F1                     u841:	
  4091  02F1  2AF5               	goto	l196
  4092  02F2                     u840:	
  4093  02F2                     l1555:	
  4094                           
  4095                           ;I2C.c: 56:         SSPCON2bits.ACKDT = 0;
  4096  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  4097  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  4098  02F4  1291               	bcf	17,5	;volatile
  4099  02F5                     l196:	
  4100                           
  4101                           ;I2C.c: 58:     ACKEN = 1;
  4102  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  4103  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  4104  02F7  1611               	bsf	17,4	;volatile
  4105  02F8                     l1557:	
  4106                           
  4107                           ;I2C.c: 59:     return temp;
  4108  02F8  0875               	movf	i2c_masterRead@temp+1,w
  4109  02F9  00F1               	movwf	?_i2c_masterRead+1
  4110  02FA  0874               	movf	i2c_masterRead@temp,w
  4111  02FB  00F0               	movwf	?_i2c_masterRead
  4112  02FC                     l198:	
  4113  02FC  0008               	return
  4114  02FD                     __end_of_i2c_masterRead:	
  4115                           
  4116                           	psect	text23
  4117  01D7                     __ptext23:	
  4118 ;; *************** function _i2c_masterWait *****************
  4119 ;; Defined at:
  4120 ;;		line 21 in file "I2C.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4134 ;;      Params:         0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0
  4137 ;;      Totals:         0       0       0       0       0
  4138 ;;Total ram usage:        0 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_i2c_masterStart
  4144 ;;		_i2c_masterStop
  4145 ;;		_i2c_masterWrite
  4146 ;;		_i2c_masterRead
  4147 ;;		_i2c_master_RStart
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           
  4152                           ;psect for function _i2c_masterWait
  4153  01D7                     _i2c_masterWait:	
  4154  01D7                     l1363:	
  4155                           ;incstack = 0
  4156                           ; Regs used in _i2c_masterWait: [wreg+status,2]
  4157                           
  4158  01D7                     l177:	
  4159                           ;I2C.c: 22:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4160                           
  4161  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  4162  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  4163  01D9  1914               	btfsc	20,2	;volatile
  4164  01DA  29DC               	goto	u541
  4165  01DB  29DD               	goto	u540
  4166  01DC                     u541:	
  4167  01DC  29D7               	goto	l177
  4168  01DD                     u540:	
  4169  01DD                     l1365:	
  4170  01DD  0811               	movf	17,w	;volatile
  4171  01DE  391F               	andlw	31
  4172  01DF  1D03               	btfss	3,2
  4173  01E0  29E2               	goto	u551
  4174  01E1  29E3               	goto	u550
  4175  01E2                     u551:	
  4176  01E2  29D7               	goto	l177
  4177  01E3                     u550:	
  4178  01E3                     l180:	
  4179  01E3  0008               	return
  4180  01E4                     __end_of_i2c_masterWait:	
  4181  007E                     btemp	set	126	;btemp
  4182  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> main@F(BANK0[5]), main@D(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd8_dispString@value	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[3]), main@F(BANK0[5]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> main@D(BANK0[5]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd8_setCursor->_lcd8_cmd
    _lcd8_init->_lcd8_cmd
    _lcd8_cmd->_delay_1ms
    _lcd8_dispString->_lcd8_write
    _lcd8_write->_delay_1ms
    _i2c_master_init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    4516
                                             15 BANK0     13    13      0
                            ___lwdiv
                          _delay_1ms
                     _i2c_masterRead
                    _i2c_masterStart
                     _i2c_masterStop
                    _i2c_masterWrite
                    _i2c_master_init
                    _lcd8_dispString
                          _lcd8_init
                     _lcd8_setCursor
                            _oscInit
                              _setup
                            _sprintf
                          _tmr1_Init
                     _tmr1_Interrupt
                     _tmr1_Prescaler
 ---------------------------------------------------------------------------------
 (1) _tmr1_Prescaler                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _tmr1_Interrupt                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _tmr1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    1922
                                              0 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscInit                                              3     3      0      28
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd8_setCursor                                       2     1      1     536
                                              3 COMMON     2     1      1
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd8_init                                            2     2      0      68
                                              3 COMMON     2     2      0
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd8_cmd                                             1     1      0      68
                                              2 COMMON     1     1      0
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (1) _lcd8_dispString                                      4     2      2     645
                                              4 COMMON     4     2      2
                         _lcd8_write
 ---------------------------------------------------------------------------------
 (2) _lcd8_write                                           2     0      2     220
                                              2 COMMON     2     0      2
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (3) _delay_1ms                                            2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _i2c_masterWrite                                      2     0      2      98
                                              0 COMMON     2     0      2
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (1) _i2c_masterStop                                       0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (1) _i2c_masterStart                                      0     0      0       0
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (1) _i2c_masterRead                                       6     4      2     143
                                              0 COMMON     6     4      2
                     _i2c_masterWait
 ---------------------------------------------------------------------------------
 (2) _i2c_masterWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   _delay_1ms
   _i2c_masterRead
     _i2c_masterWait
   _i2c_masterStart
     _i2c_masterWait
   _i2c_masterStop
     _i2c_masterWait
   _i2c_masterWrite
     _i2c_masterWait
   _i2c_master_init
     ___lldiv
   _lcd8_dispString
     _lcd8_write
       _delay_1ms
   _lcd8_init
     _lcd8_cmd
       _delay_1ms
   _lcd8_setCursor
     _lcd8_cmd
       _delay_1ms
   _oscInit
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _tmr1_Init
   _tmr1_Interrupt
   _tmr1_Prescaler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 09 17:15:43 2020

                       pc 0002               __CFG_CP$OFF 0000                        l60 06A5  
                      l62 06A9                        l63 06AA                        l80 0471  
                      l65 06AE                        l82 047B                        l74 01CA  
                      l66 0701                        l83 0485                        l67 0737  
                      l84 048F                        l85 0499                        l86 04A3  
                      l87 04AD                        l88 04B7                        l89 04E3  
                      fsr 0004       ___wmul@multiplicand 0072                       l102 0408  
                     l105 0204                       l114 0299                       l123 0248  
                     l108 01F3                       l141 029C                       l143 02A1  
                     l128 022C                       l144 02A6                       l137 01A2  
                     l145 02AB                       l322 0255                       l146 02C6  
                     l180 01E3                       l324 026D                       l149 01D6  
                     l174 0334                       l318 063C                       l183 01AB  
                     l192 01BE                       l177 01D7                       l196 02F5  
                     l604 036E                       l189 01B4                       l198 02FC  
                     l358 046E                       l594 03B2                       l769 0216  
                     u530 022C                       u610 0269              __CFG_CPD$OFF 0000  
                     u531 022B                       u611 0268                       u540 01DD  
                     u620 0419                       u541 01DC                       u621 0418  
                     u605 025D                       u550 01E3                       u710 0389  
                     u551 01E2                       u535 0228                       u711 0388  
                     u640 042D                       u560 020D                       u641 042C  
                     u705 037B                       u561 020C                       u730 039A  
                     u810 036A                       u570 0213                       u635 041E  
                     u731 0399                       u811 0369                       u571 0212  
                     u660 0448                       u820 0314                       u580 024F  
                     u900 05B2                       u661 0447                       u725 038A  
                     u805 035E                       u581 024E                       u901 05B1  
                     u830 02E8                       u750 03AE                       u910 05C8  
                     u831 02E7                       u655 042F                       u751 03AD  
                     u735 0396                       u911 05C7                       u840 02F2  
                     u680 0466                       u760 033B                       u920 05DF  
                     u841 02F1                       u681 0465                       u665 0444  
                     u825 030F                       u745 03A2                       u761 033A  
                     u921 05DE                       u905 05AE                       u690 0377  
                     u930 0626                       u850 04F2                       u675 0458  
                     u691 0376                       u595 0256                       u931 0625  
                     u851 04F1                       u780 034D                       u940 0638  
                     u860 0511                       u781 034C                       u941 0637  
                     u861 0510                       u950 0233                       u790 0357  
                     u870 0551                       u951 0232                       u791 0356  
                     u775 033F                       u871 0550                       u960 0241  
                     u880 059C                       u961 0240                       u881 059B  
                     u970 0299                       u890 05A7                       u971 0298  
                     u795 0353                       u891 05A6                       u980 06A9  
                     u885 0598                       u981 06A8                       u990 06AE  
                     u991 06AD                       fsr0 0004                       indf 0000  
            __CFG_LVP$OFF 0000                      l1401 042D                      l1411 0460  
                    l1403 0436                      l1405 0448                      l1413 0466  
                    l1501 0301                      l1341 01F9                      l1421 0377  
                    l1407 0456                      l1503 0304                      l1335 0219  
                    l1351 01E4                      l1343 01FA                      l1511 03B3  
                    l1431 039A                      l1423 037A                      l1409 0457  
                    l1505 0331                      l1337 021F                      l1329 0217  
                    l1361 01F0                      l1353 01E8                      l1345 01FB  
                    l1521 03E4                      l1513 03BC                      l1433 03A0  
                    l1425 0381                      l1417 036F                      l1363 01D7  
                    l1507 0332                      l1355 01E9                      l1347 01FC  
                    l1339 01F5                      l1531 0402                      l1523 03EA  
                    l1515 03C2                      l1435 03A1                      l1427 0385  
                    l1419 0371                      l1451 0349                      l1443 0335  
                    l1371 020D                      l1611 05B2                      l1603 0581  
                    l1365 01DD                      l1541 02C7                      l1533 01A3  
                    l1509 0333                      l1357 01EA                      l1349 0201  
                    l1525 03F0                      l1517 03D0                      l1437 03A8  
                    l1429 0389                      l1453 034D                      l1445 033B  
                    l1461 036A                      l1381 024B                      l1373 0213  
                    l1621 05D3                      l1613 05BE                      l1701 06E0  
                    l1551 02E8                      l1543 02CC                      l1535 01A8  
                    l1359 01EB                      l1527 03F6                      l1519 03D7  
                    l1471 01C4                      l1439 03AE                      l1455 0357  
                    l1447 033E                      l1383 024F                      l1375 0215  
                    l1367 0206                      l1631 061D                      l1623 05DF  
                    l1615 05C2                      l1607 059D                      l1711 0716  
                    l1703 06E1                      l1553 02EC                      l1545 02D4  
                    l1561 01AC                      l1537 01B5                      l1393 0409  
                    l1529 03FC                      l1473 0470                      l1465 01BF  
                    l1457 035D                      l1449 0345                      l1385 025C  
                    l1369 0207                      l1625 05E4                      l1617 05C8  
                    l1609 05A7                      l1633 0626                      l1721 0758  
                    l1713 0725                      l1705 06F0                      l1555 02F2  
                    l1547 02DD                      l1563 01B1                      l1539 01BA  
                    l1395 0419                      l1651 026E                      l1643 022E  
                    l1467 01C2                      l1459 0364                      l1387 0263  
                    l1379 0249                      l1627 0612                      l1619 05CF  
                    l1635 0638                      l1571 04F9                      l1483 019D  
                    l1811 02B8                      l1731 079B                      l1723 0766  
                    l1715 0742                      l1707 070C                      l1557 02F8  
                    l1549 02E2                      l1397 041C                      l1653 026F  
                    l1645 0233                      l1477 04C1                      l1469 01C3  
                    l1389 0269                      l1629 0619                      l1813 056B  
                    l1581 052A                      l1573 04FE                      l1565 04E7  
                    l1485 029B                      l1741 07DF                      l1733 07A4  
                    l1725 076B                      l1717 0743                      l1709 0715  
                    l1661 0642                      l1399 0429                      l1655 0283  
                    l1647 023B                      l1815 04C9                      l1583 053D  
                    l1591 0557                      l1575 0501                      l1567 04EC  
                    l1495 01CC                      l1743 07ED                      l1735 07C5  
                    l1727 0777                      l1719 0751                      l1671 066D  
                    l1663 0648                      l1657 0289                      l1649 0241  
                    l1593 0573                      l1585 0541                      l1577 0511  
                    l1569 04F2                      l1497 01D3                      l1489 02B0  
                    l1737 07CE                      l1729 077C                      l1681 0696  
                    l1673 0672                      l1665 0653                      l1499 02FD  
                    l1595 057B                      l1587 0552                      l1579 0515  
                    l1739 07D3                      l1691 06AF                      l1683 0699  
                    l1675 067B                      l1667 0659                      l1659 063D  
                    l1597 057F                      l1693 06B3                      l1685 069A  
                    l1677 0689                      l1669 0668                      l1695 06C6  
                    l1687 069B                      l1679 068E                      l1697 06CE  
                    l1689 06A2                      l1699 06D7                      STR_1 001D  
                    STR_2 0021                      STR_3 0027                      STR_4 001D  
                    STR_5 0024                      u1000 06D7                      u1001 06D6  
                    u1010 06E0                      u1011 06DF                      u1020 070C  
                    u1021 070B                      u1030 0715                      u1031 0714  
                    u1040 0742                      u1041 0741                      u1107 0730  
                    u1117 03B7                      u1127 03C6                      u1137 03D2  
                    u1057 0692                      u1147 03DF                      u1067 069F  
                    u1077 06E9                      u1087 06FB                      u1097 071E  
            __CFG_WRT$OFF 0000                      _main 063D                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000      lcd8_dispString@value 0074  
                   ?_main 0070                     _ACKEN 048C             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188           __end_of___lldiv 046F           __end_of___lwdiv 03B3  
          _tmr1_Interrupt 01CB           __end_of___lwmod 036F                     _TMR1H 000F  
                   _TMR1L 000E                     _PORTA 0005                     _TRISA 0085  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000            _i2c_masterRead 02C7  
          _i2c_masterWait 01D7            _i2c_masterStop 01AC           __end_of_dpowers 001D  
         __end_of_isdigit 0217                     _setup 01BF                     main@D 0032  
                   main@F 0037           __end_of_oscInit 04E4            _tmr1_Prescaler 029A  
          __CFG_BOREN$OFF 0000                     pclath 000A            _lcd8_setCursor 022D  
                   status 0003                     wtemp0 007E           __end_of_sprintf 063D  
          __CFG_MCLRE$OFF 0000           __initialization 07F6              __end_of_main 07F6  
         _lcd8_dispString 026E    __end_of_tmr1_Interrupt 01D7                    ??_main 002F  
  __end_of_i2c_masterRead 02FD    __end_of_i2c_masterWait 01E4    __end_of_i2c_masterStop 01B5  
  __end_of_tmr1_Prescaler 02C7    __end_of_lcd8_setCursor 0249                    ?_setup 0070  
                  _ANSELH 0189                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of_lcd8_cmd 0205            __CFG_PWRTE$OFF 0000  
         _i2c_masterStart 01A3                    ___wmul 0249           _i2c_masterWrite 01B5  
         _i2c_master_init 02FD                 ??___lldiv 0078                 ??___lwdiv 0074  
               ??___lwmod 007C                    _fuerza 003C           ?_tmr1_Interrupt 0070  
               ??_isdigit 0070           ?_i2c_masterRead 0070           ?_i2c_masterWait 0070  
         ?_i2c_masterStop 0070                 ??_oscInit 0070           ?_tmr1_Prescaler 0070  
               ??_sprintf 0023           ?_lcd8_setCursor 0073   __end_of__initialization 07FC  
 __end_of_lcd8_dispString 029A            __pcstackCOMMON 0070        __size_of_lcd8_init 0056  
           __end_of_setup 01CB        __size_of_delay_1ms 0016               oscInit@freq 0072  
            sprintf@width 002B                   ??_setup 0070                __pbssBANK0 003C  
 __end_of_i2c_masterStart 01AC                _lcd8_write 01E4   __end_of_i2c_masterWrite 01BF  
 __end_of_i2c_master_init 0335        lcd8_setCursor@fila 0074                __pmaintext 063D  
                 ?___wmul 0070        __size_of_tmr1_Init 0006    tmr1_Interrupt@tmr1_Int 0070  
               ?_lcd8_cmd 0070                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 0003         __end_of_lcd8_init 0409         __end_of_delay_1ms 022D  
        ?_lcd8_dispString 0074                   ___lldiv 0409           __size_of___wmul 0025  
                 ___lwdiv 036F                   ___lwmod 0335                   __ptext1 029A  
                 __ptext2 01CB                   __ptext3 019D                   __ptext4 04E4  
                 __ptext5 0205                   __ptext6 0249                   __ptext7 0335  
                 __ptext8 036F                   __ptext9 01BF                 _T1CONbits 0010  
                 _dpowers 0013                   _isdigit 0205                delay_1ms@i 0070  
              ??_lcd8_cmd 0072                   _oscInit 046F             lcd8_write@dat 0072  
                 _sprintf 04E4         __end_of_tmr1_Init 01A3      end_of_initialization 07FC  
             ?_lcd8_write 0072          ?_i2c_masterStart 0070          ?_i2c_masterWrite 0070  
        ?_i2c_master_init 0020           ___lldiv@divisor 0070           ___lldiv@counter 007D  
        ??_tmr1_Interrupt 0070          ??_i2c_masterRead 0072          ??_i2c_masterWait 0070  
        ??_i2c_masterStop 0070           i2c_masterRead@a 0070                 _PORTBbits 0006  
               _PORTEbits 0009          ??_tmr1_Prescaler 0070          ??_lcd8_setCursor 0074  
               _TRISBbits 0086                 _TRISCbits 0087            __end_of___wmul 026E  
     __size_of_lcd8_write 0010       start_initialization 07F6  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??___wmul 0074                 ___latbits 0002             __pcstackBANK0 0020  
       __size_of_lcd8_cmd 0011               sprintf@flag 0026               sprintf@prec 002A  
               _lcd8_init 03B3     lcd8_setCursor@columna 0073                 _delay_1ms 0217  
        ___lwdiv@dividend 0072                  ?___lldiv 0070   tmr1_Prescaler@prescaler 0072  
                ?___lwdiv 0070                  ?___lwmod 0078                 __pstrings 0003  
               _distancia 003E                  ?_isdigit 0070                  ?_oscInit 0070  
        ___lwdiv@quotient 0075                  ?_sprintf 0020            __size_of_setup 000C  
          ___wmul@product 0074                 _tmr1_Init 019D              ??_lcd8_write 0074  
                _PIE1bits 008C                ?_lcd8_init 0070                ?_delay_1ms 0070  
                _PIR1bits 000C               __stringbase 0012  __size_of_lcd8_dispString 002C  
       ___wmul@multiplier 0070        __end_of_lcd8_write 01F4                ?_tmr1_Init 0070  
__size_of_i2c_masterStart 0009  __size_of_i2c_masterWrite 000A  __size_of_i2c_master_init 0038  
        __size_of___lldiv 0066          __size_of___lwdiv 0044          __size_of___lwmod 003A  
      __end_of__stringtab 0013               _isdigit$982 0070                sprintf@val 0028  
             lcd8_cmd@cmd 0072                  _lcd8_cmd 01F4          __size_of_isdigit 0012  
         ___lwdiv@divisor 0070          __size_of_oscInit 0075           ___lwdiv@counter 0077  
                __ptext10 046F                  __ptext11 022D                  __ptext20 01AC  
                __ptext12 03B3                  __ptext21 01A3                  __ptext13 01F4  
                __ptext22 02C7                  __ptext14 026E                  __ptext23 01D7  
                __ptext15 01E4                  __ptext16 0217                  __ptext17 02FD  
                __ptext18 0409                  __ptext19 01B5         __CFG_BOR4V$BOR40V 0000  
        __size_of_sprintf 0159             __size_of_main 01B9               ??_lcd8_init 0073  
             ??_delay_1ms 0070        i2c_masterRead@temp 0074       i2c_masterWrite@data 0070  
 __size_of_tmr1_Interrupt 000C                _INTCONbits 000B                  isdigit@c 0071  
 __size_of_i2c_masterRead 0036         ??_lcd8_dispString 0076   __size_of_i2c_masterWait 000D  
 __size_of_i2c_masterStop 0009                 sprintf@ap 0027                 sprintf@sp 002D  
 __size_of_tmr1_Prescaler 002D   __size_of_lcd8_setCursor 001C          ___lwmod@dividend 007A  
        ___lldiv@dividend 0074               ??_tmr1_Init 0070                 stringcode 000D  
              _OSCCONbits 008F                  sprintf@c 002E                  sprintf@f 0020  
        ___lldiv@quotient 0079           ___lwmod@divisor 0078         ??_i2c_masterStart 0070  
       ??_i2c_masterWrite 0072           ___lwmod@counter 007D         ??_i2c_master_init 0024  
                stringdir 000D                  stringtab 0003               _SSPCON2bits 0091  
        i2c_master_init@c 0020  
