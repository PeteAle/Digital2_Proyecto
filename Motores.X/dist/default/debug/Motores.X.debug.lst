

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 13 23:38:08 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0014                     _SSPCON	set	20
   363  0005                     _PORTA	set	5
   364  0006                     _PORTB	set	6
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCONbits	set	20
   367  000C                     _PIR1bits	set	12
   368  000B                     _INTCONbits	set	11
   369  008F                     _OSCCONbits	set	143
   370  008C                     _PIE1bits	set	140
   371  0091                     _SSPCON2bits	set	145
   372  0087                     _TRISCbits	set	135
   373  0094                     _SSPSTAT	set	148
   374  0093                     _SSPADD	set	147
   375  0091                     _SSPCON2	set	145
   376  0085                     _TRISA	set	133
   377  0086                     _TRISB	set	134
   378  0094                     _SSPSTATbits	set	148
   379  048C                     _ACKEN	set	1164
   380  0488                     _SEN	set	1160
   381  0189                     _ANSELH	set	393
   382  0188                     _ANSEL	set	392
   383                           
   384                           ; #config settings
   385  0000                     
   386                           	psect	cinit
   387  000F                     start_initialization:	
   388  000F                     __initialization:	
   389                           
   390                           ; Clear objects allocated to COMMON
   391  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   392  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   393  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   394  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   395  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   396  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   397  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   398  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   399  0017  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   400                           
   401                           ; Clear objects allocated to BANK0
   402  0018  1283               	bcf	3,5	;RP0=0, select bank0
   403  0019  1303               	bcf	3,6	;RP1=0, select bank0
   404  001A  01A0               	clrf	__pbssBANK0& (0+127)
   405  001B  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   406  001C                     end_of_initialization:	
   407                           ;End of C runtime variable initialization code
   408                           
   409  001C                     __end_of__initialization:	
   410  001C  0183               	clrf	3
   411  001D  120A  118A  2897   	ljmp	_main	;jump to C main() function
   412                           
   413                           	psect	bssCOMMON
   414  0070                     __pbssCOMMON:	
   415  0070                     _x:	
   416  0070                     	ds	1
   417  0071                     _bit6:	
   418  0071                     	ds	1
   419  0072                     _bit5:	
   420  0072                     	ds	1
   421  0073                     _bit4:	
   422  0073                     	ds	1
   423  0074                     _bit3:	
   424  0074                     	ds	1
   425  0075                     _bit2:	
   426  0075                     	ds	1
   427  0076                     _bit1:	
   428  0076                     	ds	1
   429  0077                     _bit0:	
   430  0077                     	ds	1
   431  0078                     _motores:	
   432  0078                     	ds	1
   433                           
   434                           	psect	bssBANK0
   435  0020                     __pbssBANK0:	
   436  0020                     _z:	
   437  0020                     	ds	1
   438  0021                     _bit7:	
   439  0021                     	ds	1
   440                           
   441                           	psect	cstackCOMMON
   442  0079                     __pcstackCOMMON:	
   443  0079                     ?_setup:	
   444  0079                     ?_isr:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0079                     ??_isr:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0079                     ?_main:	
   451                           ; 1 bytes @ 0x0
   452                           
   453                           
   454                           ; 1 bytes @ 0x0
   455  0079                     	ds	3
   456                           
   457                           	psect	cstackBANK0
   458  0022                     __pcstackBANK0:	
   459  0022                     ??_setup:	
   460  0022                     ?_i2c_slave_init:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0022                     i2c_slave_init@address:	
   464                           ; 1 bytes @ 0x0
   465                           
   466                           
   467                           ; 2 bytes @ 0x0
   468  0022                     	ds	2
   469  0024                     ??_i2c_slave_init:	
   470  0024                     ??_main:	
   471                           ; 1 bytes @ 0x2
   472                           
   473                           
   474                           	psect	maintext
   475  0097                     __pmaintext:	
   476                           ; 1 bytes @ 0x2
   477 ;;
   478 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   479 ;;
   480 ;; *************** function _main *****************
   481 ;; Defined at:
   482 ;;		line 72 in file "motores.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0, pclath, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : B00/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0
   499 ;;      Totals:         0       0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels required when called:    2
   502 ;; This function calls:
   503 ;;		_i2c_slave_init
   504 ;;		_setup
   505 ;; This function is called by:
   506 ;;		Startup code after reset
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _main
   512  0097                     _main:	
   513  0097                     l898:	
   514                           ;incstack = 0
   515                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   516                           
   517                           
   518                           ;motores.c: 73:     setup();
   519  0097  120A  118A  20AB  120A  118A  	fcall	_setup
   520  009C                     l900:	
   521                           
   522                           ;motores.c: 75:     i2c_slave_init(0x50);
   523  009C  3050               	movlw	80
   524  009D  1283               	bcf	3,5	;RP0=0, select bank0
   525  009E  1303               	bcf	3,6	;RP1=0, select bank0
   526  009F  00A2               	movwf	i2c_slave_init@address
   527  00A0  3000               	movlw	0
   528  00A1  00A3               	movwf	i2c_slave_init@address+1
   529  00A2  120A  118A  207A  120A  118A  	fcall	_i2c_slave_init
   530  00A7                     l73:	
   531                           ;motores.c: 76:     while(1){
   532                           
   533  00A7                     l74:	
   534                           ;motores.c: 153:     }
   535                           
   536  00A7  28A7               	goto	l73
   537  00A8  120A  118A  280C   	ljmp	start
   538  00AB                     __end_of_main:	
   539                           
   540                           	psect	text1
   541  00AB                     __ptext1:	
   542 ;; *************** function _setup *****************
   543 ;; Defined at:
   544 ;;		line 157 in file "motores.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		status,2
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _setup
   574  00AB                     _setup:	
   575  00AB                     l882:	
   576                           ;incstack = 0
   577                           ; Regs used in _setup: [status,2]
   578                           
   579                           
   580                           ;motores.c: 158:     TRISB = 0x00;
   581  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   582  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   583  00AD  0186               	clrf	6	;volatile
   584                           
   585                           ;motores.c: 159:     PORTB = 0x00;
   586  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   587  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   588  00B0  0186               	clrf	6	;volatile
   589                           
   590                           ;motores.c: 160:     TRISA = 0x00;
   591  00B1  1683               	bsf	3,5	;RP0=1, select bank1
   592  00B2  1303               	bcf	3,6	;RP1=0, select bank1
   593  00B3  0185               	clrf	5	;volatile
   594                           
   595                           ;motores.c: 161:     PORTA = 0x00;
   596  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   597  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   598  00B6  0185               	clrf	5	;volatile
   599                           
   600                           ;motores.c: 162:     ANSEL = 0x00;
   601  00B7  1683               	bsf	3,5	;RP0=1, select bank3
   602  00B8  1703               	bsf	3,6	;RP1=1, select bank3
   603  00B9  0188               	clrf	8	;volatile
   604                           
   605                           ;motores.c: 163:     ANSELH = 0x00;
   606  00BA  0189               	clrf	9	;volatile
   607  00BB                     l79:	
   608  00BB  0008               	return
   609  00BC                     __end_of_setup:	
   610                           
   611                           	psect	text2
   612  007A                     __ptext2:	
   613 ;; *************** function _i2c_slave_init *****************
   614 ;; Defined at:
   615 ;;		line 71 in file "I2C.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  address         2    0[BANK0 ] short 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       2       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0
   632 ;;      Totals:         0       2       0       0       0
   633 ;;Total ram usage:        2 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    1
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _i2c_slave_init
   645  007A                     _i2c_slave_init:	
   646  007A                     l884:	
   647                           ;incstack = 0
   648                           ; Regs used in _i2c_slave_init: [wreg]
   649                           
   650                           
   651                           ;I2C.c: 72:     SSPSTAT = 0x80;
   652  007A  3080               	movlw	128
   653  007B  1683               	bsf	3,5	;RP0=1, select bank1
   654  007C  1303               	bcf	3,6	;RP1=0, select bank1
   655  007D  0094               	movwf	20	;volatile
   656                           
   657                           ;I2C.c: 73:     SSPADD = address;
   658  007E  1283               	bcf	3,5	;RP0=0, select bank0
   659  007F  1303               	bcf	3,6	;RP1=0, select bank0
   660  0080  0822               	movf	i2c_slave_init@address,w
   661  0081  1683               	bsf	3,5	;RP0=1, select bank1
   662  0082  1303               	bcf	3,6	;RP1=0, select bank1
   663  0083  0093               	movwf	19	;volatile
   664                           
   665                           ;I2C.c: 74:     SSPCON = 0x36;
   666  0084  3036               	movlw	54
   667  0085  1283               	bcf	3,5	;RP0=0, select bank0
   668  0086  1303               	bcf	3,6	;RP1=0, select bank0
   669  0087  0094               	movwf	20	;volatile
   670                           
   671                           ;I2C.c: 75:     SSPCON2 = 0x01;
   672  0088  3001               	movlw	1
   673  0089  1683               	bsf	3,5	;RP0=1, select bank1
   674  008A  1303               	bcf	3,6	;RP1=0, select bank1
   675  008B  0091               	movwf	17	;volatile
   676  008C                     l886:	
   677                           
   678                           ;I2C.c: 76:     TRISCbits.TRISC3 = 1;
   679  008C  1587               	bsf	7,3	;volatile
   680  008D                     l888:	
   681                           
   682                           ;I2C.c: 77:     TRISCbits.TRISC4 = 1;
   683  008D  1607               	bsf	7,4	;volatile
   684  008E                     l890:	
   685                           
   686                           ;I2C.c: 78:     INTCONbits.GIE = 1;
   687  008E  178B               	bsf	11,7	;volatile
   688  008F                     l892:	
   689                           
   690                           ;I2C.c: 79:     INTCONbits.PEIE = 1;
   691  008F  170B               	bsf	11,6	;volatile
   692  0090                     l894:	
   693                           
   694                           ;I2C.c: 80:     PIR1bits.SSPIF = 0;
   695  0090  1283               	bcf	3,5	;RP0=0, select bank0
   696  0091  1303               	bcf	3,6	;RP1=0, select bank0
   697  0092  118C               	bcf	12,3	;volatile
   698  0093                     l896:	
   699                           
   700                           ;I2C.c: 81:     PIE1bits.SSPIE = 1;
   701  0093  1683               	bsf	3,5	;RP0=1, select bank1
   702  0094  1303               	bcf	3,6	;RP1=0, select bank1
   703  0095  158C               	bsf	12,3	;volatile
   704  0096                     l141:	
   705  0096  0008               	return
   706  0097                     __end_of_i2c_slave_init:	
   707                           
   708                           	psect	text3
   709  0020                     __ptext3:	
   710 ;; *************** function _isr *****************
   711 ;; Defined at:
   712 ;;		line 41 in file "motores.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          3       0       0       0       0
   729 ;;      Totals:         3       0       0       0       0
   730 ;;Total ram usage:        3 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		Interrupt level 1
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _isr
   741  0020                     _isr:	
   742  0020                     i1l768:	
   743                           
   744                           ;motores.c: 42:     (INTCONbits.GIE = 0);
   745  0020  138B               	bcf	11,7	;volatile
   746                           
   747                           ;motores.c: 44:     if (PIR1bits.SSPIF == 1){
   748  0021  1283               	bcf	3,5	;RP0=0, select bank0
   749  0022  1303               	bcf	3,6	;RP1=0, select bank0
   750  0023  1D8C               	btfss	12,3	;volatile
   751  0024  2826               	goto	u3_21
   752  0025  2827               	goto	u3_20
   753  0026                     u3_21:	
   754  0026  2870               	goto	i1l55
   755  0027                     u3_20:	
   756  0027                     i1l770:	
   757                           
   758                           ;motores.c: 45:         SSPCONbits.CKP = 0;
   759  0027  1214               	bcf	20,4	;volatile
   760                           
   761                           ;motores.c: 46:         if (SSPCONbits.WCOL == 1 || SSPCONbits.SSPOV == 1){
   762  0028  1B94               	btfsc	20,7	;volatile
   763  0029  282B               	goto	u4_21
   764  002A  282C               	goto	u4_20
   765  002B                     u4_21:	
   766  002B  2830               	goto	i1l774
   767  002C                     u4_20:	
   768  002C                     i1l772:	
   769  002C  1F14               	btfss	20,6	;volatile
   770  002D  282F               	goto	u5_21
   771  002E  2830               	goto	u5_20
   772  002F                     u5_21:	
   773  002F  2837               	goto	i1l782
   774  0030                     u5_20:	
   775  0030                     i1l774:	
   776                           
   777                           ;motores.c: 47:             x = SSPBUF;
   778  0030  0813               	movf	19,w	;volatile
   779  0031  00F9               	movwf	??_isr
   780  0032  0879               	movf	??_isr,w
   781  0033  00F0               	movwf	_x
   782  0034                     i1l776:	
   783                           
   784                           ;motores.c: 48:             SSPCONbits.WCOL = 0;
   785  0034  1394               	bcf	20,7	;volatile
   786  0035                     i1l778:	
   787                           
   788                           ;motores.c: 49:             SSPCONbits.SSPOV = 0;
   789  0035  1314               	bcf	20,6	;volatile
   790  0036                     i1l780:	
   791                           
   792                           ;motores.c: 50:             SSPCONbits.CKP = 1;
   793  0036  1614               	bsf	20,4	;volatile
   794  0037                     i1l782:	
   795                           
   796                           ;motores.c: 52:         if( !SSPSTATbits.R_nW){
   797  0037  1683               	bsf	3,5	;RP0=1, select bank1
   798  0038  1303               	bcf	3,6	;RP1=0, select bank1
   799  0039  1914               	btfsc	20,2	;volatile
   800  003A  283C               	goto	u6_21
   801  003B  283D               	goto	u6_20
   802  003C                     u6_21:	
   803  003C  2853               	goto	i1l59
   804  003D                     u6_20:	
   805  003D                     i1l784:	
   806                           
   807                           ;motores.c: 53:             x = SSPBUF;
   808  003D  1283               	bcf	3,5	;RP0=0, select bank0
   809  003E  1303               	bcf	3,6	;RP1=0, select bank0
   810  003F  0813               	movf	19,w	;volatile
   811  0040  00F9               	movwf	??_isr
   812  0041  0879               	movf	??_isr,w
   813  0042  00F0               	movwf	_x
   814  0043                     i1l60:	
   815                           ;motores.c: 54:             while(!SSPSTATbits.BF);
   816                           
   817  0043  1683               	bsf	3,5	;RP0=1, select bank1
   818  0044  1303               	bcf	3,6	;RP1=0, select bank1
   819  0045  1C14               	btfss	20,0	;volatile
   820  0046  2848               	goto	u7_21
   821  0047  2849               	goto	u7_20
   822  0048                     u7_21:	
   823  0048  2843               	goto	i1l60
   824  0049                     u7_20:	
   825  0049                     i1l786:	
   826                           
   827                           ;motores.c: 55:             motores = SSPBUF;
   828  0049  1283               	bcf	3,5	;RP0=0, select bank0
   829  004A  1303               	bcf	3,6	;RP1=0, select bank0
   830  004B  0813               	movf	19,w	;volatile
   831  004C  00F9               	movwf	??_isr
   832  004D  0879               	movf	??_isr,w
   833  004E  00F8               	movwf	_motores
   834                           
   835                           ;motores.c: 56:             PORTB = motores;
   836  004F  0878               	movf	_motores,w
   837  0050  0086               	movwf	6	;volatile
   838  0051                     i1l788:	
   839                           
   840                           ;motores.c: 57:             SSPCONbits.CKP = 1;
   841  0051  1614               	bsf	20,4	;volatile
   842                           
   843                           ;motores.c: 58:         }
   844  0052  2865               	goto	i1l63
   845  0053                     i1l59:	
   846                           ;motores.c: 59:         else if ( SSPSTATbits.R_nW){
   847                           
   848  0053  1D14               	btfss	20,2	;volatile
   849  0054  2856               	goto	u8_21
   850  0055  2857               	goto	u8_20
   851  0056                     u8_21:	
   852  0056  2865               	goto	i1l63
   853  0057                     u8_20:	
   854  0057                     i1l790:	
   855                           
   856                           ;motores.c: 60:             x = SSPBUF;
   857  0057  1283               	bcf	3,5	;RP0=0, select bank0
   858  0058  1303               	bcf	3,6	;RP1=0, select bank0
   859  0059  0813               	movf	19,w	;volatile
   860  005A  00F9               	movwf	??_isr
   861  005B  0879               	movf	??_isr,w
   862  005C  00F0               	movwf	_x
   863  005D                     i1l792:	
   864                           
   865                           ;motores.c: 61:             SSPSTATbits.BF = 0;
   866  005D  1683               	bsf	3,5	;RP0=1, select bank1
   867  005E  1303               	bcf	3,6	;RP1=0, select bank1
   868  005F  1014               	bcf	20,0	;volatile
   869                           
   870                           ;motores.c: 62:             SSPBUF = x;
   871  0060  0870               	movf	_x,w
   872  0061  1283               	bcf	3,5	;RP0=0, select bank0
   873  0062  1303               	bcf	3,6	;RP1=0, select bank0
   874  0063  0093               	movwf	19	;volatile
   875  0064                     i1l794:	
   876                           
   877                           ;motores.c: 63:             SSPCONbits.CKP = 1;
   878  0064  1614               	bsf	20,4	;volatile
   879  0065                     i1l63:	
   880                           
   881                           ;motores.c: 65:         _delay((unsigned long)((300)*(4000000/4000000.0)));
   882  0065  3063               	movlw	99
   883  0066  00F9               	movwf	??_isr
   884  0067                     u14_27:	
   885  0067  0BF9               	decfsz	??_isr,f
   886  0068  2867               	goto	u14_27
   887  0069  286A               	nop2
   888  006A                     i1l65:	
   889                           ;motores.c: 66:         while(SSPSTATbits.BF);
   890                           
   891  006A  1683               	bsf	3,5	;RP0=1, select bank1
   892  006B  1303               	bcf	3,6	;RP1=0, select bank1
   893  006C  1814               	btfsc	20,0	;volatile
   894  006D  286F               	goto	u9_21
   895  006E  2870               	goto	u9_20
   896  006F                     u9_21:	
   897  006F  286A               	goto	i1l65
   898  0070                     u9_20:	
   899  0070                     i1l55:	
   900                           ;motores.c: 67:     }
   901                           
   902                           
   903                           ;motores.c: 68:     PIR1bits.SSPIF = 0;
   904  0070  1283               	bcf	3,5	;RP0=0, select bank0
   905  0071  118C               	bcf	12,3	;volatile
   906                           
   907                           ;motores.c: 69:     (INTCONbits.GIE = 1);
   908  0072  178B               	bsf	11,7	;volatile
   909  0073                     i1l68:	
   910  0073  087B               	movf	??_isr+2,w
   911  0074  008A               	movwf	10
   912  0075  0E7A               	swapf	(??_isr+1)^(0+4294967168),w
   913  0076  0083               	movwf	3
   914  0077  0EFE               	swapf	btemp,f
   915  0078  0E7E               	swapf	btemp,w
   916  0079  0009               	retfie
   917  007A                     __end_of_isr:	
   918  007E                     btemp	set	126	;btemp
   919  007E                     wtemp0	set	126
   920                           
   921                           	psect	intentry
   922  0004                     __pintentry:	
   923                           ;incstack = 0
   924                           ; Regs used in _isr: [wreg]
   925                           
   926  0004                     interrupt_function:	
   927  007E                     saved_w	set	btemp
   928  0004  00FE               	movwf	btemp
   929  0005  0E03               	swapf	3,w
   930  0006  00FA               	movwf	??_isr+1
   931  0007  080A               	movf	10,w
   932  0008  00FB               	movwf	??_isr+2
   933  0009  120A  118A  2820   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_i2c_slave_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     121
                     _i2c_slave_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_slave_init
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 13 23:38:08 2020

                       _x 0070                         _z 0020               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        l73 00A7                        l74 00A7  
                      l79 00BB                       l141 0096                       l900 009C  
                     l890 008E                       l882 00AB                       l892 008F  
                     l884 007A                       l894 0090                       l886 008C  
                     l896 0093                       l888 008D                       l898 0097  
            __CFG_CPD$OFF 0000                       _SEN 0488                       _isr 0020  
            __CFG_LVP$OFF 0000                      ?_isr 0079                      i1l60 0043  
                    i1l63 0065                      i1l55 0070                      i1l65 006A  
                    i1l59 0053                      i1l68 0073                      u3_20 0027  
                    u3_21 0026                      u4_20 002C                      u4_21 002B  
                    u5_20 0030                      u5_21 002F                      u6_20 003D  
                    u6_21 003C                      u7_20 0049                      u7_21 0048  
                    u8_20 0057                      u8_21 0056                      u9_20 0070  
                    u9_21 006F              __CFG_WRT$OFF 0000                      _bit0 0077  
                    _bit1 0076                      _bit2 0075                      _bit3 0074  
                    _bit4 0073                      _bit5 0072                      _bit6 0071  
                    _bit7 0021                      _main 0097                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0079  
                   ?_main 0079                     _ACKEN 048C             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l770 0027                     i1l780 0036  
                   i1l772 002C                     i1l790 0057                     i1l782 0037  
                   i1l774 0030                     i1l792 005D                     i1l784 003D  
                   i1l776 0034                     i1l768 0020                     i1l794 0064  
                   i1l786 0049                     i1l778 0035                     i1l788 0051  
                   u14_27 0067                     _PORTA 0005                     _PORTB 0006  
                   _TRISA 0085                     _TRISB 0086            __CFG_FCMEN$OFF 0000  
                   _setup 00AB            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 00AB                    ??_main 0024  
          _i2c_slave_init 007A                    ?_setup 0079                    _ANSELH 0189  
                  _SSPADD 0093                    _SSPBUF 0013                    _SSPCON 0014  
          __CFG_PWRTE$OFF 0000    __end_of_i2c_slave_init 0097                    saved_w 007E  
 __end_of__initialization 001C            __pcstackCOMMON 0079             __end_of_setup 00BC  
         ?_i2c_slave_init 0022                   ??_setup 0022                __pbssBANK0 0020  
              __pmaintext 0097                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                   __ptext1 00AB                   __ptext2 007A  
                 __ptext3 0020              __size_of_isr 005A                   _motores 0078  
   i2c_slave_init@address 0022      end_of_initialization 001C                 _TRISCbits 0087  
        ??_i2c_slave_init 0024       start_initialization 000F               __end_of_isr 007A  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0070                 ___latbits 0002  
           __pcstackBANK0 0022            __size_of_setup 0011         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0014                _INTCONbits 000B                  intlevel1 0000  
              _OSCCONbits 008F   __size_of_i2c_slave_init 001D               _SSPCON2bits 0091  
              _SSPCONbits 0014  
