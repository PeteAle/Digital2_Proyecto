

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 14 12:17:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0008                     _PORTD	set	8
   363  0006                     _PORTB	set	6
   364  0014                     _SSPCONbits	set	20
   365  000C                     _PIR1bits	set	12
   366  000B                     _INTCONbits	set	11
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCON	set	20
   369  008F                     _OSCCONbits	set	143
   370  0088                     _TRISD	set	136
   371  0086                     _TRISB	set	134
   372  0094                     _SSPSTATbits	set	148
   373  008C                     _PIE1bits	set	140
   374  0091                     _SSPCON2bits	set	145
   375  0087                     _TRISCbits	set	135
   376  0094                     _SSPSTAT	set	148
   377  0093                     _SSPADD	set	147
   378  0091                     _SSPCON2	set	145
   379  04A0                     _BF	set	1184
   380  0189                     _ANSELH	set	393
   381  0188                     _ANSEL	set	392
   382                           
   383                           ; #config settings
   384  0000                     
   385                           	psect	cinit
   386  000F                     start_initialization:	
   387  000F                     __initialization:	
   388                           
   389                           ; Clear objects allocated to COMMON
   390  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   391  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   392  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   393  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   394  0013                     end_of_initialization:	
   395                           ;End of C runtime variable initialization code
   396                           
   397  0013                     __end_of__initialization:	
   398  0013  0183               	clrf	3
   399  0014  120A  118A  28F1   	ljmp	_main	;jump to C main() function
   400                           
   401                           	psect	bssCOMMON
   402  0076                     __pbssCOMMON:	
   403  0076                     _dato:	
   404  0076                     	ds	1
   405  0077                     _z:	
   406  0077                     	ds	1
   407  0078                     _bit0:	
   408  0078                     	ds	1
   409  0079                     _motores:	
   410  0079                     	ds	1
   411                           
   412                           	psect	cstackCOMMON
   413  0070                     __pcstackCOMMON:	
   414  0070                     ?_setup:	
   415  0070                     ?_oscInit:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_isr:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??_isr:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_main:	
   425                           ; 1 bytes @ 0x0
   426                           
   427                           
   428                           ; 1 bytes @ 0x0
   429  0070                     	ds	3
   430  0073                     ??_oscInit:	
   431  0073                     ?_i2c_slave_init:	
   432                           ; 1 bytes @ 0x3
   433                           
   434  0073                     i2c_slave_init@address:	
   435                           ; 1 bytes @ 0x3
   436                           
   437                           
   438                           ; 2 bytes @ 0x3
   439  0073                     	ds	2
   440  0075                     ??_setup:	
   441  0075                     ??_i2c_slave_init:	
   442                           ; 1 bytes @ 0x5
   443                           
   444  0075                     oscInit@freq:	
   445                           ; 1 bytes @ 0x5
   446                           
   447                           
   448                           ; 1 bytes @ 0x5
   449  0075                     	ds	1
   450                           
   451                           	psect	cstackBANK0
   452  0020                     __pcstackBANK0:	
   453  0020                     ??_main:	
   454                           
   455                           ; 1 bytes @ 0x0
   456  0020                     	ds	3
   457                           
   458                           	psect	maintext
   459  00F1                     __pmaintext:	
   460 ;;
   461 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   462 ;;
   463 ;; *************** function _main *****************
   464 ;; Defined at:
   465 ;;		line 89 in file "motores2.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;		None
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : B00/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   479 ;;      Params:         0       0       0       0       0
   480 ;;      Locals:         0       0       0       0       0
   481 ;;      Temps:          0       3       0       0       0
   482 ;;      Totals:         0       3       0       0       0
   483 ;;Total ram usage:        3 bytes
   484 ;; Hardware stack levels required when called:    3
   485 ;; This function calls:
   486 ;;		_oscInit
   487 ;;		_setup
   488 ;; This function is called by:
   489 ;;		Startup code after reset
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           
   494                           ;psect for function _main
   495  00F1                     _main:	
   496  00F1                     l908:	
   497                           ;incstack = 0
   498                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   499                           
   500                           
   501                           ;motores2.c: 90:     setup();
   502  00F1  120A  118A  212B  120A  118A  	fcall	_setup
   503  00F6                     l910:	
   504                           
   505                           ;motores2.c: 91:     oscInit(1);
   506  00F6  3001               	movlw	1
   507  00F7  120A  118A  2017  120A  118A  	fcall	_oscInit
   508  00FC                     l912:	
   509                           
   510                           ;motores2.c: 96:         PORTB = motores;
   511  00FC  0879               	movf	_motores,w
   512  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   513  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   514  00FF  0086               	movwf	6	;volatile
   515  0100                     l914:	
   516                           
   517                           ;motores2.c: 107:        _delay((unsigned long)((500)*(4000000/4000.0)));
   518  0100  3003               	movlw	3
   519  0101  1283               	bcf	3,5	;RP0=0, select bank0
   520  0102  1303               	bcf	3,6	;RP1=0, select bank0
   521  0103  00A2               	movwf	??_main+2
   522  0104  308A               	movlw	138
   523  0105  00A1               	movwf	??_main+1
   524  0106  3055               	movlw	85
   525  0107  00A0               	movwf	??_main
   526  0108                     u157:	
   527  0108  0BA0               	decfsz	??_main,f
   528  0109  2908               	goto	u157
   529  010A  0BA1               	decfsz	??_main+1,f
   530  010B  2908               	goto	u157
   531  010C  0BA2               	decfsz	??_main+2,f
   532  010D  2908               	goto	u157
   533  010E  28FC               	goto	l912
   534  010F  120A  118A  280C   	ljmp	start
   535  0112                     __end_of_main:	
   536                           
   537                           	psect	text1
   538  012B                     __ptext1:	
   539 ;; *************** function _setup *****************
   540 ;; Defined at:
   541 ;;		line 114 in file "motores2.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    2
   562 ;; This function calls:
   563 ;;		_i2c_slave_init
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _setup
   571  012B                     _setup:	
   572  012B                     l876:	
   573                           ;incstack = 0
   574                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   575                           
   576                           
   577                           ;motores2.c: 115:     ANSEL = 0;
   578  012B  1683               	bsf	3,5	;RP0=1, select bank3
   579  012C  1703               	bsf	3,6	;RP1=1, select bank3
   580  012D  0188               	clrf	8	;volatile
   581                           
   582                           ;motores2.c: 116:     ANSELH = 0;
   583  012E  0189               	clrf	9	;volatile
   584                           
   585                           ;motores2.c: 118:     TRISB = 0;
   586  012F  1683               	bsf	3,5	;RP0=1, select bank1
   587  0130  1303               	bcf	3,6	;RP1=0, select bank1
   588  0131  0186               	clrf	6	;volatile
   589                           
   590                           ;motores2.c: 119:     TRISD = 0;
   591  0132  0188               	clrf	8	;volatile
   592                           
   593                           ;motores2.c: 121:     PORTB = 0;
   594  0133  1283               	bcf	3,5	;RP0=0, select bank0
   595  0134  1303               	bcf	3,6	;RP1=0, select bank0
   596  0135  0186               	clrf	6	;volatile
   597                           
   598                           ;motores2.c: 122:     PORTD = 0;
   599  0136  0188               	clrf	8	;volatile
   600  0137                     l878:	
   601                           
   602                           ;motores2.c: 123:     i2c_slave_init(0x50);
   603  0137  3050               	movlw	80
   604  0138  00F3               	movwf	i2c_slave_init@address
   605  0139  3000               	movlw	0
   606  013A  00F4               	movwf	i2c_slave_init@address+1
   607  013B  120A  118A  2112  120A  118A  	fcall	_i2c_slave_init
   608  0140                     l117:	
   609  0140  0008               	return
   610  0141                     __end_of_setup:	
   611                           
   612                           	psect	text2
   613  0112                     __ptext2:	
   614 ;; *************** function _i2c_slave_init *****************
   615 ;; Defined at:
   616 ;;		line 66 in file "I2C_2.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;  address         2    3[COMMON] short 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         2       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0
   633 ;;      Totals:         2       0       0       0       0
   634 ;;Total ram usage:        2 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_setup
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _i2c_slave_init
   646  0112                     _i2c_slave_init:	
   647  0112                     l862:	
   648                           ;incstack = 0
   649                           ; Regs used in _i2c_slave_init: [wreg]
   650                           
   651                           
   652                           ;I2C_2.c: 67:     SSPSTAT = 0x80;
   653  0112  3080               	movlw	128
   654  0113  1683               	bsf	3,5	;RP0=1, select bank1
   655  0114  1303               	bcf	3,6	;RP1=0, select bank1
   656  0115  0094               	movwf	20	;volatile
   657                           
   658                           ;I2C_2.c: 68:     SSPADD = address;
   659  0116  0873               	movf	i2c_slave_init@address,w
   660  0117  0093               	movwf	19	;volatile
   661                           
   662                           ;I2C_2.c: 69:     SSPCON = 0x36;
   663  0118  3036               	movlw	54
   664  0119  1283               	bcf	3,5	;RP0=0, select bank0
   665  011A  1303               	bcf	3,6	;RP1=0, select bank0
   666  011B  0094               	movwf	20	;volatile
   667                           
   668                           ;I2C_2.c: 70:     SSPCON2 = 0x01;
   669  011C  3001               	movlw	1
   670  011D  1683               	bsf	3,5	;RP0=1, select bank1
   671  011E  1303               	bcf	3,6	;RP1=0, select bank1
   672  011F  0091               	movwf	17	;volatile
   673  0120                     l864:	
   674                           
   675                           ;I2C_2.c: 71:     TRISCbits.TRISC3 = 1;
   676  0120  1587               	bsf	7,3	;volatile
   677  0121                     l866:	
   678                           
   679                           ;I2C_2.c: 72:     TRISCbits.TRISC4 = 1;
   680  0121  1607               	bsf	7,4	;volatile
   681  0122                     l868:	
   682                           
   683                           ;I2C_2.c: 73:     INTCONbits.GIE = 1;
   684  0122  178B               	bsf	11,7	;volatile
   685  0123                     l870:	
   686                           
   687                           ;I2C_2.c: 74:     INTCONbits.PEIE = 1;
   688  0123  170B               	bsf	11,6	;volatile
   689  0124                     l872:	
   690                           
   691                           ;I2C_2.c: 75:     PIR1bits.SSPIF = 0;
   692  0124  1283               	bcf	3,5	;RP0=0, select bank0
   693  0125  1303               	bcf	3,6	;RP1=0, select bank0
   694  0126  118C               	bcf	12,3	;volatile
   695  0127                     l874:	
   696                           
   697                           ;I2C_2.c: 76:     PIE1bits.SSPIE = 1;
   698  0127  1683               	bsf	3,5	;RP0=1, select bank1
   699  0128  1303               	bcf	3,6	;RP1=0, select bank1
   700  0129  158C               	bsf	12,3	;volatile
   701  012A                     l50:	
   702  012A  0008               	return
   703  012B                     __end_of_i2c_slave_init:	
   704                           
   705                           	psect	text3
   706  0017                     __ptext3:	
   707 ;; *************** function _oscInit *****************
   708 ;; Defined at:
   709 ;;		line 11 in file "OSCCON.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;  freq            1    wreg     unsigned char 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  freq            1    5[COMMON] unsigned char 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      unsigned char 
   716 ;; Registers used:
   717 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       0       0       0       0
   724 ;;      Locals:         1       0       0       0       0
   725 ;;      Temps:          2       0       0       0       0
   726 ;;      Totals:         3       0       0       0       0
   727 ;;Total ram usage:        3 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    1
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           
   738                           ;psect for function _oscInit
   739  0017                     _oscInit:	
   740                           
   741                           ;incstack = 0
   742                           ; Regs used in _oscInit: [wreg-fsr0h+status,2+status,0]
   743                           ;oscInit@freq stored from wreg
   744  0017  00F5               	movwf	oscInit@freq
   745  0018                     l746:	
   746                           
   747                           ;OSCCON.c: 12:     switch(freq){
   748  0018  2869               	goto	l750
   749  0019                     l123:	
   750                           ;OSCCON.c: 13:         case 0:
   751                           
   752                           
   753                           ;OSCCON.c: 14:             OSCCONbits.IRCF2 = 1;
   754  0019  1683               	bsf	3,5	;RP0=1, select bank1
   755  001A  1303               	bcf	3,6	;RP1=0, select bank1
   756  001B  170F               	bsf	15,6	;volatile
   757                           
   758                           ;OSCCON.c: 15:             OSCCONbits.IRCF1 = 1;
   759  001C  168F               	bsf	15,5	;volatile
   760                           
   761                           ;OSCCON.c: 16:             OSCCONbits.IRCF0 = 1;
   762  001D  160F               	bsf	15,4	;volatile
   763                           
   764                           ;OSCCON.c: 17:             OSCCONbits.OSTS = 0;
   765  001E  118F               	bcf	15,3	;volatile
   766                           
   767                           ;OSCCON.c: 18:             OSCCONbits.HTS = 1;
   768  001F  150F               	bsf	15,2	;volatile
   769                           
   770                           ;OSCCON.c: 19:             OSCCONbits.LTS = 0;
   771  0020  108F               	bcf	15,1	;volatile
   772                           
   773                           ;OSCCON.c: 20:             OSCCONbits.SCS = 1;
   774  0021  140F               	bsf	15,0	;volatile
   775                           
   776                           ;OSCCON.c: 21:             break;
   777  0022  288B               	goto	l132
   778  0023                     l125:	
   779                           ;OSCCON.c: 22:         case 1:
   780                           
   781                           
   782                           ;OSCCON.c: 23:             OSCCONbits.IRCF2 = 1;
   783  0023  1683               	bsf	3,5	;RP0=1, select bank1
   784  0024  1303               	bcf	3,6	;RP1=0, select bank1
   785  0025  170F               	bsf	15,6	;volatile
   786                           
   787                           ;OSCCON.c: 24:             OSCCONbits.IRCF1 = 1;
   788  0026  168F               	bsf	15,5	;volatile
   789                           
   790                           ;OSCCON.c: 25:             OSCCONbits.IRCF0 = 0;
   791  0027  120F               	bcf	15,4	;volatile
   792                           
   793                           ;OSCCON.c: 26:             OSCCONbits.OSTS = 0;
   794  0028  118F               	bcf	15,3	;volatile
   795                           
   796                           ;OSCCON.c: 27:             OSCCONbits.HTS = 1;
   797  0029  150F               	bsf	15,2	;volatile
   798                           
   799                           ;OSCCON.c: 28:             OSCCONbits.LTS = 0;
   800  002A  108F               	bcf	15,1	;volatile
   801                           
   802                           ;OSCCON.c: 29:             OSCCONbits.SCS = 1;
   803  002B  140F               	bsf	15,0	;volatile
   804                           
   805                           ;OSCCON.c: 30:             break;
   806  002C  288B               	goto	l132
   807  002D                     l126:	
   808                           ;OSCCON.c: 31:         case 2:
   809                           
   810                           
   811                           ;OSCCON.c: 32:             OSCCONbits.IRCF2 = 1;
   812  002D  1683               	bsf	3,5	;RP0=1, select bank1
   813  002E  1303               	bcf	3,6	;RP1=0, select bank1
   814  002F  170F               	bsf	15,6	;volatile
   815                           
   816                           ;OSCCON.c: 33:             OSCCONbits.IRCF1 = 0;
   817  0030  128F               	bcf	15,5	;volatile
   818                           
   819                           ;OSCCON.c: 34:             OSCCONbits.IRCF0 = 1;
   820  0031  160F               	bsf	15,4	;volatile
   821                           
   822                           ;OSCCON.c: 35:             OSCCONbits.OSTS = 0;
   823  0032  118F               	bcf	15,3	;volatile
   824                           
   825                           ;OSCCON.c: 36:             OSCCONbits.HTS = 1;
   826  0033  150F               	bsf	15,2	;volatile
   827                           
   828                           ;OSCCON.c: 37:             OSCCONbits.LTS = 0;
   829  0034  108F               	bcf	15,1	;volatile
   830                           
   831                           ;OSCCON.c: 38:             OSCCONbits.SCS = 1;
   832  0035  140F               	bsf	15,0	;volatile
   833                           
   834                           ;OSCCON.c: 39:             break;
   835  0036  288B               	goto	l132
   836  0037                     l127:	
   837                           ;OSCCON.c: 40:         case 3:
   838                           
   839                           
   840                           ;OSCCON.c: 41:             OSCCONbits.IRCF2 = 1;
   841  0037  1683               	bsf	3,5	;RP0=1, select bank1
   842  0038  1303               	bcf	3,6	;RP1=0, select bank1
   843  0039  170F               	bsf	15,6	;volatile
   844                           
   845                           ;OSCCON.c: 42:             OSCCONbits.IRCF1 = 0;
   846  003A  128F               	bcf	15,5	;volatile
   847                           
   848                           ;OSCCON.c: 43:             OSCCONbits.IRCF0 = 0;
   849  003B  120F               	bcf	15,4	;volatile
   850                           
   851                           ;OSCCON.c: 44:             OSCCONbits.OSTS = 0;
   852  003C  118F               	bcf	15,3	;volatile
   853                           
   854                           ;OSCCON.c: 45:             OSCCONbits.HTS = 1;
   855  003D  150F               	bsf	15,2	;volatile
   856                           
   857                           ;OSCCON.c: 46:             OSCCONbits.LTS = 0;
   858  003E  108F               	bcf	15,1	;volatile
   859                           
   860                           ;OSCCON.c: 47:             OSCCONbits.SCS = 1;
   861  003F  140F               	bsf	15,0	;volatile
   862                           
   863                           ;OSCCON.c: 48:             break;
   864  0040  288B               	goto	l132
   865  0041                     l128:	
   866                           ;OSCCON.c: 49:         case 4:
   867                           
   868                           
   869                           ;OSCCON.c: 50:             OSCCONbits.IRCF2 = 0;
   870  0041  1683               	bsf	3,5	;RP0=1, select bank1
   871  0042  1303               	bcf	3,6	;RP1=0, select bank1
   872  0043  130F               	bcf	15,6	;volatile
   873                           
   874                           ;OSCCON.c: 51:             OSCCONbits.IRCF1 = 1;
   875  0044  168F               	bsf	15,5	;volatile
   876                           
   877                           ;OSCCON.c: 52:             OSCCONbits.IRCF0 = 1;
   878  0045  160F               	bsf	15,4	;volatile
   879                           
   880                           ;OSCCON.c: 53:             OSCCONbits.OSTS = 0;
   881  0046  118F               	bcf	15,3	;volatile
   882                           
   883                           ;OSCCON.c: 54:             OSCCONbits.HTS = 1;
   884  0047  150F               	bsf	15,2	;volatile
   885                           
   886                           ;OSCCON.c: 55:             OSCCONbits.LTS = 0;
   887  0048  108F               	bcf	15,1	;volatile
   888                           
   889                           ;OSCCON.c: 56:             OSCCONbits.SCS = 1;
   890  0049  140F               	bsf	15,0	;volatile
   891                           
   892                           ;OSCCON.c: 57:             break;
   893  004A  288B               	goto	l132
   894  004B                     l129:	
   895                           ;OSCCON.c: 58:         case 5:
   896                           
   897                           
   898                           ;OSCCON.c: 59:             OSCCONbits.IRCF2 = 0;
   899  004B  1683               	bsf	3,5	;RP0=1, select bank1
   900  004C  1303               	bcf	3,6	;RP1=0, select bank1
   901  004D  130F               	bcf	15,6	;volatile
   902                           
   903                           ;OSCCON.c: 60:             OSCCONbits.IRCF1 = 1;
   904  004E  168F               	bsf	15,5	;volatile
   905                           
   906                           ;OSCCON.c: 61:             OSCCONbits.IRCF0 = 0;
   907  004F  120F               	bcf	15,4	;volatile
   908                           
   909                           ;OSCCON.c: 62:             OSCCONbits.OSTS = 0;
   910  0050  118F               	bcf	15,3	;volatile
   911                           
   912                           ;OSCCON.c: 63:             OSCCONbits.HTS = 1;
   913  0051  150F               	bsf	15,2	;volatile
   914                           
   915                           ;OSCCON.c: 64:             OSCCONbits.LTS = 0;
   916  0052  108F               	bcf	15,1	;volatile
   917                           
   918                           ;OSCCON.c: 65:             OSCCONbits.SCS = 1;
   919  0053  140F               	bsf	15,0	;volatile
   920                           
   921                           ;OSCCON.c: 66:             break;
   922  0054  288B               	goto	l132
   923  0055                     l130:	
   924                           ;OSCCON.c: 67:         case 6:
   925                           
   926                           
   927                           ;OSCCON.c: 68:             OSCCONbits.IRCF2 = 0;
   928  0055  1683               	bsf	3,5	;RP0=1, select bank1
   929  0056  1303               	bcf	3,6	;RP1=0, select bank1
   930  0057  130F               	bcf	15,6	;volatile
   931                           
   932                           ;OSCCON.c: 69:             OSCCONbits.IRCF1 = 0;
   933  0058  128F               	bcf	15,5	;volatile
   934                           
   935                           ;OSCCON.c: 70:             OSCCONbits.IRCF0 = 1;
   936  0059  160F               	bsf	15,4	;volatile
   937                           
   938                           ;OSCCON.c: 71:             OSCCONbits.OSTS = 0;
   939  005A  118F               	bcf	15,3	;volatile
   940                           
   941                           ;OSCCON.c: 72:             OSCCONbits.HTS = 1;
   942  005B  150F               	bsf	15,2	;volatile
   943                           
   944                           ;OSCCON.c: 73:             OSCCONbits.LTS = 0;
   945  005C  108F               	bcf	15,1	;volatile
   946                           
   947                           ;OSCCON.c: 74:             OSCCONbits.SCS = 1;
   948  005D  140F               	bsf	15,0	;volatile
   949                           
   950                           ;OSCCON.c: 75:             break;
   951  005E  288B               	goto	l132
   952  005F                     l131:	
   953                           ;OSCCON.c: 76:         case 7:
   954                           
   955                           
   956                           ;OSCCON.c: 77:             OSCCONbits.IRCF2 = 0;
   957  005F  1683               	bsf	3,5	;RP0=1, select bank1
   958  0060  1303               	bcf	3,6	;RP1=0, select bank1
   959  0061  130F               	bcf	15,6	;volatile
   960                           
   961                           ;OSCCON.c: 78:             OSCCONbits.IRCF1 = 0;
   962  0062  128F               	bcf	15,5	;volatile
   963                           
   964                           ;OSCCON.c: 79:             OSCCONbits.IRCF0 = 0;
   965  0063  120F               	bcf	15,4	;volatile
   966                           
   967                           ;OSCCON.c: 80:             OSCCONbits.OSTS = 0;
   968  0064  118F               	bcf	15,3	;volatile
   969                           
   970                           ;OSCCON.c: 81:             OSCCONbits.HTS = 0;
   971  0065  110F               	bcf	15,2	;volatile
   972                           
   973                           ;OSCCON.c: 82:             OSCCONbits.LTS = 1;
   974  0066  148F               	bsf	15,1	;volatile
   975                           
   976                           ;OSCCON.c: 83:             OSCCONbits.SCS = 1;
   977  0067  140F               	bsf	15,0	;volatile
   978                           
   979                           ;OSCCON.c: 84:             break;
   980  0068  288B               	goto	l132
   981  0069                     l750:	
   982  0069  0875               	movf	oscInit@freq,w
   983  006A  00F3               	movwf	??_oscInit
   984  006B  01F4               	clrf	??_oscInit+1
   985                           
   986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 1, Range of values is 0 to 0
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            4     3 (average)
   992                           ; direct_byte           11     8 (fixed)
   993                           ; jumptable            260     6 (fixed)
   994                           ;	Chosen strategy is simple_byte
   995  006C  0874               	movf	??_oscInit+1,w
   996  006D  3A00               	xorlw	0	; case 0
   997  006E  1903               	skipnz
   998  006F  2871               	goto	l936
   999  0070  288B               	goto	l132
  1000  0071                     l936:	
  1001                           
  1002                           ; Switch size 1, requested type "simple"
  1003                           ; Number of cases is 8, Range of values is 0 to 7
  1004                           ; switch strategies available:
  1005                           ; Name         Instructions Cycles
  1006                           ; simple_byte           25    13 (average)
  1007                           ; direct_byte           32     8 (fixed)
  1008                           ; jumptable            260     6 (fixed)
  1009                           ;	Chosen strategy is simple_byte
  1010  0071  0873               	movf	??_oscInit,w
  1011  0072  3A00               	xorlw	0	; case 0
  1012  0073  1903               	skipnz
  1013  0074  2819               	goto	l123
  1014  0075  3A01               	xorlw	1	; case 1
  1015  0076  1903               	skipnz
  1016  0077  2823               	goto	l125
  1017  0078  3A03               	xorlw	3	; case 2
  1018  0079  1903               	skipnz
  1019  007A  282D               	goto	l126
  1020  007B  3A01               	xorlw	1	; case 3
  1021  007C  1903               	skipnz
  1022  007D  2837               	goto	l127
  1023  007E  3A07               	xorlw	7	; case 4
  1024  007F  1903               	skipnz
  1025  0080  2841               	goto	l128
  1026  0081  3A01               	xorlw	1	; case 5
  1027  0082  1903               	skipnz
  1028  0083  284B               	goto	l129
  1029  0084  3A03               	xorlw	3	; case 6
  1030  0085  1903               	skipnz
  1031  0086  2855               	goto	l130
  1032  0087  3A01               	xorlw	1	; case 7
  1033  0088  1903               	skipnz
  1034  0089  285F               	goto	l131
  1035  008A  288B               	goto	l132
  1036  008B                     l132:	
  1037  008B  0008               	return
  1038  008C                     __end_of_oscInit:	
  1039                           
  1040                           	psect	text4
  1041  008C                     __ptext4:	
  1042 ;; *************** function _isr *****************
  1043 ;; Defined at:
  1044 ;;		line 51 in file "motores2.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          3       0       0       0       0
  1061 ;;      Totals:         3       0       0       0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		Interrupt level 1
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _isr
  1073  008C                     _isr:	
  1074  008C                     i1l800:	
  1075                           
  1076                           ;motores2.c: 52:    if(PIR1bits.SSPIF == 1){
  1077  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1078  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1079  008E  1D8C               	btfss	12,3	;volatile
  1080  008F  2891               	goto	u6_21
  1081  0090  2892               	goto	u6_20
  1082  0091                     u6_21:	
  1083  0091  28EA               	goto	i1l106
  1084  0092                     u6_20:	
  1085  0092                     i1l802:	
  1086                           
  1087                           ;motores2.c: 54:         SSPCONbits.CKP = 0;
  1088  0092  1214               	bcf	20,4	;volatile
  1089                           
  1090                           ;motores2.c: 56:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1091  0093  1B14               	btfsc	20,6	;volatile
  1092  0094  2896               	goto	u7_21
  1093  0095  2897               	goto	u7_20
  1094  0096                     u7_21:	
  1095  0096  289B               	goto	i1l806
  1096  0097                     u7_20:	
  1097  0097                     i1l804:	
  1098  0097  1F94               	btfss	20,7	;volatile
  1099  0098  289A               	goto	u8_21
  1100  0099  289B               	goto	u8_20
  1101  009A                     u8_21:	
  1102  009A  28A2               	goto	i1l814
  1103  009B                     u8_20:	
  1104  009B                     i1l806:	
  1105                           
  1106                           ;motores2.c: 57:             z = SSPBUF;
  1107  009B  0813               	movf	19,w	;volatile
  1108  009C  00F0               	movwf	??_isr
  1109  009D  0870               	movf	??_isr,w
  1110  009E  00F7               	movwf	_z
  1111  009F                     i1l808:	
  1112                           
  1113                           ;motores2.c: 58:             SSPCONbits.SSPOV = 0;
  1114  009F  1314               	bcf	20,6	;volatile
  1115  00A0                     i1l810:	
  1116                           
  1117                           ;motores2.c: 59:             SSPCONbits.WCOL = 0;
  1118  00A0  1394               	bcf	20,7	;volatile
  1119  00A1                     i1l812:	
  1120                           
  1121                           ;motores2.c: 60:             SSPCONbits.CKP = 1;
  1122  00A1  1614               	bsf	20,4	;volatile
  1123  00A2                     i1l814:	
  1124                           
  1125                           ;motores2.c: 63:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1126  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  1127  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  1128  00A4  1A94               	btfsc	20,5	;volatile
  1129  00A5  28A7               	goto	u9_21
  1130  00A6  28A8               	goto	u9_20
  1131  00A7                     u9_21:	
  1132  00A7  28C7               	goto	i1l97
  1133  00A8                     u9_20:	
  1134  00A8                     i1l816:	
  1135  00A8  1914               	btfsc	20,2	;volatile
  1136  00A9  28AB               	goto	u10_21
  1137  00AA  28AC               	goto	u10_20
  1138  00AB                     u10_21:	
  1139  00AB  28C7               	goto	i1l97
  1140  00AC                     u10_20:	
  1141  00AC                     i1l818:	
  1142                           
  1143                           ;motores2.c: 65:             z = SSPBUF;
  1144  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1145  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1146  00AE  0813               	movf	19,w	;volatile
  1147  00AF  00F0               	movwf	??_isr
  1148  00B0  0870               	movf	??_isr,w
  1149  00B1  00F7               	movwf	_z
  1150  00B2                     i1l820:	
  1151                           
  1152                           ;motores2.c: 67:             PIR1bits.SSPIF = 0;
  1153  00B2  118C               	bcf	12,3	;volatile
  1154  00B3                     i1l822:	
  1155                           
  1156                           ;motores2.c: 68:             SSPCONbits.CKP = 1;
  1157  00B3  1614               	bsf	20,4	;volatile
  1158  00B4                     i1l98:	
  1159                           ;motores2.c: 69:             while(!SSPSTATbits.BF);
  1160                           
  1161  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1162  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1163  00B6  1C14               	btfss	20,0	;volatile
  1164  00B7  28B9               	goto	u11_21
  1165  00B8  28BA               	goto	u11_20
  1166  00B9                     u11_21:	
  1167  00B9  28B4               	goto	i1l98
  1168  00BA                     u11_20:	
  1169  00BA                     i1l824:	
  1170                           
  1171                           ;motores2.c: 70:             motores = SSPBUF;
  1172  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1173  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1174  00BC  0813               	movf	19,w	;volatile
  1175  00BD  00F0               	movwf	??_isr
  1176  00BE  0870               	movf	??_isr,w
  1177  00BF  00F9               	movwf	_motores
  1178                           
  1179                           ;motores2.c: 71:             PORTB = motores;
  1180  00C0  0879               	movf	_motores,w
  1181  00C1  0086               	movwf	6	;volatile
  1182                           
  1183                           ;motores2.c: 72:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1184  00C2  3053               	movlw	83
  1185  00C3  00F0               	movwf	??_isr
  1186  00C4                     u16_27:	
  1187  00C4  0BF0               	decfsz	??_isr,f
  1188  00C5  28C4               	goto	u16_27
  1189                           
  1190                           ;motores2.c: 74:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1191  00C6  28E7               	goto	i1l101
  1192  00C7                     i1l97:	
  1193  00C7  1A94               	btfsc	20,5	;volatile
  1194  00C8  28CA               	goto	u12_21
  1195  00C9  28CB               	goto	u12_20
  1196  00CA                     u12_21:	
  1197  00CA  28E7               	goto	i1l101
  1198  00CB                     u12_20:	
  1199  00CB                     i1l826:	
  1200  00CB  1D14               	btfss	20,2	;volatile
  1201  00CC  28CE               	goto	u13_21
  1202  00CD  28CF               	goto	u13_20
  1203  00CE                     u13_21:	
  1204  00CE  28E7               	goto	i1l101
  1205  00CF                     u13_20:	
  1206  00CF                     i1l828:	
  1207                           
  1208                           ;motores2.c: 75:             z = SSPBUF;
  1209  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1210  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1211  00D1  0813               	movf	19,w	;volatile
  1212  00D2  00F0               	movwf	??_isr
  1213  00D3  0870               	movf	??_isr,w
  1214  00D4  00F7               	movwf	_z
  1215  00D5                     i1l830:	
  1216                           
  1217                           ;motores2.c: 76:             BF = 0;
  1218  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1219  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1220  00D7  1014               	bcf	20,0	;volatile
  1221                           
  1222                           ;motores2.c: 77:             SSPBUF = PORTB;
  1223  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1224  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1225  00DA  0806               	movf	6,w	;volatile
  1226  00DB  0093               	movwf	19	;volatile
  1227  00DC                     i1l832:	
  1228                           
  1229                           ;motores2.c: 78:             SSPCONbits.CKP = 1;
  1230  00DC  1614               	bsf	20,4	;volatile
  1231                           
  1232                           ;motores2.c: 79:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1233  00DD  3053               	movlw	83
  1234  00DE  00F0               	movwf	??_isr
  1235  00DF                     u17_27:	
  1236  00DF  0BF0               	decfsz	??_isr,f
  1237  00E0  28DF               	goto	u17_27
  1238  00E1                     i1l103:	
  1239                           ;motores2.c: 80:             while(SSPSTATbits.BF);
  1240                           
  1241  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1242  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1243  00E3  1814               	btfsc	20,0	;volatile
  1244  00E4  28E6               	goto	u14_21
  1245  00E5  28E7               	goto	u14_20
  1246  00E6                     u14_21:	
  1247  00E6  28E1               	goto	i1l103
  1248  00E7                     u14_20:	
  1249  00E7                     i1l101:	
  1250                           
  1251                           ;motores2.c: 83:         PIR1bits.SSPIF = 0;
  1252  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1253  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1254  00E9  118C               	bcf	12,3	;volatile
  1255  00EA                     i1l106:	
  1256  00EA  0872               	movf	??_isr+2,w
  1257  00EB  008A               	movwf	10
  1258  00EC  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1259  00ED  0083               	movwf	3
  1260  00EE  0EFE               	swapf	btemp,f
  1261  00EF  0E7E               	swapf	btemp,w
  1262  00F0  0009               	retfie
  1263  00F1                     __end_of_isr:	
  1264  007E                     btemp	set	126	;btemp
  1265  007E                     wtemp0	set	126
  1266                           
  1267                           	psect	intentry
  1268  0004                     __pintentry:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _isr: [wreg]
  1271                           
  1272  0004                     interrupt_function:	
  1273  007E                     saved_w	set	btemp
  1274  0004  00FE               	movwf	btemp
  1275  0005  0E03               	swapf	3,w
  1276  0006  00F1               	movwf	??_isr+1
  1277  0007  080A               	movf	10,w
  1278  0008  00F2               	movwf	??_isr+2
  1279  0009  120A  118A  288C   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_oscInit
    _setup->_i2c_slave_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     118
                                              0 BANK0      3     3      0
                            _oscInit
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      98
                     _i2c_slave_init
 ---------------------------------------------------------------------------------
 (2) _i2c_slave_init                                       2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _oscInit                                              3     3      0      20
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _oscInit
   _setup
     _i2c_slave_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 14 12:17:48 2020

                       _z 0077               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l50 012A                       l130 0055  
                     l131 005F                       l123 0019                       l132 008B  
                     l125 0023                       l117 0140                       l126 002D  
                     l127 0037                       l128 0041                       l129 004B  
                     l750 0069                       l910 00F6                       l912 00FC  
                     l746 0018                       l914 0100                       l908 00F1  
                     l870 0123                       l862 0112                       l936 0071  
                     l872 0124                       l864 0120                       l874 0127  
                     l866 0121                       l868 0122                       l876 012B  
                     l878 0137                       u157 0108              __CFG_CPD$OFF 0000  
                     _isr 008C              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    i1l97 00C7                      i1l98 00B4                      u6_20 0092  
                    u6_21 0091                      u7_20 0097                      u7_21 0096  
                    u8_20 009B                      u8_21 009A                      u9_20 00A8  
                    u9_21 00A7              __CFG_WRT$OFF 0000                      _bit0 0078  
                    _dato 0076                      _main 00F1                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l101 00E7                     i1l103 00E1                     i1l106 00EA  
                   i1l800 008C                     i1l810 00A0                     i1l802 0092  
                   i1l820 00B2                     i1l812 00A1                     i1l804 0097  
                   i1l830 00D5                     i1l822 00B3                     i1l814 00A2  
                   i1l806 009B                     i1l832 00DC                     i1l824 00BA  
                   i1l816 00A8                     i1l808 009F                     i1l826 00CB  
                   i1l818 00AC                     i1l828 00CF                     u10_20 00AC  
                   u10_21 00AB                     u11_20 00BA                     u11_21 00B9  
                   u12_20 00CB                     u12_21 00CA                     u13_20 00CF  
                   u13_21 00CE                     u14_20 00E7                     u14_21 00E6  
                   u16_27 00C4                     u17_27 00DF                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000                     _setup 012B           __end_of_oscInit 008C  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0112                    ??_main 0020            _i2c_slave_init 0112  
                  ?_setup 0070                    _ANSELH 0189                    _SSPADD 0093  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
  __end_of_i2c_slave_init 012B                 ??_oscInit 0073                    saved_w 007E  
 __end_of__initialization 0013            __pcstackCOMMON 0070             __end_of_setup 0141  
         ?_i2c_slave_init 0073               oscInit@freq 0075                   ??_setup 0075  
              __pmaintext 00F1                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                   __ptext1 012B                   __ptext2 0112  
                 __ptext3 0017                   __ptext4 008C              __size_of_isr 0065  
                 _oscInit 0017                   _motores 0079     i2c_slave_init@address 0073  
    end_of_initialization 0013                 _TRISCbits 0087          ??_i2c_slave_init 0075  
     start_initialization 000F               __end_of_isr 00F1  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0076                 ___latbits 0002             __pcstackBANK0 0020  
                ?_oscInit 0070            __size_of_setup 0016         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C          __size_of_oscInit 0075  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0021                _INTCONbits 000B  
                intlevel1 0000                _OSCCONbits 008F   __size_of_i2c_slave_init 0019  
             _SSPCON2bits 0091                _SSPCONbits 0014  
